{
  "0": "SELECT CAST(SUM(CASE WHEN T2.`FRPM Count (K-12)` > 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'alameda county';\t----- bird -----\tcalifornia_schools",
  "1": "SELECT DISTINCT `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` FROM frpm WHERE `Enrollment (Ages 5-17)` IS NOT NULL ORDER BY `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
  "2": "SELECT DISTINCT T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Fresno County Office of Education';\t----- bird -----\tcalifornia_schools",
  "3": "SELECT T2.MailStreet FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.CDSCode DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "4": "SELECT T1.Phone FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.OpenDate > '2000-01-01';\t----- bird -----\tcalifornia_schools",
  "5": "SELECT COUNT(DISTINCT T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath < 400 AND T1.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
  "6": "SELECT DISTINCT T1.CDSCode FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumTstTakr > 500 AND T1.Magnet = 1;\t----- bird -----\tcalifornia_schools",
  "7": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = ( SELECT MAX(NumGE1500) FROM satscores );\t----- bird -----\tcalifornia_schools",
  "8": "SELECT T2.NumTstTakr FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "9": "SELECT COUNT(DISTINCT T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.FundingType = 'Charter-funded' AND T2.AvgScrMath > 560;\t----- bird -----\tcalifornia_schools",
  "10": "SELECT COUNT(T1.CDSCode) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead = ( SELECT MAX(AvgScrRead) FROM satscores );\t----- bird -----\tcalifornia_schools",
  "11": "SELECT CDSCode FROM frpm WHERE `Enrollment (K-12)` + `Enrollment (Ages 5-17)` > 500;\t----- bird -----\tcalifornia_schools",
  "12": "SELECT MAX(CAST(T2.`Free Meal Count (Ages 5-17)` AS REAL) / T2.`Enrollment (Ages 5-17)` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 / T1.NumTstTakr > 0.3;\t----- bird -----\tcalifornia_schools",
  "13": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr > 0 AND T1.NumGE1500 / T1.NumTstTakr > 0 ORDER BY T1.NumGE1500 / T1.NumTstTakr DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
  "14": "SELECT T2.NCESSchool FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`Enrollment (Ages 5-17)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
  "15": "SELECT dname FROM satscores WHERE AvgScrRead = ( SELECT MAX(AvgScrRead) FROM satscores );\t----- bird -----\tcalifornia_schools",
  "16": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.District = 'Alameda' AND T2.NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
  "17": "SELECT DISTINCT T2.CharterNum FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite = 499;\t----- bird -----\tcalifornia_schools",
  "18": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.FundingType = 'Directly Funded' AND T2.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
  "19": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "20": "SELECT COUNT(T1.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Low Grade\" = 9 AND T1.\"High Grade\" = 12;\t----- bird -----\tcalifornia_schools",
  "21": "SELECT COUNT(T) FROM ( SELECT CASE WHEN SUM(`Free Meal Count (K-12)`) > 500 AND SUM(`Free Meal Count (K-12)`) < 700 THEN 1 ELSE NULL END AS T FROM frpm WHERE `County Name` = 'Los Angeles County' GROUP BY `County Name` ) WHERE T IS NOT NULL;\t----- bird -----\tcalifornia_schools",
  "22": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'contra costa county' GROUP BY T2.School ORDER BY SUM(T1.NumTstTakr) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "23": "SELECT T1.Street FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.CDSCode IN ( SELECT CDSCode FROM frpm GROUP BY CDSCode HAVING SUM(CASE WHEN `Enrollment (K-12)` > 30 THEN 1 ELSE 0 END) - SUM(CASE WHEN `Enrollment (Ages 5-17)` > 30 THEN 1 ELSE 0 END) > 0 );\t----- bird -----\tcalifornia_schools",
  "24": "SELECT DISTINCT T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T3.cds = T2.CDSCode WHERE T3.NumGE1500 > 0 AND T1.\"Percent Eligible for Free Meals\" > 0.1;\t----- bird -----\tcalifornia_schools",
  "25": "SELECT DISTINCT T2.School, T2.FundingType FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 400 AND T2.School LIKE '%river%';\t----- bird -----\tcalifornia_schools",
  "26": "SELECT T2.State, T2.City, T2.Street, T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.State = 'CA' AND T2.City = 'Monterey' GROUP BY T2.Street, T2.City, T2.State, T2.Zip HAVING COUNT(T2.Street) > 800;\t----- bird -----\tcalifornia_schools",
  "27": "SELECT T2.AvgScrWrite, T1.phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE STRFTIME('%Y', T1.OpenDate) > '1991' AND STRFTIME('%Y', T1.OpenDate) < '2000';\t----- bird -----\tcalifornia_schools",
  "28": "SELECT AVG(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`), T2.NAME, T2.`Enrollment (K-12)`, T2.`Enrollment (Ages 5-17)` FROM frpm AS T1 INNER JOIN `schools locally funded` AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter School (Y/N)` = 0 GROUP BY T2.NAME HAVING SUM(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > ( SELECT AVG(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN `schools locally funded` AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter School (Y/N)` = 0 );\t----- bird -----\tcalifornia_schools",
  "29": "SELECT T2.`Academic Year` FROM frpm AS T1 INNER JOIN `frpm` AS T2 ON T2.`Low Grade` = T1.`High Grade` WHERE T1.`Enrollment (K-12)` = ( SELECT MAX(`Enrollment (K-12)`) FROM frpm );\t----- bird -----\tcalifornia_schools",
  "30": "SELECT T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode GROUP BY T2.City ORDER BY COUNT(T2.City) LIMIT 5;\t----- bird -----\tcalifornia_schools",
  "31": "SELECT CAST(SUM(`FRPM Count (K-12)`) AS REAL) * 100 / SUM(`Enrollment (K-12)`) FROM frpm WHERE `Grade Range Start` = 1 AND `Grade Range End` = 12 GROUP BY `School Name` ORDER BY SUM(`Enrollment (K-12)`) DESC LIMIT 10;\t----- bird -----\tcalifornia_schools",
  "32": "SELECT CAST(SUM(CASE WHEN T2.`FRPM Count (K-12)` > 0 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.`Enrollment (K-12)` > 0 THEN 1 ELSE 0 END) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.FundingType = 66 ORDER BY T2.`FRPM Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
  "33": "SELECT T1.website FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
  "34": "SELECT CAST(SUM(CASE WHEN T2.`Free Meal Count (Ages 5-17)` > 0 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(T2.`Enrollment (Ages 5-17)`) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Kacey' AND T1.AdmLName1 = 'Gibson';\t----- bird -----\tcalifornia_schools",
  "35": "SELECT T2.AdmEmail1 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Charter School (Y/N)\" = 1 ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "36": "SELECT T2.AdmFName1, T2.AdmLName1 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = ( SELECT MAX(NumGE1500) FROM satscores );\t----- bird -----\tcalifornia_schools",
  "37": "SELECT T2.Street, T2.City, T2.Zip, T2.State FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr IS NOT NULL ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "38": "SELECT T2.website FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Los Angeles County' AND T1.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
  "39": "SELECT AVG(T2.NumTstTakr) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE STRFTIME('%Y', T1.OpenDate) = '1980' AND T1.OpenDate >= '1980-01-01' AND T1.OpenDate <= '1980-12-31';\t----- bird -----\tcalifornia_schools",
  "40": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.District = 'Fresno Unif Sch Dist' ORDER BY T1.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "41": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' ORDER BY T1.AvgScrRead DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
  "42": "SELECT T2.EdOpsName FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath = ( SELECT MAX(AvgScrMath) FROM satscores );\t----- bird -----\tcalifornia_schools",
  "43": "SELECT T2.AvgScrMath, T1.County FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead + T2.AvgScrWrite + T2.AvgScrMath LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "44": "SELECT T2.AvgScrWrite, T1.City FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = ( SELECT MAX(NumGE1500) FROM satscores );\t----- bird -----\tcalifornia_schools",
  "45": "SELECT T2.AvgScrRead, T2.AvgScrWrite FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.AdmFName1 = 'Ricci' AND T1.AdmLName1 = 'Ulrich';\t----- bird -----\tcalifornia_schools",
  "46": "SELECT T2.state FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.DOC = 31 GROUP BY T2.state ORDER BY COUNT(T2.CDSCode) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "47": "SELECT CAST(COUNT(CDSCode) AS REAL) / 12 FROM schools WHERE County = 'Alameda County' AND DOC = 52 AND STRFTIME('%Y', OpenDate) = '1980';\t----- bird -----\tcalifornia_schools",
  "48": "SELECT CAST(SUM(CASE WHEN DOC = 52 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN DOC = 51 THEN 1 ELSE 0 END) FROM schools WHERE County = 'orange county';\t----- bird -----\tcalifornia_schools",
  "49": "SELECT DISTINCT County, ClosedDate FROM schools WHERE County IS NOT NULL AND ClosedDate IS NOT NULL ORDER BY ClosedDate DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "50": "SELECT T2.Street, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 5, 1;\t----- bird -----\tcalifornia_schools",
  "51": "SELECT T2.MailStreet, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "52": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.MailCity = 'Lafayette' AND T2.NumGE1500 = 1;\t----- bird -----\tcalifornia_schools",
  "53": "SELECT SUM(T2.NumTstTakr) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.MailCity = 'Fresno';\t----- bird -----\tcalifornia_schools",
  "54": "SELECT School, MailZip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian';\t----- bird -----\tcalifornia_schools",
  "55": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END) FROM schools WHERE MailState = 'CA';\t----- bird -----\tcalifornia_schools",
  "56": "SELECT COUNT(*) FROM schools WHERE StatusType = 'Active' AND MailState = 'CA';\t----- bird -----\tcalifornia_schools",
  "57": "SELECT T1.Phone, T1.Ext FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrWrite DESC LIMIT 332, 1;\t----- bird -----\tcalifornia_schools",
  "58": "SELECT Phone, Ext, School FROM schools WHERE Zip = 95203 AND Ext = 3704;\t----- bird -----\tcalifornia_schools",
  "59": "SELECT T1.Website FROM schools AS T1 INNER JOIN schools AS T2 ON T1.AdmFName1 = T2.AdmFName1 AND T1.AdmLName1 = T2.AdmLName1 WHERE T1.AdmFName2 = T2.AdmFName2 AND T1.AdmLName2 = T2.AdmLName2 AND T1.AdmFName1 = 'Mike' AND T1.AdmLName1 = 'Larson' AND T2.AdmFName1 = 'Dante' AND T2.AdmLName1 = 'Alvarez';\t----- bird -----\tcalifornia_schools",
  "60": "SELECT DISTINCT Website FROM schools WHERE Charter = 1 AND Virtual = 'P';\t----- bird -----\tcalifornia_schools",
  "61": "SELECT COUNT(DOC) FROM schools WHERE City = 'Hickman' AND DOC = 52 AND Charter = 1;\t----- bird -----\tcalifornia_schools",
  "62": "SELECT COUNT(T1.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`FRPM Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18;\t----- bird -----\tcalifornia_schools",
  "63": "SELECT AdmFName1, AdmLName1, School, City FROM schools WHERE Charter = 1 AND School = 'Charleston' AND City = 'Charleston';\t----- bird -----\tcalifornia_schools",
  "64": "SELECT COUNT(Charter) FROM schools WHERE MailCity = 'Handford' AND Charter = '00D4';\t----- bird -----\tcalifornia_schools",
  "65": "SELECT CAST(SUM(CASE WHEN T2.FundingType = 'Locally Funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'san clara county';\t----- bird -----\tcalifornia_schools",
  "66": "SELECT COUNT(OpenDate) FROM schools WHERE County = 'Stanislaus' AND FundingType = 'Directly Funded' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31';\t----- bird -----\tcalifornia_schools",
  "67": "SELECT SUM(CASE WHEN City = 'San Francisco' THEN 1 ELSE 0 END) FROM schools;\t----- bird -----\tcalifornia_schools",
  "68": "SELECT T2.County FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SOC = 11 AND STRFTIME('%Y', T1.CDSCode) BETWEEN '1980' AND '1989' GROUP BY T2.County ORDER BY COUNT(T2.CDSCode) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "69": "SELECT NCESDist FROM schools WHERE SOC = 31;\t----- bird -----\tcalifornia_schools",
  "70": "SELECT SUM(CASE WHEN StatusType = 'Active' THEN 1 ELSE 0 END) AS Active , SUM(CASE WHEN StatusType = 'Closed' THEN 1 ELSE 0 END) AS Closed FROM schools WHERE County = 'Alpine';\t----- bird -----\tcalifornia_schools",
  "71": "SELECT T2.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.City = 'Fresno' AND T1.Magnet = 0;\t----- bird -----\tcalifornia_schools",
  "72": "SELECT COUNT(T2.`Academic Year`) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.EdOpsCode = 'SSS' AND T2.`Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
  "73": "SELECT COUNT(T2.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.MailStreet = 'PO Box 1040';\t----- bird -----\tcalifornia_schools",
  "74": "SELECT T2.`Low Grade` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.EdOpsCode = 'SPECON' AND T1.CDSCode = 613360 ORDER BY T2.`Low Grade` LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "75": "SELECT DISTINCT T2.EILName FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Breakfast Provision 2 = 37;\t----- bird -----\tcalifornia_schools",
  "76": "SELECT T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Low Grade\" = 9 AND T1.\"High Grade\" = 12;\t----- bird -----\tcalifornia_schools",
  "77": "SELECT T2.School, CAST(SUM(CASE WHEN T1.County = 'Los Angeles County' THEN T2.FRPM ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.County = 'Los Angeles County' THEN T2.ENROLLMENT ELSE 0 END) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode GROUP BY T2.School;\t----- bird -----\tcalifornia_schools",
  "78": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(GSserved) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "79": "SELECT T2.County FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Virtual = 'F' AND T2.County IN ('san diego', 'santa barbara') GROUP BY T2.County ORDER BY COUNT(T2.CDSCode) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "80": "SELECT DISTINCT T1.`School Type`, T2.Latitude FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Latitude = ( SELECT MAX(T2.Latitude) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode );\t----- bird -----\tcalifornia_schools",
  "81": "SELECT T2.city, T2.school FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.state = 'CA' ORDER BY T2.latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "82": "SELECT GSoffered FROM schools ORDER BY Longitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
  "83": "SELECT T2.City, COUNT(T2.City) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 GROUP BY T2.City;\t----- bird -----\tcalifornia_schools",
  "84": "SELECT AdmFName1 FROM schools GROUP BY AdmFName1 ORDER BY COUNT(AdmFName1) DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
  "85": "SELECT CAST(SUM(CASE WHEN T2.`FRPM Count (K-12)` > 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.`Enrollment (K-12)`), T1.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
  "86": "SELECT AdmLName1, County, School FROM schools WHERE Charter = 40;\t----- bird -----\tcalifornia_schools",
  "87": "SELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino County' AND DOC = 54 AND SOC = 62 AND OpenDate BETWEEN '1/1/2009' AND '12/31/2010';\t----- bird -----\tcalifornia_schools",
  "88": "SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = ( SELECT MAX(NumGE1500) FROM satscores );\t----- bird -----\tcalifornia_schools",
  "89": "SELECT COUNT(T1.account_id) FROM trans AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T2.A3 = 'East Bohemia' AND T1.operation = 'VKLAD';\t----- bird -----\tfinancial",
  "90": "SELECT COUNT(T1.account_id) FROM loan AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T2.A3 = 'Praha';\t----- bird -----\tfinancial",
  "91": "SELECT AVG(A12), AVG(A13) FROM district;\t----- bird -----\tfinancial",
  "92": "SELECT COUNT(T1.district_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A11 BETWEEN 6000 AND 10000 AND T1.gender = 'F';\t----- bird -----\tfinancial",
  "93": "SELECT COUNT(T1.gender) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'North Bohemia' AND T2.A11 > 8000 AND T1.gender = 'M';\t----- bird -----\tfinancial",
  "94": "SELECT MIN(T3.birth_date), MAX(T3.birth_date), T1.A11 FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN client AS T3 WHERE T2.gender = 'F' ORDER BY T3.birth_date LIMIT 1;\t----- bird -----\tfinancial",
  "95": "SELECT T1.district_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' ORDER BY T1.birth_date DESC, T2.A11 DESC LIMIT 1;\t----- bird -----\tfinancial",
  "96": "SELECT COUNT(T1.disp_id) FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'OWNER' AND T2.issued = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
  "97": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
  "98": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T1.`date`) = '1997' ORDER BY T1.amount ASC LIMIT 1;\t----- bird -----\tfinancial",
  "99": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T2.`date`) = '1993' AND T2.duration > 12 ORDER BY T2.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
  "100": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T1.gender = 'F' AND strftime('%Y', T1.birth_date) < '1950' AND T3.A2 = 'Slokolov';\t----- bird -----\tfinancial",
  "101": "SELECT account_id FROM account WHERE STRFTIME('%Y', date) = '1995' ORDER BY date ASC LIMIT 1;\t----- bird -----\tfinancial",
  "102": "SELECT account_id FROM account WHERE STRFTIME('%Y', date) < '1997' AND SUM(account_id) > 3000;\t----- bird -----\tfinancial",
  "103": "SELECT disp_id FROM card WHERE STRFTIME('%Y-%m-%d', issued) = '1994-03-03';\t----- bird -----\tfinancial",
  "104": "SELECT T1.date FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 840 AND T1.`date` = '1998-10-14';\t----- bird -----\tfinancial",
  "105": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25';\t----- bird -----\tfinancial",
  "106": "SELECT T1.amount FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN client AS T4 ON T2.client_id = T4.client_id WHERE STRFTIME('%Y-%m-%d', T3.issued) = '1995-10-08' ORDER BY T1.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
  "107": "SELECT T1.gender FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id ORDER BY T1.birth_date ASC, T2.A11 DESC LIMIT 1;\t----- bird -----\tfinancial",
  "108": "SELECT T2.amount FROM disp AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T1.client_id = T4.client_id INNER JOIN trans AS T5 ON T3.account_id = T5.account_id ORDER BY T2.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
  "109": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.A2 = 'Jesenik' AND T1.gender = 'F';\t----- bird -----\tfinancial",
  "110": "SELECT T2.disp_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y-%m-%d', T1.`date`) = '1998-09-02' AND T1.amount = 5100;\t----- bird -----\tfinancial",
  "111": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Litomerice' AND STRFTIME('%Y', T1.`date`) = '1996';\t----- bird -----\tfinancial",
  "112": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.gender = 'F' AND T3.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
  "113": "SELECT T1.birth_date FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.amount WHERE T2.amount = 98832 AND STRFTIME('%Y-%m-%d', T2.`date`) = '1996-01-03';\t----- bird -----\tfinancial",
  "114": "SELECT T2.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A3 = 'Praha';\t----- bird -----\tfinancial",
  "115": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Jihočeský' AND T2.A4 = 'jihob';\t----- bird -----\tfinancial",
  "116": "SELECT CAST((SUM(CASE WHEN T1.`date` = '1998-12-27' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN T1.`date` = '1993-03-22' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T1.`date` = '1993-03-22' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN account AS T4 ON T2.account_id = T4.account_id;\t----- bird -----\tfinancial",
  "117": "SELECT CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) * 100 / SUM(amount) FROM loan;\t----- bird -----\tfinancial",
  "118": "SELECT CAST(SUM(CASE WHEN status = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM loan WHERE amount < 100000;\t----- bird -----\tfinancial",
  "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.`date`) = '1993' AND T2.A2 != 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
  "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.date >= 1995 AND T1.date <= 2000 AND T2.district_id = 'east Bohemia';\t----- bird -----\tfinancial",
  "121": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice';\t----- bird -----\tfinancial",
  "122": "SELECT T2.A2, T2.A3 FROM loan AS T1 INNER JOIN district AS T2 ON T1.loan_id = 4990;\t----- bird -----\tfinancial",
  "123": "SELECT T1.account_id, T3.district_id, T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T3.district_id = T2.district_id WHERE T1.amount > 300000;\t----- bird -----\tfinancial",
  "124": "SELECT T1.loan_id, T2.district_id, T2.A11 FROM loan AS T1 INNER JOIN district AS T2 ON T1.duration = 60;\t----- bird -----\tfinancial",
  "125": "SELECT T2.district_id, (T2.A13 - T2.A12) * 100 / T2.A12 FROM loan AS T1 INNER JOIN district AS T2 ON T1.status = 'D';\t----- bird -----\tfinancial",
  "126": "SELECT CAST(SUM(CASE WHEN T1.A2 = 'Decin' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T2.date) = '1993';\t----- bird -----\tfinancial",
  "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
  "128": "SELECT T2.A2 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.A2 ORDER BY COUNT(T2.A2) DESC LIMIT 10;\t----- bird -----\tfinancial",
  "129": "SELECT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.`date` LIKE '1996-01%' AND T1.type = 'VYDAJ' GROUP BY T3.A2 ORDER BY COUNT(T1.account_id) DESC LIMIT 10;\t----- bird -----\tfinancial",
  "130": "SELECT COUNT(T1.client_id) FROM disp AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T2.A3 = 'South Bohemia' AND T1.account_id NOT IN ( SELECT account_id FROM `card` );\t----- bird -----\tfinancial",
  "131": "SELECT T2.A3 FROM loan AS T1 INNER JOIN district AS T2 ON T1.status = 'C' AND T1.status = 'D' GROUP BY T2.district_id ORDER BY COUNT(T1.status) DESC LIMIT 1;\t----- bird -----\tfinancial",
  "132": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T2.gender = 'M';\t----- bird -----\tfinancial",
  "133": "SELECT A2 FROM district ORDER BY A13 DESC LIMIT 1;\t----- bird -----\tfinancial",
  "134": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A16 = ( SELECT MAX(A16) FROM district );\t----- bird -----\tfinancial",
  "135": "SELECT COUNT(T1.account_id) FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN account AS T4 ON T2.account_id = T4.account_id WHERE T1.operation = 'VYBER KARTOU' AND T4.frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
  "136": "SELECT COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T1.`date`) BETWEEN '1995' AND '1997' AND T1.amount > 250000 AND T2.frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
  "137": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status = 'C' AND T1.district_id = 1;\t----- bird -----\tfinancial",
  "138": "SELECT COUNT(T1.gender) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A15 = ( SELECT A15 FROM district ORDER BY A15 DESC LIMIT 1, 1 ) AND T1.gender = 'M';\t----- bird -----\tfinancial",
  "139": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'DISPONENT';\t----- bird -----\tfinancial",
  "140": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek';\t----- bird -----\tfinancial",
  "141": "SELECT T2.A2 FROM trans AS T1 INNER JOIN district AS T2 ON T1.`date` = T2.district_id WHERE T1.amount > 10000 AND STRFTIME('%Y', T1.`date`) = '1997';\t----- bird -----\tfinancial",
  "142": "SELECT T1.account_id FROM order AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.k_symbol = 'SIPO' AND T2.district_id = 21;\t----- bird -----\tfinancial",
  "143": "SELECT T2.account_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type IN ('gold', 'junior') GROUP BY T2.account_id HAVING COUNT(T1.type) = 2;\t----- bird -----\tfinancial",
  "144": "SELECT AVG(amount) FROM trans WHERE STRFTIME('%Y', `date`) = '2021' AND operation = 'VYBER KARTOU';\t----- bird -----\tfinancial",
  "145": "SELECT DISTINCT T2.account FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN card AS T4 ON T3.disp_id = T4.disp_id WHERE T1.operation = 'VYBER KARTOU' AND T1.amount < ( SELECT AVG(T1.amount) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN card AS T4 ON T3.disp_id = T4.disp_id WHERE T1.operation = 'VYBER KARTOU' AND STRFTIME('%Y', T1.`date`) = '1998' );\t----- bird -----\tfinancial",
  "146": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id LEFT JOIN loan AS T4 ON T2.client_id = T4.client_id WHERE T1.gender = 'F';\t----- bird -----\tfinancial",
  "147": "SELECT COUNT(T1.gender) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' AND T1.gender = 'F';\t----- bird -----\tfinancial",
  "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Tabor';\t----- bird -----\tfinancial",
  "149": "SELECT T1.district_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A11 > 8000 AND T2.A11 <= 9000;\t----- bird -----\tfinancial",
  "150": "SELECT COUNT(T1.account_id) FROM order AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A3 = 'North Bohemia' AND T1.bank_to = 'AB';\t----- bird -----\tfinancial",
  "151": "SELECT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'VYDAJ';\t----- bird -----\tfinancial",
  "152": "SELECT AVG(T2.A15) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 > 4000 AND STRFTIME('%Y', T1.`date`) >= '1997';\t----- bird -----\tfinancial",
  "153": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.type = 'OWNER' AND T1.type = 'classic';\t----- bird -----\tfinancial",
  "154": "SELECT COUNT(T1.gender) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Hl.m. Praha' AND T1.gender = 'M';\t----- bird -----\tfinancial",
  "155": "SELECT CAST(SUM(CASE WHEN type = 'gold' AND STRFTIME('%Y', issued) < '1998' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM card;\t----- bird -----\tfinancial",
  "156": "SELECT T3.client_id FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T2.type = 'OWNER' ORDER BY T1.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
  "157": "SELECT T2.A15 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.account_id = 532;\t----- bird -----\tfinancial",
  "158": "SELECT T1.district_id FROM account AS T1 INNER JOIN order AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333;\t----- bird -----\tfinancial",
  "159": "SELECT T1.operation FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER' AND T2.account_id = 3356;\t----- bird -----\tfinancial",
  "160": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.amount < 200000;\t----- bird -----\tfinancial",
  "161": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.client_id = 13539;\t----- bird -----\tfinancial",
  "162": "SELECT T2.A3 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541;\t----- bird -----\tfinancial",
  "163": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status = 'A' GROUP BY T1.district_id ORDER BY COUNT(T1.account_id) DESC LIMIT 1;\t----- bird -----\tfinancial",
  "164": "SELECT T1.account_to FROM order AS T1 INNER JOIN client AS T2 ON T1.account_to = T2.client_id WHERE T1.order_id = 32423;\t----- bird -----\tfinancial",
  "165": "SELECT T1.trans_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5;\t----- bird -----\tfinancial",
  "166": "SELECT COUNT(account_id) FROM account WHERE district_id = 6;\t----- bird -----\tfinancial",
  "167": "SELECT card_id FROM card WHERE type = 'junior' AND STRFTIME('%Y', issued) >= '1997';\t----- bird -----\tfinancial",
  "168": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A11 > 10000;\t----- bird -----\tfinancial",
  "169": "SELECT SUM(T3.amount) * 100 / SUM(T2.amount) FROM ( SELECT T1.amount, T2.gender FROM loan AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id WHERE STRFTIME('%Y', T1.`date`) BETWEEN '1996' AND '1997' ) AS T3 GROUP BY T3.gender HAVING T3.gender = 'M';\t----- bird -----\tfinancial",
  "170": "SELECT COUNT(trans_id) FROM trans WHERE STRFTIME('%Y', `date`) > '1995' AND operation = 'VYBER KARTOU';\t----- bird -----\tfinancial",
  "171": "SELECT SUM(CASE WHEN A3 = 'East Bohemia' THEN A16 ELSE 0 END) - SUM(CASE WHEN A3 = 'North Bohemia' THEN A16 ELSE 0 END) FROM district;\t----- bird -----\tfinancial",
  "172": "SELECT SUM(IIF(account_id BETWEEN 1 AND 10, 1, 0)) FROM disp WHERE type IN ('OWNER', 'DISPONENT');\t----- bird -----\tfinancial",
  "173": "SELECT COUNT(account_to), SUM(amount) FROM order WHERE k_symbol = 'SIPO' AND account_to = 3;\t----- bird -----\tfinancial",
  "174": "SELECT STRFTIME('%Y', birth_date) FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
  "175": "SELECT COUNT(T1.account_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'OWNER' AND T2.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
  "176": "SELECT T1.amount, T1.payments FROM loan AS T1 INNER JOIN order AS T2 ON T1.account_id = T2.account_id WHERE T2.account_id = 992;\t----- bird -----\tfinancial",
  "177": "SELECT T1.amount, T2.gender FROM trans AS T1 INNER JOIN client AS T2 ON T1.account = T2.client_id WHERE T1.trans_id = 851;\t----- bird -----\tfinancial",
  "178": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.client_id = 9;\t----- bird -----\tfinancial",
  "179": "SELECT SUM(T1.amount) FROM order AS T1 WHERE T1.account_id = 617 AND STRFTIME('%Y', T1.`date`) = '1998';\t----- bird -----\tfinancial",
  "180": "SELECT T1.client_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'East Bohemia' AND STRFTIME('%Y', T1.birth_date) BETWEEN '1983' AND '1987';\t----- bird -----\tfinancial",
  "181": "SELECT T1.client_id FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.amount WHERE T1.gender = 'F' ORDER BY T2.amount DESC LIMIT 3;\t----- bird -----\tfinancial",
  "182": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN order AS T2 ON T1.client_id = T2.k_symbol WHERE T1.gender = 'M' AND STRFTIME('%Y', T1.birth_date) BETWEEN '1974' AND '1976' AND T2.amount > 4000 AND T2.k_symbol = 'SIPO';\t----- bird -----\tfinancial",
  "183": "SELECT COUNT(account_id) FROM account WHERE district_id = 62 AND STRFTIME('%Y', date) > '1996';\t----- bird -----\tfinancial",
  "184": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'F' AND T3.type = 'junior';\t----- bird -----\tfinancial",
  "185": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Praha';\t----- bird -----\tfinancial",
  "186": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.client_id = 1;\t----- bird -----\tfinancial",
  "187": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
  "188": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T2.`date`) - STRFTIME('%Y', T1.`date`) > 24 AND STRFTIME('%Y', T2.`date`) < '1997' ORDER BY T2.amount ASC LIMIT 1;\t----- bird -----\tfinancial",
  "189": "SELECT T2.account_to FROM client AS T1 INNER JOIN order AS T2 ON T1.district_id = T2.account_to INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T1.gender = 'F' ORDER BY T3.A11 LIMIT 1;\t----- bird -----\tfinancial",
  "190": "SELECT COUNT(T1.district_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'East Bohemia' AND STRFTIME('%Y', T1.birth_date) = '1920';\t----- bird -----\tfinancial",
  "191": "SELECT COUNT(T1.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration = 24 AND T2.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
  "192": "SELECT AVG(amount) FROM loan WHERE status = 'C' OR status = 'D';\t----- bird -----\tfinancial",
  "193": "SELECT client_id, district_id FROM client WHERE client_id IN ( SELECT account_id FROM `order` WHERE type = 'PERMANENT' OR type = 'LOAN' );\t----- bird -----\tfinancial",
  "194": "SELECT T1.client_id, T1.birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T2.type = 'gold' AND T1.birth_date IS NOT NULL;\t----- bird -----\tfinancial",
  "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
  "196": "SELECT COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.element = 'Cl';\t----- bird -----\ttoxicology",
  "197": "SELECT CAST(SUM(CASE WHEN T3.element = 'O' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T2.atom_id WHERE T1.bond_type = '-';\t----- bird -----\ttoxicology",
  "198": "SELECT CAST(COUNT(CASE WHEN T1.bond_type = '-' THEN T2.molecule_id ELSE NULL END) AS REAL) / COUNT(T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
  "199": "SELECT COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'na' AND T1.label = '-';\t----- bird -----\ttoxicology",
  "200": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '#';\t----- bird -----\ttoxicology",
  "201": "SELECT CAST(SUM(CASE WHEN T1.element = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '=';\t----- bird -----\ttoxicology",
  "202": "SELECT COUNT(bond_type) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
  "203": "SELECT COUNT(atom_id) FROM atom WHERE element != 'Br';\t----- bird -----\ttoxicology",
  "204": "SELECT COUNT(molecule_id) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+';\t----- bird -----\ttoxicology",
  "205": "SELECT molecule_id FROM atom WHERE element = 'si';\t----- bird -----\ttoxicology",
  "206": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
  "207": "SELECT DISTINCT CASE WHEN T1.element = 'cl' THEN 'Clorine' WHEN T1.element = 'c' THEN 'Carbon' WHEN T1.element = 'h' THEN 'Hydrogen' WHEN T1.element = 'o' THEN 'Oxygen' WHEN T1.element = 's' THEN 'Sulphur' WHEN T1.element = 'n' THEN 'Nitrogen' WHEN T1.element = 'p' THEN 'Phosphorus' WHEN T1.element = 'na' THEN 'Sodium' WHEN T1.element = 'br' THEN 'Bromine' WHEN T1.element = 'f' THEN 'Fluorine' WHEN T1.element = 'i' THEN 'Iodine' WHEN T1.element = 'sn' THEN 'Tin' WHEN T1.element = 'pb' THEN 'Lead' WHEN T1.element = 'te' THEN 'Tellurium' WHEN T1.element = 'ca' THEN 'Calcium' END AS Element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '=';\t----- bird -----\ttoxicology",
  "208": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'h' GROUP BY T1.label ORDER BY COUNT(T1.label) DESC LIMIT 1;\t----- bird -----\ttoxicology",
  "209": "SELECT DISTINCT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T2.atom_id WHERE T3.element = 'Te';\t----- bird -----\ttoxicology",
  "210": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-';\t----- bird -----\ttoxicology",
  "211": "SELECT T1.atom_id2 FROM connected AS T1 INNER JOIN molecule AS T2 ON T1.atom_id = T1.atom_id2 WHERE T2.label = '-';\t----- bird -----\ttoxicology",
  "212": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
  "213": "SELECT DISTINCT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR004_8' OR T2.atom_id = 'TR004_20';\t----- bird -----\ttoxicology",
  "214": "SELECT CASE WHEN T1.label = '+' THEN 'Non-carcinogenic' ELSE 'Carcinogenic' END FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element != 'sn';\t----- bird -----\ttoxicology",
  "215": "SELECT COUNT(T1.atom_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T1.bond_id WHERE T2.element IN ('i', 's') AND T3.bond_type = '-';\t----- bird -----\ttoxicology",
  "216": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#';\t----- bird -----\ttoxicology",
  "217": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR181';\t----- bird -----\ttoxicology",
  "218": "SELECT CAST(SUM(CASE WHEN T1.element = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
  "219": "SELECT CAST(COUNT(CASE WHEN T1.bond_type = '#' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
  "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' LIMIT 3;\t----- bird -----\ttoxicology",
  "221": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.molecule_id = 'TR001' AND T1.bond_id = 'TR001_2_6';\t----- bird -----\ttoxicology",
  "222": "SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END) FROM molecule;\t----- bird -----\ttoxicology",
  "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR_000_2_5';\t----- bird -----\ttoxicology",
  "224": "SELECT DISTINCT bond_id FROM connected WHERE atom_id = 'TR000_2' AND atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
  "225": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' LIMIT 5;\t----- bird -----\ttoxicology",
  "226": "SELECT CAST(COUNT(CASE WHEN T1.bond_type = ' = ' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR008';\t----- bird -----\ttoxicology",
  "227": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id) FROM molecule;\t----- bird -----\ttoxicology",
  "228": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR206';\t----- bird -----\ttoxicology",
  "229": "SELECT DISTINCT T1.bond_type FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
  "230": "SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
  "231": "SELECT T2.bond_type, T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR018' GROUP BY T2.bond_type ORDER BY COUNT(T2.bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
  "232": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-' LIMIT 3;\t----- bird -----\ttoxicology",
  "233": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006' LIMIT 2;\t----- bird -----\ttoxicology",
  "234": "SELECT COUNT(bond_id) FROM connected WHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12';\t----- bird -----\ttoxicology",
  "235": "SELECT COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'Br';\t----- bird -----\ttoxicology",
  "236": "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
  "237": "SELECT T1.molecule_id, T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
  "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
  "239": "SELECT COUNT(atom_id) FROM connected WHERE atom_id = 'TR%_19';\t----- bird -----\ttoxicology",
  "240": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
  "241": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
  "242": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE SUBSTR(T2.atom_id, 7, 2) BETWEEN 21 AND 25 AND T1.label = '+';\t----- bird -----\ttoxicology",
  "243": "SELECT DISTINCT T1.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T2.atom_id WHERE T3.element IN ('p', 'n');\t----- bird -----\ttoxicology",
  "244": "SELECT CASE WHEN SUM(IIF(T1.label = '+', 1, 0)) > SUM(IIF(T1.label = '-', 1, 0)) THEN '+' ELSE '-' END FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=';\t----- bird -----\ttoxicology",
  "245": "SELECT CAST(COUNT(T1.bond_id) AS REAL) / COUNT(DISTINCT T2.atom_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'i';\t----- bird -----\ttoxicology",
  "246": "SELECT T1.bond_type, T2.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE SUBSTR(T2.atom_id, 7, 2) + 0 = 45;\t----- bird -----\ttoxicology",
  "247": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND T1.element != 'c';\t----- bird -----\ttoxicology",
  "248": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T1.atom_id WHERE T2.molecule_id = 'TR447' AND T2.bond_type = '#';\t----- bird -----\ttoxicology",
  "249": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
  "250": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
  "251": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' ORDER BY T1.element ASC LIMIT 1;\t----- bird -----\ttoxicology",
  "252": "SELECT DISTINCT T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'pb';\t----- bird -----\ttoxicology",
  "253": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#';\t----- bird -----\ttoxicology",
  "254": "SELECT CAST(COUNT(T3.bond_id) AS REAL) * 100 / COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.atom_id = T2.bond_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id GROUP BY T1.element HAVING COUNT(T1.element) ORDER BY COUNT(T1.element) DESC LIMIT 1;\t----- bird -----\ttoxicology",
  "255": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-';\t----- bird -----\ttoxicology",
  "256": "SELECT COUNT(atom_id) FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology",
  "257": "SELECT T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 's';\t----- bird -----\ttoxicology",
  "258": "SELECT DISTINCT T3.bond_type FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T1.bond_id WHERE T2.element = 'Tin';\t----- bird -----\ttoxicology",
  "259": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-';\t----- bird -----\ttoxicology",
  "260": "SELECT COUNT(T1.atom_id) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T1.atom_id WHERE T2.bond_type = '#' AND (T3.element = 'p' OR T3.element = 'br');\t----- bird -----\ttoxicology",
  "261": "SELECT DISTINCT T1.bond_id FROM connected AS T1 INNER JOIN molecule AS T2 ON T1.atom_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
  "262": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-';\t----- bird -----\ttoxicology",
  "263": "SELECT CAST(SUM(CASE WHEN T1.element = 'Cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-';\t----- bird -----\ttoxicology",
  "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
  "265": "SELECT molecule_id FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
  "266": "SELECT COUNT(molecule_id) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+';\t----- bird -----\ttoxicology",
  "267": "SELECT DISTINCT bond_type FROM bond WHERE molecule_id LIKE 'TR000%' OR molecule_id LIKE 'TR001%' OR molecule_id LIKE 'TR002%' OR molecule_id LIKE 'TR003%' OR molecule_id LIKE 'TR004%' OR molecule_id LIKE 'TR005%';\t----- bird -----\ttoxicology",
  "268": "SELECT DISTINCT CASE WHEN T3.element = 'cl' THEN 'Cl' WHEN T3.element = 'c' THEN 'C' WHEN T3.element = 'h' THEN 'H' WHEN T3.element = 'o' THEN 'O' WHEN T3.element = 's' THEN 'S' WHEN T3.element = 'n' THEN 'N' WHEN T3.element = 'p' THEN 'P' WHEN T3.element = 'na' THEN 'Na' WHEN T3.element = 'br' THEN 'Br' WHEN T3.element = 'f' THEN 'F' WHEN T3.element = 'i' THEN 'I' WHEN T3.element = 'sn' THEN 'Sn' WHEN T3.element = 'pb' THEN 'Pb' WHEN T3.element = 'te' THEN 'Te' WHEN T3.element = 'ca' THEN 'Ca' END AS \"result\" FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10';\t----- bird -----\ttoxicology",
  "269": "SELECT COUNT(atom_id) FROM atom WHERE element = 'i';\t----- bird -----\ttoxicology",
  "270": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'Ca' GROUP BY T1.label;\t----- bird -----\ttoxicology",
  "271": "SELECT CASE WHEN COUNT(DISTINCT T1.element) = 2 THEN 'yes' ELSE 'no' END FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_1_8';\t----- bird -----\ttoxicology",
  "272": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T3.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '#' AND T3.element = 'C' LIMIT 2;\t----- bird -----\ttoxicology",
  "273": "SELECT CAST(SUM(CASE WHEN T1.element = 'pb' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
  "274": "SELECT element FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
  "275": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '=';\t----- bird -----\ttoxicology",
  "276": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#';\t----- bird -----\ttoxicology",
  "277": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T2.atom_id WHERE T1.bond_id = 'TR005_16_26';\t----- bird -----\ttoxicology",
  "278": "SELECT COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '-';\t----- bird -----\ttoxicology",
  "279": "SELECT T1.label FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
  "280": "SELECT DISTINCT T1.bond_id, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#';\t----- bird -----\ttoxicology",
  "281": "SELECT DISTINCT CASE WHEN T2.element = 'cl' THEN 'Chlorine' END FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND SUBSTR(T2.atom_id, 7, 1) = '4';\t----- bird -----\ttoxicology",
  "282": "SELECT CAST(SUM(CASE WHEN T1.element = 'H' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.element), T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
  "283": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'Ca';\t----- bird -----\ttoxicology",
  "284": "SELECT DISTINCT CASE WHEN T3.bond_type = '=' THEN 'double' WHEN T3.bond_type = '#' THEN 'triple' ELSE 'single' END FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T1.bond_id WHERE T2.element = 'te';\t----- bird -----\ttoxicology",
  "285": "SELECT DISTINCT CASE WHEN T3.element = 'cl' THEN 'Chlorine' WHEN T3.element = 'c' THEN 'Carbon' WHEN T3.element = 'h' THEN 'Hydrogen' WHEN T3.element = 'o' THEN 'Oxygen' WHEN T3.element = 's' THEN 'Sulphur' WHEN T3.element = 'n' THEN 'Nitrogen' WHEN T3.element = 'p' THEN 'Phosphorus' WHEN T3.element = 'na' THEN 'Sodium' WHEN T3.element = 'br' THEN 'Bromine' WHEN T3.element = 'f' THEN 'Fluorine' WHEN T3.element = 'i' THEN 'Iodine' WHEN T3.element = 'sn' THEN 'Tin' WHEN T3.element = 'pb' THEN 'Lead' WHEN T3.element = 'te' THEN 'Tellurium' WHEN T3.element = 'ca' THEN 'Calcium' END AS name FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
  "286": "SELECT CAST(SUM(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM bond;\t----- bird -----\ttoxicology",
  "287": "SELECT CAST(COUNT(CASE WHEN T1.bond_type = ' = ' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR047';\t----- bird -----\ttoxicology",
  "288": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id WHERE T2.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
  "289": "SELECT CASE WHEN label = '+' THEN 'YES' ELSE 'NO' END FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
  "290": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR151';\t----- bird -----\ttoxicology",
  "291": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
  "292": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE SUBSTR(T1.molecule_id, 3, 3) > 10 AND SUBSTR(T1.molecule_id, 3, 3) < 50 AND T1.element = 'C';\t----- bird -----\ttoxicology",
  "293": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
  "294": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+';\t----- bird -----\ttoxicology",
  "295": "SELECT COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'H';\t----- bird -----\ttoxicology",
  "296": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T2.atom_id WHERE T3.atom_id = 'TR00_1';\t----- bird -----\ttoxicology",
  "297": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'C' AND T2.label = '-';\t----- bird -----\ttoxicology",
  "298": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'h';\t----- bird -----\ttoxicology",
  "299": "SELECT CASE WHEN label = '+' THEN 'YES' ELSE 'NO' END FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
  "300": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.molecule_id = 'TR186';\t----- bird -----\ttoxicology",
  "301": "SELECT DISTINCT T2.bond_type FROM `connected` AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id1 = 'TR007' AND T1.atom_id2 = '4' AND T1.bond_id = '19';\t----- bird -----\ttoxicology",
  "302": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
  "303": "SELECT SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) , COUNT(T2.bond_type) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006' AND T2.bond_type = '=';\t----- bird -----\ttoxicology",
  "304": "SELECT DISTINCT T1.molecule_id, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+';\t----- bird -----\ttoxicology",
  "305": "SELECT T1.bond_type, T2.atom_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-';\t----- bird -----\ttoxicology",
  "306": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#';\t----- bird -----\ttoxicology",
  "307": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
  "308": "SELECT COUNT(DISTINCT T1.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T2.atom_id WHERE T3.element = 'c';\t----- bird -----\ttoxicology",
  "309": "SELECT T1.molecule_id, COUNT(DISTINCT T2.bond_type) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR346';\t----- bird -----\ttoxicology",
  "310": "SELECT SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS num FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=';\t----- bird -----\ttoxicology",
  "311": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element != 's' AND T3.bond_type != '=';\t----- bird -----\ttoxicology",
  "312": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
  "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR005';\t----- bird -----\ttoxicology",
  "314": "SELECT COUNT(bond_type) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
  "315": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'Cl' AND T1.label = '+';\t----- bird -----\ttoxicology",
  "316": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'C' AND T1.label = '-';\t----- bird -----\ttoxicology",
  "317": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'Cl';\t----- bird -----\ttoxicology",
  "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
  "319": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
  "320": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
  "321": "SELECT T1.label FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.atom_id WHERE T2.atom_id IN ('TR000_2', 'TR000_4');\t----- bird -----\ttoxicology",
  "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
  "323": "SELECT CASE WHEN label = '+' THEN 'YES' ELSE 'NO' END FROM molecule WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
  "324": "SELECT CAST(COUNT(CASE WHEN bond_type = '-' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM bond;\t----- bird -----\ttoxicology",
  "325": "SELECT COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'n';\t----- bird -----\ttoxicology",
  "326": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 's' AND T3.bond_type = '=';\t----- bird -----\ttoxicology",
  "327": "SELECT molecule_id FROM molecule WHERE label = '-' GROUP BY molecule_id HAVING COUNT(molecule_id) > 5;\t----- bird -----\ttoxicology",
  "328": "SELECT DISTINCT CASE WHEN T3.element = 'cl' THEN 'Cl' END AS c1 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T2.atom_id WHERE T1.bond_type = '#' AND T3.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca');\t----- bird -----\ttoxicology",
  "329": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id ORDER BY COUNT(T2.molecule_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
  "330": "SELECT CAST(SUM(CASE WHEN T4.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T2.atom_id INNER JOIN molecule AS T4 ON T4.molecule_id = T3.molecule_id WHERE T1.bond_type = '#' AND T3.element = 'h';\t----- bird -----\ttoxicology",
  "331": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
  "332": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id BETWEEN 'TR004' AND 'TR010' AND T2.bond_type = '-';\t----- bird -----\ttoxicology",
  "333": "SELECT COUNT(T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'C' AND T2.molecule_id = 'TR008';\t----- bird -----\ttoxicology",
  "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-';\t----- bird -----\ttoxicology",
  "335": "SELECT COUNT(DISTINCT T1.atom_id) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T1.atom_id WHERE T2.bond_type = '=' AND T3.element = 'o';\t----- bird -----\ttoxicology",
  "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '-';\t----- bird -----\ttoxicology",
  "337": "SELECT DISTINCT T1.element, T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.molecule_id = 'TR016';\t----- bird -----\ttoxicology",
  "338": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T1.atom_id WHERE T2.bond_type = '=' AND T3.element = 'C' AND T3.molecule_id = 'TR012';\t----- bird -----\ttoxicology",
  "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o';\t----- bird -----\ttoxicology",
  "340": "SELECT name FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
  "341": "SELECT cardKingdomId FROM cards WHERE cardKingdomFoilId IS NULL AND borderColor = 'borderless';\t----- bird -----\tcard_games",
  "342": "SELECT name FROM cards ORDER BY faceConvertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
  "343": "SELECT name FROM cards WHERE edhrecRank < 100 AND frameVersion = 2015;\t----- bird -----\tcard_games",
  "344": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T2.format = 'gladiator' AND T1.rarity = 'mythic';\t----- bird -----\tcard_games",
  "345": "SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'vintage' AND T1.types = 'Artifact' AND T1.side IS NULL;\t----- bird -----\tcard_games",
  "346": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND (T1.power = '*' OR T1.power IS NULL) AND T2.status = 'Legal';\t----- bird -----\tcard_games",
  "347": "SELECT T1.name, T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniel';\t----- bird -----\tcard_games",
  "348": "SELECT T1.date, T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Sublime Epiphany' AND T2.number = '74s';\t----- bird -----\tcard_games",
  "349": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid GROUP BY T1.name, T1.artist, T1.isPromo ORDER BY COUNT(T2.uuid) DESC LIMIT 1;\t----- bird -----\tcard_games",
  "350": "SELECT T2.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'annul' AND T1.number = '29';\t----- bird -----\tcard_games",
  "351": "SELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T2.language = 'Japanese';\t----- bird -----\tcard_games",
  "352": "SELECT CAST(SUM(CASE WHEN language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM set_translations;\t----- bird -----\tcard_games",
  "353": "SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian';\t----- bird -----\tcard_games",
  "354": "SELECT COUNT(DISTINCT artist) FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
  "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
  "356": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
  "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
  "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
  "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
  "360": "SELECT T2.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.name = T2.name WHERE T1.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
  "361": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isTextless = 0;\t----- bird -----\tcard_games",
  "362": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
  "363": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isStarter = 1;\t----- bird -----\tcard_games",
  "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
  "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
  "366": "SELECT T1.format FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Benalish Knight';\t----- bird -----\tcard_games",
  "367": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian' AND T1.name = T2.name;\t----- bird -----\tcard_games",
  "368": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards;\t----- bird -----\tcard_games",
  "369": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1;\t----- bird -----\tcard_games",
  "370": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id INNER JOIN foreign_data AS T3 ON T1.id = T3.id WHERE T2.language = 'Russian' AND T1.borderColor = 'borderless';\t----- bird -----\tcard_games",
  "371": "SELECT CAST(SUM(CASE WHEN T1.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.isStorySpotlight = 1;\t----- bird -----\tcard_games",
  "372": "SELECT COUNT(*) FROM cards WHERE toughness = 99;\t----- bird -----\tcard_games",
  "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
  "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
  "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
  "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%flying%';\t----- bird -----\tcard_games",
  "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel';\t----- bird -----\tcard_games",
  "378": "SELECT cardKingdomFoilId FROM cards WHERE cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL;\t----- bird -----\tcard_games",
  "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
  "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
  "381": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified' AND T1.name = T2.name;\t----- bird -----\tcard_games",
  "382": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese';\t----- bird -----\tcard_games",
  "383": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T1.borderColor = 'white';\t----- bird -----\tcard_games",
  "384": "SELECT T1.uuid, T2.language FROM legalities AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.format = 'legacy';\t----- bird -----\tcard_games",
  "385": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
  "386": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' AND T2.status = 'Legal';\t----- bird -----\tcard_games",
  "387": "SELECT name, colorIdentity FROM cards WHERE setCode = 'OGW';\t----- bird -----\tcard_games",
  "388": "SELECT T1.translation, T1.language FROM set_translations AS T1 INNER JOIN cards AS T2 ON T1.setCode = T2.setCode INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T2.convertedManaCost = 5 AND T3.code = '10E';\t----- bird -----\tcard_games",
  "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
  "390": "SELECT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
  "391": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B' AND T2.language IS NOT NULL;\t----- bird -----\tcard_games",
  "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3;\t----- bird -----\tcard_games",
  "393": "SELECT COUNT(*) FROM cards WHERE artist = 'Volcan BaÇµa' AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NULL;\t----- bird -----\tcard_games",
  "394": "SELECT COUNT(cardKingdomFoilId) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND power IS NOT NULL;\t----- bird -----\tcard_games",
  "395": "SELECT COUNT(*) FROM cards WHERE availability = 'mtgo' AND artist = 'UDON' AND hand = '-1';\t----- bird -----\tcard_games",
  "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
  "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = 2003 AND borderColor = 'black' AND availability = 'paper mtgo';\t----- bird -----\tcard_games",
  "398": "SELECT SUM(manaCost) FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
  "399": "SELECT DISTINCT types FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
  "400": "SELECT setCode FROM set_translations WHERE language = 'Spanish';\t----- bird -----\tcard_games",
  "401": "SELECT CAST(SUM(CASE WHEN hand = '+3' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards WHERE frameEffects = 'legendary';\t----- bird -----\tcard_games",
  "402": "SELECT CAST(COUNT(CASE WHEN isStorySpotlight = 1 THEN id ELSE NULL END) AS REAL) * 100 / COUNT(id), ( SELECT id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 1 ) FROM cards;\t----- bird -----\tcard_games",
  "403": "SELECT CAST(SUM(CASE WHEN T1.language = 'Spanish' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.setCode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language IN ('Spanish', 'French', 'German', 'Italian', 'Japanese', 'Korean', 'Russian');\t----- bird -----\tcard_games",
  "404": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309;\t----- bird -----\tcard_games",
  "405": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Commander' AND T2.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
  "406": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Legal' AND T1.types = 'Creature';\t----- bird -----\tcard_games",
  "407": "SELECT DISTINCT T2.id FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.id = T2.id WHERE T2.language = 'German';\t----- bird -----\tcard_games",
  "408": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL AND T2.text LIKE 'If you have two Lords of the Pit, you can sacrifice them to each other.';\t----- bird -----\tcard_games",
  "409": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T2.text = 'This is a triggered mana ability' AND T1.side IS NULL;\t----- bird -----\tcard_games",
  "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability = 'paper';\t----- bird -----\tcard_games",
  "411": "SELECT artist FROM cards WHERE text = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
  "412": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.name = T2.name WHERE T2.language = 'French' AND T1.layout = 'normal' AND T1.artist = 'Matthew D. Wilson' AND T1.borderColor = 'black';\t----- bird -----\tcard_games",
  "413": "SELECT COUNT(DISTINCT T1.uuid) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.date = '2009-01-10';\t----- bird -----\tcard_games",
  "414": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ravnica' AND T1.baseSetSize = 180;\t----- bird -----\tcard_games",
  "415": "SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'legal';\t----- bird -----\tcard_games",
  "416": "SELECT CAST(SUM(CASE WHEN T1.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.power IS NULL OR T2.power = '*';\t----- bird -----\tcard_games",
  "417": "SELECT CAST(SUM(CASE WHEN T1.type = 'expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese';\t----- bird -----\tcard_games",
  "418": "SELECT DISTINCT availability FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
  "419": "SELECT COUNT(*) FROM cards WHERE edhrecRank > 12000 AND borderColor = 'borderless';\t----- bird -----\tcard_games",
  "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
  "421": "SELECT name FROM cards WHERE power IS NULL OR power = '*' AND promoTypes = 'arenaleague' LIMIT 3;\t----- bird -----\tcard_games",
  "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
  "423": "SELECT number FROM cards WHERE cardKingdomFoilId = cardKingdomId LIMIT 3;\t----- bird -----\tcard_games",
  "424": "SELECT CAST(SUM(CASE WHEN isTextless = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE layout = 'normal';\t----- bird -----\tcard_games",
  "425": "SELECT number FROM cards WHERE subtypes LIKE '%Angel/%Wizard%' AND number NOT LIKE '%/%';\t----- bird -----\tcard_games",
  "426": "SELECT mtgoCode, name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' LIMIT 3;\t----- bird -----\tcard_games",
  "427": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.mcmName = 'Archenemy' AND T1.code = 'ARC';\t----- bird -----\tcard_games",
  "428": "SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5;\t----- bird -----\tcard_games",
  "429": "SELECT T2.language, T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 206;\t----- bird -----\tcard_games",
  "430": "SELECT T1.id, T3.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode INNER JOIN cards AS T3 ON T1.code = T3.setCode WHERE T1.block = 'Shadowmoor' AND T2.language = 'Italian' LIMIT 2;\t----- bird -----\tcard_games",
  "431": "SELECT T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.isFoilOnly = 1 AND T1.isForeignOnly = 1 AND T2.language = 'Japanese';\t----- bird -----\tcard_games",
  "432": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
  "433": "SELECT CAST(SUM(CASE WHEN T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.isOnlineOnly) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Chinese (Simplified)';\t----- bird -----\tcard_games",
  "434": "SELECT COUNT(DISTINCT T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND (T1.mtgoCode IS NULL OR T1.mtgoCode = '');\t----- bird -----\tcard_games",
  "435": "SELECT COUNT(id) FROM cards WHERE borderColor = 'black';\t----- bird -----\tcard_games",
  "436": "SELECT COUNT(id) FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
  "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
  "438": "SELECT language FROM set_translations WHERE id = 174;\t----- bird -----\tcard_games",
  "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
  "440": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
  "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
  "442": "SELECT baseSetSize, code FROM sets WHERE block = 'Masques' OR block = 'Mirage';\t----- bird -----\tcard_games",
  "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
  "444": "SELECT T1.name, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'boros';\t----- bird -----\tcard_games",
  "445": "SELECT T2.language, T2.flavorText, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie';\t----- bird -----\tcard_games",
  "446": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.convertedManaCost) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Abyssal Horror';\t----- bird -----\tcard_games",
  "447": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
  "448": "SELECT T1.name, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'Abzan';\t----- bird -----\tcard_games",
  "449": "SELECT T2.language, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'Azorius';\t----- bird -----\tcard_games",
  "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
  "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%';\t----- bird -----\tcard_games",
  "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
  "453": "SELECT manaCost FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
  "454": "SELECT COUNT(*) FROM cards WHERE power = '*' OR power IS NULL;\t----- bird -----\tcard_games",
  "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
  "456": "SELECT subtypes, supersubtypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
  "457": "SELECT purchaseUrls FROM cards WHERE promoTypes LIKE '%bundle%';\t----- bird -----\tcard_games",
  "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE availability LIKE '%arena,mtgo%' AND borderColor = 'black';\t----- bird -----\tcard_games",
  "459": "SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
  "460": "SELECT artist FROM cards WHERE promotionalName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
  "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
  "462": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.name LIKE '%Ancestor%Chosen%';\t----- bird -----\tcard_games",
  "463": "SELECT COUNT(T2.setCode) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
  "464": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T3.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
  "465": "SELECT CASE WHEN T1.language = 'Korean' THEN 'YES' ELSE 'NO' END AS result FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name LIKE '%Ancestor%s Chosen%';\t----- bird -----\tcard_games",
  "466": "SELECT COUNT(T1.name) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T2.name = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex';\t----- bird -----\tcard_games",
  "467": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
  "468": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Simplified Chinese';\t----- bird -----\tcard_games",
  "469": "SELECT CASE WHEN mtgoCode IS NULL THEN 'No' ELSE 'Yes' END FROM sets WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
  "470": "SELECT DISTINCT releaseDate FROM sets WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
  "471": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
  "472": "SELECT COUNT(DISTINCT T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian';\t----- bird -----\tcard_games",
  "473": "SELECT DISTINCT isForeignOnly FROM sets WHERE name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
  "474": "SELECT COUNT(DISTINCT T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 10;\t----- bird -----\tcard_games",
  "475": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.name = T2.name WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black';\t----- bird -----\tcard_games",
  "476": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.id WHERE T2.name = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
  "477": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.name = T2.name WHERE T2.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
  "478": "SELECT T1.number FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.number = 4;\t----- bird -----\tcard_games",
  "479": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.name = T2.name WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power IS NULL OR T1.power = '*');\t----- bird -----\tcard_games",
  "480": "SELECT T1.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Italian' AND T1.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
  "481": "SELECT DISTINCT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
  "482": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
  "483": "SELECT T1.text FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.name = T3.name WHERE T2.language = 'Italian' AND T3.name = 'Coldsnap';\t----- bird -----\tcard_games",
  "484": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T3.name = 'Coldsnap' AND T2.language = 'Italian' ORDER BY T1.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
  "485": "SELECT T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Reminisce';\t----- bird -----\tcard_games",
  "486": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap';\t----- bird -----\tcard_games",
  "487": "SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.cardKingdomFoilId) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.name = T2.name WHERE T2.name = 'Coldsnap';\t----- bird -----\tcard_games",
  "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
  "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
  "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
  "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
  "492": "SELECT type FROM sets WHERE name = 'From the Vault: Lore';\t----- bird -----\tcard_games",
  "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
  "494": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Jim Pavelec' AND T2.hasContentWarning = 1;\t----- bird -----\tcard_games",
  "495": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.name = T2.name WHERE T2.name = 'Evacuation';\t----- bird -----\tcard_games",
  "496": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Rinascita di Alara';\t----- bird -----\tcard_games",
  "497": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Huitième édition';\t----- bird -----\tcard_games",
  "498": "SELECT T2.name FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'French' AND T1.translation = 'Tendo Ice Bridge';\t----- bird -----\tcard_games",
  "499": "SELECT COUNT(T2.translation) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T1.name = 'Salvat 2011';\t----- bird -----\tcard_games",
  "500": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T1.name = 'Fellwar Stone' AND T2.language = 'Japanese';\t----- bird -----\tcard_games",
  "501": "SELECT name FROM cards WHERE name LIKE 'Journey into Nyx Hero%s Path' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
  "502": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de frío';\t----- bird -----\tcard_games",
  "503": "SELECT T1.type FROM sets AS T1 INNER JOIN cards AS T2 ON T1.name = T2.setCode WHERE T2.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
  "504": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3;\t----- bird -----\tcard_games",
  "505": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T1.name = 'Mirrodin' AND T2.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
  "506": "SELECT CAST(COUNT(CASE WHEN T1.isNonFoilOnly = 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese';\t----- bird -----\tcard_games",
  "507": "SELECT CAST(COUNT(CASE WHEN T1.isOnlineOnly = 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.setCode) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T1.setCode = T3.setCode WHERE T3.language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
  "508": "SELECT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1;\t----- bird -----\tcard_games",
  "509": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
  "510": "SELECT artist FROM cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
  "511": "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(frameEffects) DESC LIMIT 1;\t----- bird -----\tcard_games",
  "512": "SELECT COUNT(*) FROM cards WHERE duelDeck = 'a' AND (hasFoil = 0 OR power IS NULL OR power = '*');\t----- bird -----\tcard_games",
  "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
  "514": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'duel' ORDER BY T1.manaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
  "515": "SELECT T1.originalReleaseDate, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Legal' ORDER BY T1.originalReleaseDate ASC LIMIT 1;\t----- bird -----\tcard_games",
  "516": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'French' AND T1.artist = 'Volkan Baga';\t----- bird -----\tcard_games",
  "517": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T1.rarity = 'rare' AND T1.types = 'Enchantment' AND T1.name = 'Abundance' AND T2.status = 'Legal';\t----- bird -----\tcard_games",
  "518": "SELECT T1.format, T2.name FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' GROUP BY T1.format ORDER BY COUNT(T1.status) DESC LIMIT 1;\t----- bird -----\tcard_games",
  "519": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond';\t----- bird -----\tcard_games",
  "520": "SELECT T1.artist, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid GROUP BY T1.artist ORDER BY COUNT(T1.artist) ASC LIMIT 1;\t----- bird -----\tcard_games",
  "521": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy' AND T1.hasContentWarning = 1;\t----- bird -----\tcard_games",
  "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T1.edhrecRank = 1;\t----- bird -----\tcard_games",
  "523": "SELECT CAST(COUNT(DISTINCT T1.code) AS REAL) / COUNT(DISTINCT STRFTIME('%Y', T1.releaseDate)) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY STRFTIME('%Y', T1.releaseDate) ORDER BY T2.language DESC LIMIT 1;\t----- bird -----\tcard_games",
  "524": "SELECT DISTINCT artist FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
  "525": "SELECT uuid FROM legalities WHERE format = 'oldschool' AND status IN ('Banned', 'Restricted');\t----- bird -----\tcard_games",
  "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
  "527": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Kev Walker' ORDER BY T1.`date` DESC;\t----- bird -----\tcard_games",
  "528": "SELECT T1.name, T3.format FROM cards AS T1 INNER JOIN sets AS T2 ON T1.uuid = T2.uuid INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T2.name = 'Hour of Devastation' AND T3.status = 'Legal';\t----- bird -----\tcard_games",
  "529": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language != 'Japanese' AND T2.language = 'Korean';\t----- bird -----\tcard_games",
  "530": "SELECT DISTINCT T1.frameVersion, T1.uuid FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' AND T2.status = 'Banned';\t----- bird -----\tcard_games",
  "531": "SELECT DisplayName FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "532": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2014';\t----- bird -----\tcodebase_community",
  "533": "SELECT COUNT(Id) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00';\t----- bird -----\tcodebase_community",
  "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
  "536": "SELECT COUNT(Views) FROM users WHERE Views > 10 AND STRFTIME('%Y', CreationDate) > '2013';\t----- bird -----\tcodebase_community",
  "537": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
  "538": "SELECT T2.Title FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
  "539": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors FROM experts';\t----- bird -----\tcodebase_community",
  "540": "SELECT T2.Title FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie' ORDER BY T2.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "541": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T1.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "542": "SELECT SUM(T2.CommentCount) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
  "543": "SELECT T2.AnswerCount FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie' ORDER BY T2.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "544": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
  "545": "SELECT COUNT(T2.ParentId) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie' AND T2.ParentId IS NULL;\t----- bird -----\tcodebase_community",
  "546": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
  "547": "SELECT COUNT(T2.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Age > 65 AND T2.Score >= 20;\t----- bird -----\tcodebase_community",
  "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors FROM experts';\t----- bird -----\tcodebase_community",
  "549": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
  "550": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id ORDER BY T1.Count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "551": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
  "552": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
  "553": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'csgillespie' AND STRFTIME('%Y', T2.Date) = '2011';\t----- bird -----\tcodebase_community",
  "554": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id GROUP BY T1.UserId ORDER BY COUNT(T1.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "555": "SELECT CAST(SUM(T2.Score) AS REAL) / COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
  "556": "SELECT CAST(COUNT(T2.Id) AS REAL) / COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Views > 200;\t----- bird -----\tcodebase_community",
  "557": "SELECT CAST(SUM(CASE WHEN T2.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 20;\t----- bird -----\tcodebase_community",
  "558": "SELECT COUNT(Id) FROM votes WHERE UserId = 58 AND CreationDate LIKE '2010-07-19%';\t----- bird -----\tcodebase_community",
  "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "560": "SELECT COUNT(Id) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
  "561": "SELECT T2.Title FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id ORDER BY T1.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "562": "SELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount = 1910;\t----- bird -----\tcodebase_community",
  "563": "SELECT T1.FavoriteCount FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 3025 AND T2.CreationDate = '2014-04-23 20:29:39';\t----- bird -----\tcodebase_community",
  "564": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ParentId = 107829 AND T1.CommentCount = 1;\t----- bird -----\tcodebase_community",
  "565": "SELECT CASE WHEN T1.ClosedDate IS NULL THEN 'yes' ELSE 'no' END FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 23853 AND T2.CreationDate = '2013-07-12 09:08:18';\t----- bird -----\tcodebase_community",
  "566": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 65041;\t----- bird -----\tcodebase_community",
  "567": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
  "568": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = '381800';\t----- bird -----\tcodebase_community",
  "569": "SELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%data visualization%';\t----- bird -----\tcodebase_community",
  "570": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
  "571": "SELECT CAST(COUNT(T1.Id) AS REAL) / COUNT(DISTINCT T2.PostId) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 24;\t----- bird -----\tcodebase_community",
  "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' AND Id = 62202;\t----- bird -----\tcodebase_community",
  "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
  "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://blue-feet.com?';\t----- bird -----\tcodebase_community",
  "575": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
  "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text LIKE 'thank you user93%';\t----- bird -----\tcodebase_community",
  "577": "SELECT T2.Text FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
  "578": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
  "579": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.ParentId = T2.PostId WHERE T1.Title = 'How does gentle boosting differ from AdaBoost?' AND T1.ParentId != 0;\t----- bird -----\tcodebase_community",
  "580": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
  "581": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
  "582": "SELECT T2.Title FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T1.DisplayName = 'Vebjorn Ljosa';\t----- bird -----\tcodebase_community",
  "583": "SELECT SUM(T2.Score), T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T1.DisplayName = 'Yevgeny';\t----- bird -----\tcodebase_community",
  "584": "SELECT T2.Text FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId INNER JOIN comments AS T3 ON T1.ParentId = T3.PostId WHERE T1.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
  "585": "SELECT SUM(T2.BountyAmount) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%data%';\t----- bird -----\tcodebase_community",
  "586": "SELECT T2.BountyAmount FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Variance of a difference in marginal proportions in a three-way contingency table' AND T2.BountyAmount = 50;\t----- bird -----\tcodebase_community",
  "587": "SELECT T2.Title, T3.Text FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id LEFT JOIN comments AS T3 ON T2.Id = T3.PostId WHERE T1.TagName = 'humor' GROUP BY T2.Id HAVING SUM(T2.ViewCount) / COUNT(T2.Id);\t----- bird -----\tcodebase_community",
  "588": "SELECT COUNT(Id) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
  "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "590": "SELECT Id FROM users ORDER BY Views LIMIT 1;\t----- bird -----\tcodebase_community",
  "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND STRFTIME('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
  "592": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name > 5;\t----- bird -----\tcodebase_community",
  "593": "SELECT COUNT(DISTINCT T2.UserId) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name IN ('Teacher', 'Supporter') AND T1.Location = 'New York';\t----- bird -----\tcodebase_community",
  "594": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 1;\t----- bird -----\tcodebase_community",
  "595": "SELECT T2.UserId FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount >= 1000 AND T2.PostHistoryTypeId = 1 GROUP BY T2.UserId HAVING COUNT(T2.PostId) = 1;\t----- bird -----\tcodebase_community",
  "596": "SELECT T2.Name FROM comments AS T1 INNER JOIN badges AS T2 ON T1.UserId = T2.UserId GROUP BY T1.UserId ORDER BY COUNT(T1.UserId) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "597": "SELECT COUNT(T2.UserId) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Teacher' AND T1.Location = 'India';\t----- bird -----\tcodebase_community",
  "598": "SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', Date) = '2011' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(Name) FROM badges WHERE Name = 'Students';\t----- bird -----\tcodebase_community",
  "599": "SELECT PostHistoryTypeId FROM postHistory WHERE PostId = 3720 GROUP BY Comment;\t----- bird -----\tcodebase_community",
  "600": "SELECT T1.ViewCount FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.RelatedPostId WHERE T2.PostId = 61217;\t----- bird -----\tcodebase_community",
  "601": "SELECT T2.Score, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.PostId = 395;\t----- bird -----\tcodebase_community",
  "602": "SELECT T2.PostId, T2.UserId FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Score > 60;\t----- bird -----\tcodebase_community",
  "603": "SELECT SUM(FavoriteCount) FROM posts WHERE CreationDate LIKE '2011%' AND Id = 686;\t----- bird -----\tcodebase_community",
  "604": "SELECT CAST(SUM(T3.UpVotes) AS REAL) / COUNT(*), CAST(SUM(T3.Age) AS REAL) / COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN users AS T3 WHERE T1.OwnerUserId IN ( SELECT T1.OwnerUserId FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id GROUP BY T1.OwnerUserId HAVING COUNT(T1.Id) > 10 );\t----- bird -----\tcodebase_community",
  "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
  "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08';\t----- bird -----\tcodebase_community",
  "607": "SELECT COUNT(Id) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
  "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47';\t----- bird -----\tcodebase_community",
  "609": "SELECT COUNT(Id) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
  "610": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId ORDER BY T1.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "611": "SELECT T1.Reputation FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08';\t----- bird -----\tcodebase_community",
  "612": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
  "613": "SELECT T2.Date FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
  "614": "SELECT CAST(SUM(CASE WHEN T2.Reputation = ( SELECT MAX(Reputation) FROM users ) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Reputation) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Teacher';\t----- bird -----\tcodebase_community",
  "615": "SELECT CAST(SUM(CASE WHEN T2.Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer';\t----- bird -----\tcodebase_community",
  "616": "SELECT Score FROM comments WHERE CreationDate = '2010-07-19 19:14:43';\t----- bird -----\tcodebase_community",
  "617": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:37:33';\t----- bird -----\tcodebase_community",
  "618": "SELECT T2.Age FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Vienna, Austria';\t----- bird -----\tcodebase_community",
  "619": "SELECT COUNT(T2.UserId) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Supporter' AND T1.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
  "620": "SELECT COUNT(T1.Views) FROM users AS T1 INNER JOIN badges AS T2 ON T1.UserId = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08';\t----- bird -----\tcodebase_community",
  "621": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId ORDER BY T1.Reputation ASC LIMIT 1;\t----- bird -----\tcodebase_community",
  "622": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
  "623": "SELECT COUNT(T2.UserId) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Supporter' AND T1.Age > 65;\t----- bird -----\tcodebase_community",
  "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
  "625": "SELECT COUNT(Id) FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
  "626": "SELECT COUNT(*) FROM votes WHERE STRFTIME('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community",
  "627": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
  "628": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "629": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN STRFTIME('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) FROM votes;\t----- bird -----\tcodebase_community",
  "630": "SELECT T3.TagName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.ParentId = T2.PostId INNER JOIN tags AS T3 ON T1.Id = T3.ExcerptPostId WHERE T2.UserDisplayName = 'John Stauffer' AND T1.ParentId != 0 GROUP BY T3.TagName;\t----- bird -----\tcodebase_community",
  "631": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
  "632": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Harlan';\t----- bird -----\tcodebase_community",
  "633": "SELECT T2.Id FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'slashnick' ORDER BY T2.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "634": "SELECT T2.Id FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T1.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY T2.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "635": "SELECT COUNT(T2.PostId) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Matt Parker' AND T2.PostId > 100;\t----- bird -----\tcodebase_community",
  "636": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Neil McGuigan' AND T2.Score < 60;\t----- bird -----\tcodebase_community",
  "637": "SELECT T3.Id FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId INNER JOIN tags AS T3 ON T1.Id = T3.ExcerptPostId WHERE T1.CommentCount > 10 AND T1.Id = 643;\t----- bird -----\tcodebase_community",
  "638": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer';\t----- bird -----\tcodebase_community",
  "639": "SELECT CAST(SUM(CASE WHEN T4.DisplayName = 'Community' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T4.DisplayName = 'Jay Stevens' THEN 1 ELSE 0 END) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id INNER JOIN users AS T4 ON T2.OwnerUserId = T4.Id WHERE T1.Id = 8;\t----- bird -----\tcodebase_community",
  "640": "SELECT SUM(CASE WHEN T2.DisplayName = 'Mornington' THEN T1.ViewCount ELSE 0 END) - SUM(CASE WHEN T2.DisplayName = 'Amos' THEN T1.ViewCount ELSE 0 END) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id;\t----- bird -----\tcodebase_community",
  "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND STRFTIME('%Y', Date) = '2014';\t----- bird -----\tcodebase_community",
  "642": "SELECT COUNT(Id) FROM posts WHERE CreationDate LIKE '2010-07-21%';\t----- bird -----\tcodebase_community",
  "643": "SELECT DisplayName, Age FROM users WHERE Views = ( SELECT MAX(Views) FROM users );\t----- bird -----\tcodebase_community",
  "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
  "645": "SELECT COUNT(Score) FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
  "646": "SELECT T2.title, T1.UserDisplayName FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score > 60 AND T2.ParentId IS NULL GROUP BY T2.Title;\t----- bird -----\tcodebase_community",
  "647": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE STRFTIME('%Y', T2.Date) = '2011' AND T1.Location = 'North Pole';\t----- bird -----\tcodebase_community",
  "648": "SELECT T2.DisplayName, T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.FavoriteCount > 150 AND T2.LastAccessDate IS NOT NULL;\t----- bird -----\tcodebase_community",
  "649": "SELECT COUNT(T2.Id), T1.LastEditDate FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Id = '2605';\t----- bird -----\tcodebase_community",
  "650": "SELECT T2.LastAccessDate, T2.Location FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Outliers';\t----- bird -----\tcodebase_community",
  "651": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = 906 AND T1.Title = 'How to tell if something happened in a data set which monitors a value over time';\t----- bird -----\tcodebase_community",
  "652": "SELECT T2.PostId, T1.Name FROM badges AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE SUBSTR(T2.CreationDate, 1, 4) = '2013' AND T2.UserDisplayName = 'Samuel';\t----- bird -----\tcodebase_community",
  "653": "SELECT OwnerDisplayName FROM posts ORDER BY ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "654": "SELECT T3.DisplayName, T3.Location FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T1.TagName = 'hypothesis-testing';\t----- bird -----\tcodebase_community",
  "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T2.Title = 'What are principal component scores?' AND T1.PostId = 406;\t----- bird -----\tcodebase_community",
  "656": "SELECT ParentId FROM posts WHERE ParentId IS NOT NULL ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "657": "SELECT T2.DisplayName, T2.WebsiteUrl FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.VoteTypeId = 8 ORDER BY T1.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
  "659": "SELECT COUNT(Id) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
  "660": "SELECT OwnerUserId FROM posts ORDER BY FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "661": "SELECT Age FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users );\t----- bird -----\tcodebase_community",
  "662": "SELECT COUNT(T2.PostId) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE STRFTIME('%Y', T1.CreationDate) = '2011' AND T1.BountyAmount = 50;\t----- bird -----\tcodebase_community",
  "663": "SELECT Id FROM users WHERE Age = ( SELECT MAX(Age) FROM users );\t----- bird -----\tcodebase_community",
  "664": "SELECT T2.Score FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id GROUP BY T1.Id ORDER BY COUNT(T1.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "665": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', T2.CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / 12 FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
  "666": "SELECT T2.PostId FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 14730 ORDER BY T2.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "667": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id ORDER BY T1.CreaionDate ASC LIMIT 1;\t----- bird -----\tcodebase_community",
  "668": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id GROUP BY T2.DisplayName ORDER BY COUNT(T1.Name) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "669": "SELECT T2.CreationDate FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'chl' ORDER BY T2.CreationDate LIMIT 1;\t----- bird -----\tcodebase_community",
  "670": "SELECT T2.CreaionDate FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Age = ( SELECT MIN(T1.Age) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId );\t----- bird -----\tcodebase_community",
  "671": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Archeologist' ORDER BY T1.Date LIMIT 1;\t----- bird -----\tcodebase_community",
  "672": "SELECT COUNT(T2.OwnerUserId) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount >= 4 AND T1.Location = 'United Kingdom';\t----- bird -----\tcodebase_community",
  "673": "SELECT CAST(COUNT(T2.PostId) AS REAL) / COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.Age = ( SELECT MAX(Age) FROM users );\t----- bird -----\tcodebase_community",
  "674": "SELECT DisplayName FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users );\t----- bird -----\tcodebase_community",
  "675": "SELECT COUNT(Id) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
  "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
  "677": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Jay Stevens' AND STRFTIME('%Y', T2.CreationDate) = '2010';\t----- bird -----\tcodebase_community",
  "678": "SELECT T2.Id, T2.Title FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Harvey Motulsky' ORDER BY T2.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "679": "SELECT Id, Title FROM posts WHERE Score = ( SELECT MAX(Score) FROM posts );\t----- bird -----\tcodebase_community",
  "680": "SELECT CAST(SUM(T2.Score) AS REAL) / COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
  "681": "SELECT OwnerDisplayName FROM posts WHERE STRFTIME('%Y', CreationDate) = '2011' AND ViewCount > 20000;\t----- bird -----\tcodebase_community",
  "682": "SELECT Id, OwnerDisplayName FROM posts WHERE STRFTIME('%Y', CreationDate) = '2010' ORDER BY FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "683": "SELECT CAST(SUM(CASE WHEN T1.Reputation > 1000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE STRFTIME('%Y', T1.CreationDate) = '2011';\t----- bird -----\tcodebase_community",
  "684": "SELECT CAST(SUM(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Id) FROM users;\t----- bird -----\tcodebase_community",
  "685": "SELECT T2.ViewCount, T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = '8432' AND T2.Text LIKE 'Computer Game Datasets%';\t----- bird -----\tcodebase_community",
  "686": "SELECT COUNT(Id) FROM posts WHERE ViewCount > ( SELECT AVG(ViewCount) FROM posts );\t----- bird -----\tcodebase_community",
  "687": "SELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Score = ( SELECT MAX(Score) FROM posts );\t----- bird -----\tcodebase_community",
  "688": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
  "689": "SELECT T2.DisplayName, T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 5465 ORDER BY T1.LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "690": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Emmett' ORDER BY T2.Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "691": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
  "692": "SELECT DISTINCT T2.Date - T1.CreationDate FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Zolomon';\t----- bird -----\tcodebase_community",
  "693": "SELECT COUNT(T2.PostId) AS POSTS, COUNT(T3.Id) AS COMMENTS FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId LEFT JOIN comments AS T3 ON T2.Id = T3.PostId WHERE T1.Id = ( SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1 ) GROUP BY T1.Id, T2.ParentId;\t----- bird -----\tcodebase_community",
  "694": "SELECT T2.Text, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Analysing wind data with R' ORDER BY T2.CreationDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
  "696": "SELECT COUNT(T2.ExcerptPostId) FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'careers';\t----- bird -----\tcodebase_community",
  "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
  "698": "SELECT T2.CommentCount + T2.AnswerCount, COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
  "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
  "700": "SELECT COUNT(DISTINCT PostId) FROM votes WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
  "701": "SELECT CAST(SUM(CASE WHEN T2.Score >= 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Reputation = ( SELECT MAX(Reputation) FROM users );\t----- bird -----\tcodebase_community",
  "702": "SELECT COUNT(Id) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
  "703": "SELECT COUNT(Id) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
  "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
  "705": "SELECT T2.Reputation, T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text LIKE 'fine, you win :)';\t----- bird -----\tcodebase_community",
  "706": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.ParentId = T2.PostId WHERE T1.Title = 'How can I adapt ANOVA for binary data?' AND T1.ParentId != 0;\t----- bird -----\tcodebase_community",
  "707": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 ORDER BY T2.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
  "708": "SELECT T2.CreationDate, T2.Age FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text LIKE '%@Jason Punyon in particular gets a humorless downvote for removing my \"verboten\" tag! ;-)%';\t----- bird -----\tcodebase_community",
  "709": "SELECT COUNT(T2.PostId) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount < 5 AND T2.Score = 0;\t----- bird -----\tcodebase_community",
  "710": "SELECT COUNT(PostId) FROM comments WHERE Score = 0 AND PostId = ( SELECT PostId FROM comments WHERE CommentCount = 1 );\t----- bird -----\tcodebase_community",
  "711": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score = 0 AND T1.Age = 40;\t----- bird -----\tcodebase_community",
  "712": "SELECT T2.PostId, T1.Id FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Group differences on a five point Likert item' AND T2.ParentId = NULL;\t----- bird -----\tcodebase_community",
  "713": "SELECT COUNT(T2.UpVotes) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'R is also lazy evaluated.';\t----- bird -----\tcodebase_community",
  "714": "SELECT T2.Text FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Random';\t----- bird -----\tcodebase_community",
  "715": "SELECT T2.UserDisplayName FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score BETWEEN 1 AND 5 AND T1.DownVotes = 0 GROUP BY T2.UserDisplayName;\t----- bird -----\tcodebase_community",
  "716": "SELECT CAST(SUM(CASE WHEN T2.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
  "717": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T1.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
  "718": "SELECT COUNT(*) FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T1.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
  "719": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200;\t----- bird -----\tsuperhero",
  "720": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.full_name HAVING COUNT(T1.full_name) > 15;\t----- bird -----\tsuperhero",
  "721": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue';\t----- bird -----\tsuperhero",
  "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
  "723": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN colour AS T4 ON T1.eye_colour_id = T4.id WHERE T4.colour = 'Blue' AND T3.power_name = 'Agility';\t----- bird -----\tsuperhero",
  "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' AND T1.hair_colour_id = ( SELECT id FROM colour WHERE colour = 'Blond' );\t----- bird -----\tsuperhero",
  "725": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "726": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
  "728": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Blue';\t----- bird -----\tsuperhero",
  "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "730": "SELECT CAST(SUM(CASE WHEN T4.power_name = 'Super Strength' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN hero_power AS T3 ON T2.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id;\t----- bird -----\tsuperhero",
  "731": "SELECT COUNT(T2.id) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
  "732": "SELECT T5.publisher_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id INNER JOIN publisher AS T4 ON T3.publisher_id = T4.id WHERE T2.attribute_name = 'Speed' ORDER BY T1.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
  "733": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T3.colour = 'Gold' AND T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
  "735": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond';\t----- bird -----\tsuperhero",
  "736": "SELECT T1.hero_id FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Intelligence' ORDER BY T1.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
  "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
  "738": "SELECT COUNT(*) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Durability' AND T1.attribute_value < 50;\t----- bird -----\tsuperhero",
  "739": "SELECT T3.superhero_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T1.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
  "740": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.attribute_name = 'Strength' AND T2.attribute_value = 100 AND T4.gender = 'Female';\t----- bird -----\tsuperhero",
  "741": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.superhero_name ORDER BY COUNT(T1.superhero_name) DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "742": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire';\t----- bird -----\tsuperhero",
  "743": "SELECT CAST(COUNT(CASE WHEN T1.alignment = 'Bad' THEN T3.id ELSE NULL END) AS REAL) * 100 / COUNT(T3.id) FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "744": "SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id;\t----- bird -----\tsuperhero",
  "745": "SELECT T.id FROM publisher AS T WHERE T.publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
  "746": "SELECT AVG(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
  "747": "SELECT COUNT(id) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
  "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75;\t----- bird -----\tsuperhero",
  "749": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
  "750": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female';\t----- bird -----\tsuperhero",
  "751": "SELECT T4.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN superpower AS T4 ON T2.power_id = T4.id WHERE T3.gender = 'Male' LIMIT 5;\t----- bird -----\tsuperhero",
  "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien';\t----- bird -----\tsuperhero",
  "753": "SELECT superhero_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id = 1;\t----- bird -----\tsuperhero",
  "754": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T2.hero_id = 56;\t----- bird -----\tsuperhero",
  "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5;\t----- bird -----\tsuperhero",
  "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 2;\t----- bird -----\tsuperhero",
  "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169;\t----- bird -----\tsuperhero",
  "758": "SELECT T3.colour FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T1.height_cm = 185;\t----- bird -----\tsuperhero",
  "759": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id ORDER BY T1.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "760": "SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
  "761": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > 0.79 * ( SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' );\t----- bird -----\tsuperhero",
  "762": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id GROUP BY T2.power_name ORDER BY COUNT(T2.power_name) DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "763": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
  "764": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T2.hero_id = 1;\t----- bird -----\tsuperhero",
  "765": "SELECT COUNT(*) FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T1.power_name = 'stealth';\t----- bird -----\tsuperhero",
  "766": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'strength' ORDER BY T2.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "767": "SELECT CAST(SUM(CASE WHEN T1.skin_colour_id = 1 THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id;\t----- bird -----\tsuperhero",
  "768": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
  "769": "SELECT T4.superhero_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN hero_attribute AS T3 ON T2.id = T3.hero_id INNER JOIN superhero AS T4 ON T3.hero_id = T4.id INNER JOIN attribute AS T5 ON T3.attribute_id = T5.id WHERE T1.publisher_name = 'Dark Horse Comics' AND T5.attribute_name = 'durability' ORDER BY T3.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
  "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight';\t----- bird -----\tsuperhero",
  "772": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN colour AS T4 ON T1.skin_colour_id = T4.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female';\t----- bird -----\tsuperhero",
  "773": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.hair_colour_id = T1.eye_colour_id AND T1.hair_colour_id = T1.skin_colour_id;\t----- bird -----\tsuperhero",
  "774": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
  "775": "SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.id = T3.id WHERE T2.gender = 'Female';\t----- bird -----\tsuperhero",
  "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
  "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
  "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
  "779": "SELECT COUNT(*) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
  "780": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
  "781": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber';\t----- bird -----\tsuperhero",
  "782": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T3.id = T1.hair_colour_id WHERE T2.colour = 'Black' AND T3.colour = 'Black';\t----- bird -----\tsuperhero",
  "783": "SELECT T2.eye_colour_id FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.skin_colour_id WHERE T1.colour = 'Gold';\t----- bird -----\tsuperhero",
  "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire';\t----- bird -----\tsuperhero",
  "785": "SELECT T2.superhero_name FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id WHERE T1.alignment = 'Neutral';\t----- bird -----\tsuperhero",
  "786": "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' AND T1.attribute_value = ( SELECT MAX(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' );\t----- bird -----\tsuperhero",
  "787": "SELECT T3.race, T4.alignment FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN race AS T3 INNER JOIN alignment AS T4 ON T1.alignment_id = T4.id WHERE T1.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
  "788": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "789": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien';\t----- bird -----\tsuperhero",
  "790": "SELECT SUM(CASE WHEN full_name = 'Emil Blonsky' THEN weight_kg ELSE 0 END) - SUM(CASE WHEN full_name = 'Charles Chandler' THEN weight_kg ELSE 0 END) FROM superhero;\t----- bird -----\tsuperhero",
  "791": "SELECT AVG(height_cm) FROM superhero;\t----- bird -----\tsuperhero",
  "792": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T1.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
  "793": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.race = 'God/Eternal' AND T3.gender = 'Male';\t----- bird -----\tsuperhero",
  "794": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "795": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral';\t----- bird -----\tsuperhero",
  "796": "SELECT T3.attribute_name, T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
  "797": "SELECT superhero_name FROM superhero WHERE eye_colour_id = 7 AND hair_colour_id = 9;\t----- bird -----\tsuperhero",
  "798": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
  "799": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.id = 1;\t----- bird -----\tsuperhero",
  "800": "SELECT CAST(COUNT(CASE WHEN eye_colour_id = 7 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM superhero;\t----- bird -----\tsuperhero",
  "801": "SELECT CAST(COUNT(CASE WHEN T2.gender = 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN T2.gender = 2 THEN 1 ELSE NULL END) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id;\t----- bird -----\tsuperhero",
  "802": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
  "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
  "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL;\t----- bird -----\tsuperhero",
  "806": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
  "807": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
  "808": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.height_cm = 188 AND T1.weight_kg = 108;\t----- bird -----\tsuperhero",
  "809": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38;\t----- bird -----\tsuperhero",
  "810": "SELECT T3.race FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN race AS T3 ON T2.race_id = T3.id ORDER BY T1.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "811": "SELECT T4.alignment, T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id INNER JOIN alignment AS T4 ON T3.alignment_id = T4.id WHERE T3.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
  "812": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5;\t----- bird -----\tsuperhero",
  "813": "SELECT CAST(SUM(T2.attribute_value) AS REAL) / COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T3.alignment = 'Neutral';\t----- bird -----\tsuperhero",
  "814": "SELECT T3.colour FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN colour AS T3 ON T3.id = T1.skin_colour_id WHERE T2.attribute_value = 100;\t----- bird -----\tsuperhero",
  "815": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.gender = 'Female' AND T3.alignment = 'Good';\t----- bird -----\tsuperhero",
  "816": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
  "817": "SELECT T4.race FROM gender AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.gender_id INNER JOIN colour AS T3 ON T2.hair_colour_id = T3.id INNER JOIN race AS T4 ON T2.race_id = T4.id WHERE T3.colour = 'blue' AND T1.gender = 'Male';\t----- bird -----\tsuperhero",
  "818": "SELECT CAST(COUNT(CASE WHEN T3.id = 2 THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad';\t----- bird -----\tsuperhero",
  "819": "SELECT SUM(CASE WHEN T2.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.eye_colour_id = 1 THEN 1 ELSE 0 END) FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.weight_kg IS NULL OR T2.weight_kg = 0;\t----- bird -----\tsuperhero",
  "820": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Hulk' AND T3.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
  "821": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
  "822": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN colour AS T3 ON T3.id = T1.skin_colour_id WHERE T3.colour = 'Green' AND T2.alignment = 'Bad';\t----- bird -----\tsuperhero",
  "823": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.gender = 'Female';\t----- bird -----\tsuperhero",
  "824": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name;\t----- bird -----\tsuperhero",
  "825": "SELECT T4.gender FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id INNER JOIN gender AS T4 ON T3.gender_id = T4.id WHERE T1.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
  "826": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' ORDER BY T1.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.race != 'Human';\t----- bird -----\tsuperhero",
  "828": "SELECT COUNT(*) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Speed' AND T1.attribute_value = 100;\t----- bird -----\tsuperhero",
  "829": "SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id;\t----- bird -----\tsuperhero",
  "830": "SELECT T3.attribute_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Black Panther' ORDER BY T2.attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
  "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
  "832": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
  "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
  "834": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T3.gender) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN gender AS T3 ON T2.gender_id = T3.id WHERE T1.publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
  "835": "SELECT CAST(SUM(CASE WHEN T3.alignment = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T1.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
  "836": "SELECT COUNT(id) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
  "837": "SELECT hero_id FROM hero_attribute ORDER BY attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
  "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
  "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Brown' AND T1.weight_kg < 100;\t----- bird -----\tsuperhero",
  "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
  "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40;\t----- bird -----\tsuperhero",
  "842": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral';\t----- bird -----\tsuperhero",
  "843": "SELECT T2.hero_id FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T1.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
  "844": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
  "845": "SELECT T4.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN ( SELECT AVG(height_cm) * 0.8 AS avg_height FROM superhero ) AS T4 WHERE T1.height_cm > T4.avg_height;\t----- bird -----\tsuperhero",
  "846": "SELECT T2.driverRef FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 18 ORDER BY T1.q1 DESC LIMIT 5;\t----- bird -----\tformula_1",
  "847": "SELECT T3.surname FROM qualifying AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN drivers AS T3 ON T3.driverId = T1.driverId WHERE T1.raceId = 19 ORDER BY T2.time LIMIT 1;\t----- bird -----\tformula_1",
  "848": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai' AND T1.name = 'Shanghai' AND T1.date LIKE '%Shanghai%';\t----- bird -----\tformula_1",
  "849": "SELECT url FROM circuits WHERE name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
  "850": "SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Germany';\t----- bird -----\tformula_1",
  "851": "SELECT DISTINCT T3.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.name = 'Renault';\t----- bird -----\tformula_1",
  "852": "SELECT COUNT(T2.name) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.date LIKE '2009-08-25%' AND T1.name = 'Albert Park Grand Prix Circuit';\t----- bird -----\tformula_1",
  "853": "SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Spain';\t----- bird -----\tformula_1",
  "854": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Australian Grand Prix' AND T1.location IS NOT NULL;\t----- bird -----\tformula_1",
  "855": "SELECT T2.url FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
  "856": "SELECT T2.time FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
  "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi';\t----- bird -----\tformula_1",
  "858": "SELECT T3.country FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN circuits AS T3 ON T1.raceId = T3.circuitId WHERE T1.raceId = 24 AND T1.points = 1;\t----- bird -----\tformula_1",
  "859": "SELECT T2.q1 FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Bruno' AND T1.surname = 'Senna' AND T2.raceId = 354;\t----- bird -----\tformula_1",
  "860": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 355 AND T1.Q2 = '0:01:40';\t----- bird -----\tformula_1",
  "861": "SELECT T2.number FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 903 AND T1.q3 = '0:01:54';\t----- bird -----\tformula_1",
  "862": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Bahrain Grand Prix' AND T2.year = 2007 AND T1.time > 0;\t----- bird -----\tformula_1",
  "863": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901;\t----- bird -----\tformula_1",
  "864": "SELECT COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '2015-11-29' AND T1.time > 0;\t----- bird -----\tformula_1",
  "865": "SELECT T1.driverId FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 592 AND T1.time > 0 ORDER BY T2.dob LIMIT 1;\t----- bird -----\tformula_1",
  "866": "SELECT T2.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 161 AND T1.time = '0:01:27';\t----- bird -----\tformula_1",
  "867": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 933 ORDER BY T1.fastestLapSpeed LIMIT 1;\t----- bird -----\tformula_1",
  "868": "SELECT lat, lng FROM circuits WHERE name = 'Malaysia' AND country = 'Malaysia';\t----- bird -----\tformula_1",
  "869": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 9 ORDER BY T2.points DESC LIMIT 1;\t----- bird -----\tformula_1",
  "870": "SELECT T2.q1 FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 345 AND T1.forename = 'Lucas' AND T1.surname = 'di Grassi';\t----- bird -----\tformula_1",
  "871": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 347 AND T1.Q2 = '0:01:15';\t----- bird -----\tformula_1",
  "872": "SELECT T2.code FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 45 AND T1.Q3 = '0:01:33';\t----- bird -----\tformula_1",
  "873": "SELECT T2.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 743 AND T1.forename = 'Bruce' AND T1.surname = 'McLaren';\t----- bird -----\tformula_1",
  "874": "SELECT T4.forename, T4.surname FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId INNER JOIN drivers AS T4 ON T1.driverId = T4.driverId WHERE T2.name = 'San Marino Grand Prix' AND T1.position = 2 AND T2.year = 2006;\t----- bird -----\tformula_1",
  "875": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901;\t----- bird -----\tformula_1",
  "876": "SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN `results` AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '2015-11-29';\t----- bird -----\tformula_1",
  "877": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 AND T2.time <> 0 ORDER BY T1.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
  "878": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 348 ORDER BY T1.time ASC LIMIT 1;\t----- bird -----\tformula_1",
  "879": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 348 ORDER BY T1.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
  "880": "SELECT CAST((SUM(CASE WHEN T2.raceId = 853 THEN T2.fastestLapSpeed ELSE 0 END) - SUM(CASE WHEN T2.raceId = 854 THEN T2.fastestLapSpeed ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T2.raceId = 853 THEN T2.fastestLapSpeed ELSE 0 END) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta';\t----- bird -----\tformula_1",
  "881": "SELECT CAST(SUM(CASE WHEN T1.time > 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '1983-07-16';\t----- bird -----\tformula_1",
  "882": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Singapore' ORDER BY T1.year LIMIT 1;\t----- bird -----\tformula_1",
  "883": "SELECT COUNT(raceId) FROM races WHERE year = 2005 ORDER BY name DESC;\t----- bird -----\tformula_1",
  "884": "SELECT name FROM races WHERE STRFTIME('%Y-%m', date) = ( SELECT STRFTIME('%Y-%m', date) FROM races ORDER BY date ASC LIMIT 1 );\t----- bird -----\tformula_1",
  "885": "SELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1;\t----- bird -----\tformula_1",
  "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1;\t----- bird -----\tformula_1",
  "887": "SELECT name FROM races WHERE year = 2017 AND circuitId != 2000;\t----- bird -----\tformula_1",
  "888": "SELECT T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = ( SELECT MIN(year) FROM races ) AND T1.name = 'European Grand Prix';\t----- bird -----\tformula_1",
  "889": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Brands Hatch' AND T1.name = 'British Grand Prix';\t----- bird -----\tformula_1",
  "890": "SELECT COUNT(T1.circuitId) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'British Grand Prix' AND T1.name = 'Silverstone';\t----- bird -----\tformula_1",
  "891": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Singapore' AND T2.position IS NOT NULL ORDER BY T2.position ASC;\t----- bird -----\tformula_1",
  "892": "SELECT T2.forename, T2.surname, T1.points FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.points DESC LIMIT 1;\t----- bird -----\tformula_1",
  "893": "SELECT T2.forename, T2.surname, T1.points FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = '2017-04-01-chinese' ORDER BY T1.points DESC LIMIT 3;\t----- bird -----\tformula_1",
  "894": "SELECT MIN(T2.time), T2.driverId, T2.raceId FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId;\t----- bird -----\tformula_1",
  "895": "SELECT AVG(T3.time) FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Chinese Grand Prix' AND T1.year = 2009 AND T3.forename = 'Sebastian' AND T3.surname = 'Vettel';\t----- bird -----\tformula_1",
  "896": "SELECT CAST(SUM(CASE WHEN T3.position > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM races AS T1 INNER JOIN driverStandings AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.surname = 'Hamilton' AND T1.year > 2010;\t----- bird -----\tformula_1",
  "897": "SELECT T2.forename, T2.surname, T2.nationality, AVG(T1.points) FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId GROUP BY T2.forename, T2.surname, T2.nationality ORDER BY COUNT(T1.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
  "898": "SELECT 2022 - STRFTIME('%Y', dob) + 1, forename, surname FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;\t----- bird -----\tformula_1",
  "899": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.name HAVING COUNT(T1.name) = 4;\t----- bird -----\tformula_1",
  "900": "SELECT T1.name, T1.location, T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = 2006 AND T1.country = 'USA';\t----- bird -----\tformula_1",
  "901": "SELECT T1.name, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE STRFTIME('%Y', T1.`date`) = '2005' AND STRFTIME('%m', T1.`date`) = '9';\t----- bird -----\tformula_1",
  "902": "SELECT T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.position < 10;\t----- bird -----\tformula_1",
  "903": "SELECT COUNT(T4.raceId) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN results AS T3 ON T2.raceId = T3.raceId INNER JOIN drivers AS T4 ON T3.driverId = T4.driverId WHERE T1.name = 'Sepang International Circuit' AND T4.forename = 'Michael' AND T4.surname = 'Schumacher' ORDER BY T3.points DESC LIMIT 1;\t----- bird -----\tformula_1",
  "904": "SELECT T3.name, T3.year FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Michael' AND T2.surname = 'Schumacher' ORDER BY T1.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
  "905": "SELECT CAST(SUM(T2.points) AS REAL) / COUNT(*) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Eddie' AND T1.surname = 'Irvine' AND T2.year = 2000;\t----- bird -----\tformula_1",
  "906": "SELECT T3.year, T2.points FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' ORDER BY T3.year LIMIT 1;\t----- bird -----\tformula_1",
  "907": "SELECT T1.date, T2.country FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = '2017' ORDER BY T1.date;\t----- bird -----\tformula_1",
  "908": "SELECT T1.raceId, T1.year, T3.location FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId GROUP BY T1.raceId ORDER BY COUNT(T2.raceId) DESC LIMIT 1;\t----- bird -----\tformula_1",
  "909": "SELECT CAST(SUM(CASE WHEN T2.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix';\t----- bird -----\tformula_1",
  "910": "SELECT lat, lng FROM circuits WHERE location = 'Silverstone';\t----- bird -----\tformula_1",
  "911": "SELECT name FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY alt DESC LIMIT 1;\t----- bird -----\tformula_1",
  "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
  "913": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1;\t----- bird -----\tformula_1",
  "914": "SELECT COUNT(driverId) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
  "915": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
  "916": "SELECT surname FROM drivers WHERE nationality = 'italian';\t----- bird -----\tformula_1",
  "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
  "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis';\t----- bird -----\tformula_1",
  "919": "SELECT T2.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
  "920": "SELECT DISTINCT STRFTIME('%Y', T2.date) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Silverstone';\t----- bird -----\tformula_1",
  "921": "SELECT T2.url FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Silverstone';\t----- bird -----\tformula_1",
  "922": "SELECT T2.time FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = 2008 AND T1.name = 'Albert Park Grand Prix Circuit';\t----- bird -----\tformula_1",
  "923": "SELECT COUNT(T2.raceId) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Italy';\t----- bird -----\tformula_1",
  "924": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Albert Park';\t----- bird -----\tformula_1",
  "925": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2009 AND T1.raceId = 645;\t----- bird -----\tformula_1",
  "926": "SELECT MIN(T2.fastestLapTime) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "927": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
  "928": "SELECT T3.driverRef FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 ORDER BY T1.position ASC LIMIT 1;\t----- bird -----\tformula_1",
  "929": "SELECT T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "930": "SELECT T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' ORDER BY T2.rank LIMIT 1;\t----- bird -----\tformula_1",
  "931": "SELECT T1.fastestLapSpeed FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T1.fastestLapSpeed IS NOT NULL ORDER BY T1.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
  "932": "SELECT DISTINCT T3.year FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis';\t----- bird -----\tformula_1",
  "933": "SELECT T1.positionOrder FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 AND T3.forename = 'Lewis';\t----- bird -----\tformula_1",
  "934": "SELECT T3.forename, T3.surname FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.grid = 4;\t----- bird -----\tformula_1",
  "935": "SELECT COUNT(DISTINCT T1.time) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = '2008 Australian Grand Prix' AND T1.time IS NOT NULL;\t----- bird -----\tformula_1",
  "936": "SELECT T1.fastestLap FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2008 AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T2.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
  "937": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.rank = 2 AND T1.raceId = 749;\t----- bird -----\tformula_1",
  "938": "SELECT T3.url, T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN constructors AS T3 ON T2.constructorId = T3.constructorId WHERE T2.rank = 1 AND T2.raceId = 6 /* Australian Grand Prix */;\t----- bird -----\tformula_1",
  "939": "SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN drivers AS T2 ON T1.year = T2.year WHERE T1.name = 'Australian Grand Prix' AND T2.nationality = 'American' AND T1.year = 2008;\t----- bird -----\tformula_1",
  "940": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
  "941": "SELECT SUM(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis';\t----- bird -----\tformula_1",
  "942": "SELECT AVG(T2.fastestLapTime) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "943": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.raceId) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008;\t----- bird -----\tformula_1",
  "944": "SELECT CAST((MAX(T1.time) - MIN(T1.time)) AS REAL) * 100 / MIN(T1.time) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.raceId = 704;\t----- bird -----\tformula_1",
  "945": "SELECT COUNT(circuitId) FROM circuits WHERE country = 'Australia' AND location = 'Melbourne';\t----- bird -----\tformula_1",
  "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
  "947": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND STRFTIME('%Y', dob) > '1980';\t----- bird -----\tformula_1",
  "948": "SELECT SUM(T2.points) / COUNT(*) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British';\t----- bird -----\tformula_1",
  "949": "SELECT T2.name FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId ORDER BY T1.points DESC LIMIT 1;\t----- bird -----\tformula_1",
  "950": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 291 AND T2.points = 0;\t----- bird -----\tformula_1",
  "951": "SELECT COUNT(T1.constructorId) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Japan' AND T2.points = 0 GROUP BY T1.constructorId HAVING COUNT(T2.raceId) = 2;\t----- bird -----\tformula_1",
  "952": "SELECT T2.name FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.rank = 1;\t----- bird -----\tformula_1",
  "953": "SELECT COUNT(T2.driverId) FROM constructors AS T1 INNER JOIN lapTimes AS T2 ON T1.constructorId = T2.driverId WHERE T1.nationality = 'France' AND T2.lap > 50;\t----- bird -----\tformula_1",
  "954": "SELECT CAST(SUM(CASE WHEN T2.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Japan' AND T2.time IS NOT NULL AND T2.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
  "955": "SELECT AVG(time) FROM races GROUP BY year, round;\t----- bird -----\tformula_1",
  "956": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE STRFTIME('%Y', T1.dob) > '1975' AND T2.rank = 2;\t----- bird -----\tformula_1",
  "957": "SELECT COUNT(T2.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'Italian' AND T1.time IS NULL;\t----- bird -----\tformula_1",
  "958": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.fastestLapTime LIMIT 1;\t----- bird -----\tformula_1",
  "959": "SELECT fastestLap FROM results WHERE rank = 1;\t----- bird -----\tformula_1",
  "960": "SELECT AVG(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
  "961": "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.milliseconds IS NOT NULL ORDER BY T2.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
  "962": "SELECT CAST(SUM(CASE WHEN T2.lap > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE STRFTIME('%Y', T1.dob) < '1985' AND T2.lap > 50;\t----- bird -----\tformula_1",
  "963": "SELECT COUNT(T2.driverId) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'France' AND T1.time < '01:00.00';\t----- bird -----\tformula_1",
  "964": "SELECT code FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
  "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
  "966": "SELECT COUNT(DISTINCT driverId) FROM lapTimes WHERE raceId = 18;\t----- bird -----\tformula_1",
  "967": "SELECT code FROM drivers WHERE nationality = 'Brazilian' ORDER BY dob DESC LIMIT 3;\t----- bird -----\tformula_1",
  "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
  "969": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'Australian' AND STRFTIME('%Y', dob) = '1980';\t----- bird -----\tformula_1",
  "970": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE STRFTIME('%Y', T1.time) BETWEEN '1980' AND '1990' AND T2.nationality = 'German' ORDER BY T1.time ASC LIMIT 3;\t----- bird -----\tformula_1",
  "971": "SELECT driverRef FROM drivers WHERE nationality = 'Japanese' ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
  "972": "SELECT T2.driverId, T2.code FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE STRFTIME('%Y', T1.time) = '2018' AND T2.dob LIKE '1971%' ORDER BY T1.time LIMIT 1;\t----- bird -----\tformula_1",
  "973": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE STRFTIME('%Y', T1.time) > '1982' AND T2.nationality = 'Spanish' AND T2.dob < '1965-01-01' ORDER BY T1.time DESC LIMIT 10;\t----- bird -----\tformula_1",
  "974": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId ORDER BY T2.time ASC LIMIT 1;\t----- bird -----\tformula_1",
  "975": "SELECT T1.year FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId ORDER BY T2.time LIMIT 1;\t----- bird -----\tformula_1",
  "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time ASC LIMIT 5;\t----- bird -----\tformula_1",
  "977": "SELECT COUNT(raceId) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = 2;\t----- bird -----\tformula_1",
  "978": "SELECT COUNT(location) FROM circuits WHERE country = 'Austria' AND lat = 47.363 && lng = 13.008;\t----- bird -----\tformula_1",
  "979": "SELECT T1.number FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.raceId IS NOT NULL GROUP BY T1.number ORDER BY COUNT(T1.number) DESC LIMIT 1;\t----- bird -----\tformula_1",
  "980": "SELECT T2.driverRef, T2.nationality, T2.dob FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 23 AND T1.q2 IS NOT NULL;\t----- bird -----\tformula_1",
  "981": "SELECT T3.year, T2.name, T2.`date`, T2.time FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId ORDER BY T1.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
  "982": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'American' AND T1.statusId = 2;\t----- bird -----\tformula_1",
  "983": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Italian' ORDER BY T2.points DESC LIMIT 1;\t----- bird -----\tformula_1",
  "984": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId GROUP BY T1.constructorId ORDER BY SUM(T2.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
  "985": "SELECT T4.number FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId INNER JOIN lapTimes AS T3 ON T1.raceId = T3.raceId INNER JOIN drivers AS T4 ON T3.driverId = T4.driverId WHERE T2.name = 'France' AND T1.name = 'French Grand Prix' AND T3.lap = 3 ORDER BY T3.time LIMIT 1;\t----- bird -----\tformula_1",
  "986": "SELECT raceId, MIN(time) FROM lapTimes WHERE lap = 1;\t----- bird -----\tformula_1",
  "987": "SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'United States Grand Prix' AND T1.rank < 11;\t----- bird -----\tformula_1",
  "988": "SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y', T2.dob) BETWEEN '1980' AND '1985' ORDER BY SUM(T1.duration) / COUNT(T1.duration) ASC LIMIT 5;\t----- bird -----\tformula_1",
  "989": "SELECT T2.time FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Canadian Grand Prix' AND T1.year = 2008 ORDER BY T2.time DESC LIMIT 1;\t----- bird -----\tformula_1",
  "990": "SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN constructors AS T3 ON T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore' AND T2.time = ( SELECT MIN(T2.time) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId );\t----- bird -----\tformula_1",
  "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Asian' AND STRFTIME('%Y', dob) BETWEEN '1981' AND '1991';\t----- bird -----\tformula_1",
  "992": "SELECT forename, surname, url, dob FROM drivers WHERE nationality = 'German' AND STRFTIME('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC;\t----- bird -----\tformula_1",
  "993": "SELECT location, country, lat, lng FROM circuits WHERE circuitRef = 'Hungaroring';\t----- bird -----\tformula_1",
  "994": "SELECT T4.name FROM races AS T1 INNER JOIN circuit AS T2 ON T1.circuitId = T2.circuitId INNER JOIN constructorResults AS T3 ON T1.raceId = T3.raceId INNER JOIN constructors AS T4 ON T3.constructorId = T4.constructorId WHERE T2.name = 'Monaco Grand Prix' AND T1.year BETWEEN 1980 AND 2010 ORDER BY T3.points DESC LIMIT 1;\t----- bird -----\tformula_1",
  "995": "SELECT CAST(SUM(T3.points) AS REAL) / COUNT(T3.points) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Silverstone Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "996": "SELECT CAST(COUNT(raceId) AS REAL) / 10 FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31';\t----- bird -----\tformula_1",
  "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
  "998": "SELECT wins FROM driverStandings WHERE raceId = ( SELECT raceId FROM `results` ORDER BY points DESC LIMIT 90, 1 );\t----- bird -----\tformula_1",
  "999": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime LIMIT 1;\t----- bird -----\tformula_1",
  "1000": "SELECT T1.location, T1.country FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId ORDER BY T2.date DESC LIMIT 1;\t----- bird -----\tformula_1",
  "1001": "SELECT T4.forename, T4.surname FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId INNER JOIN qualifying AS T3 ON T1.raceId = T3.raceId INNER JOIN drivers AS T4 ON T3.driverId = T4.driverId WHERE T2.name = 'Marina Bay Street Circuit' AND T1.year = 2008 AND T1.date = '2008-03-09' ORDER BY T3.q3 LIMIT 1;\t----- bird -----\tformula_1",
  "1002": "SELECT T1.forename, T1.surname, T1.nationality, T2.name FROM drivers AS T1 INNER JOIN races AS T2 ON T1.dob IS NOT NULL AND T1.dob <> 0 ORDER BY T1.dob LIMIT 1;\t----- bird -----\tformula_1",
  "1003": "SELECT COUNT(T2.statusId) FROM races AS T1 INNER JOIN status AS T2 ON T1.raceId = T2.statusId WHERE T1.name = 'Canadian Grand Prix' AND T2.status = 'Accident';\t----- bird -----\tformula_1",
  "1004": "SELECT T2.wins, T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId ORDER BY T1.dob LIMIT 1;\t----- bird -----\tformula_1",
  "1005": "SELECT MAX(duration) FROM pitStops;\t----- bird -----\tformula_1",
  "1006": "SELECT MIN(T2.time) FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId;\t----- bird -----\tformula_1",
  "1007": "SELECT T2.duration FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' ORDER BY T2.duration DESC LIMIT 1;\t----- bird -----\tformula_1",
  "1008": "SELECT T2.lap FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T2.raceId = 2011;\t----- bird -----\tformula_1",
  "1009": "SELECT T2.duration FROM races AS T1 INNER JOIN pitStops AS T2 ON T1.raceId = T2.raceId WHERE T1.name = '2011 Australian Grand Prix' AND T1.date LIKE '2011-10-31%';\t----- bird -----\tformula_1",
  "1010": "SELECT T2.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton';\t----- bird -----\tformula_1",
  "1011": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.time ASC LIMIT 1;\t----- bird -----\tformula_1",
  "1012": "SELECT P2.position FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' ORDER BY T2.time LIMIT 1;\t----- bird -----\tformula_1",
  "1013": "SELECT MIN(T1.time) FROM lapTimes AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Albert Park';\t----- bird -----\tformula_1",
  "1014": "SELECT T2.time FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Italy' ORDER BY T2.time ASC LIMIT 1;\t----- bird -----\tformula_1",
  "1015": "SELECT T3.name FROM circuits AS T1 INNER JOIN results AS T2 ON T1.circuitId = T2.raceId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.name = 'Albert Park' ORDER BY T3.time LIMIT 1;\t----- bird -----\tformula_1",
  "1016": "SELECT T4.duration FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN lapTimes AS T3 ON T2.raceId = T3.raceId INNER JOIN pitStops AS T4 ON T2.raceId = T4.raceId WHERE T1.name = 'Albert Park' AND T2.name = 'Grand Prix' AND T3.time < T4.time;\t----- bird -----\tformula_1",
  "1017": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.time = '1:29.488';\t----- bird -----\tformula_1",
  "1018": "SELECT CAST(SUM(T2.milliseconds) AS REAL) / COUNT(*) FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis';\t----- bird -----\tformula_1",
  "1019": "SELECT CAST(SUM(T2.milliseconds) AS REAL) / COUNT(*) FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Italy';\t----- bird -----\tformula_1",
  "1020": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1021": "SELECT height, player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1022": "SELECT preferred_foot FROM Player_Attributes ORDER BY potential ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'Low';\t----- bird -----\teuropean_football_2",
  "1024": "SELECT player_fifa_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
  "1025": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2016' GROUP BY T2.name ORDER BY SUM(T1.home_team_goal + T1.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1026": "SELECT home_team_api_id FROM Match WHERE season = '2015/2016' GROUP BY home_team_api_id ORDER BY SUM(home_team_goal - away_team_goal) LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1027": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.penalties DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
  "1028": "SELECT T1.away_team_api_id FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Scotland Premier League' AND T1.season = '2009/2010' GROUP BY T1.away_team_api_id ORDER BY SUM(T1.away_team_goal - T1.home_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1029": "SELECT T1.buildUpPlaySpeed FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayDribblingClass = 'Little' ORDER BY T1.buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
  "1030": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2016' AND T1.home_team_goal = T1.away_team_goal GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1031": "SELECT CAST(STRFTIME('%Y', datetime()) - STRFTIME('%Y', T2.birthday) AS DATE) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.`date` BETWEEN '2013-01-01 00:00:00' AND '2015-12-31 00:00:00' AND T1.sprint_speed >= 97;\t----- bird -----\teuropean_football_2",
  "1032": "SELECT T1.name, COUNT(T2.league_id) FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id GROUP BY T1.name ORDER BY COUNT(T2.league_id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1033": "SELECT AVG(height) FROM Player WHERE birthday BETWEEN '1990-01-01 00:00:00' AND '1995-12-31 23:59:59';\t----- bird -----\teuropean_football_2",
  "1034": "SELECT player_api_id FROM Player_Attributes WHERE SUBSTR(date, 1, 4) = '2010' GROUP BY player_api_id ORDER BY CAST(SUM(overall_rating) AS REAL) / COUNT(overall_rating) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1035": "SELECT DISTINCT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 51 AND 59;\t----- bird -----\teuropean_football_2",
  "1036": "SELECT DISTINCT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayPassing > ( SELECT AVG(T1.buildUpPlayPassing) FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.date LIKE '2012%' ) AND T1.date LIKE '2012%';\t----- bird -----\teuropean_football_2",
  "1037": "SELECT CAST(SUM(CASE WHEN T2.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id WHERE T1.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00';\t----- bird -----\teuropean_football_2",
  "1038": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id GROUP BY T2.name ORDER BY SUM(T1.home_team_goal + T1.away_team_goal) LIMIT 5;\t----- bird -----\teuropean_football_2",
  "1039": "SELECT CAST(SUM(T2.long_shots) AS REAL) / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
  "1040": "SELECT player_name FROM Player WHERE height < 180 OR height > 180 GROUP BY player_name ORDER BY AVG(heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
  "1041": "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayDribblingClass = 'Normal' AND STRFTIME('%Y-%m-%d', T1.`date`) >= '2014-01-01' AND STRFTIME('%Y-%m-%d', T1.`date`) <= '2014-12-31' GROUP BY T2.team_long_name HAVING AVG(T1.chanceCreationPassing) > T1.chanceCreationPassing ORDER BY T1.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
  "1042": "SELECT DISTINCT T3.name FROM Match AS T1 INNER JOIN Match AS T2 ON T1.id = T2.id AND T1.season = T2.season INNER JOIN League AS T3 ON T1.id = T3.id WHERE T1.season = '2009/2010' AND (AVG(T1.home_team_goal) - AVG(T1.away_team_goal)) > 0;\t----- bird -----\teuropean_football_2",
  "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
  "1044": "SELECT player_name FROM Player WHERE SUBSTR(birthday, 1, 4) = '1970' AND SUBSTR(birthday, 6, 2) = '10';\t----- bird -----\teuropean_football_2",
  "1045": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Franco Zennaro';\t----- bird -----\teuropean_football_2",
  "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
  "1047": "SELECT heading_accuracy FROM Player_Attributes WHERE player_fifa_api_id = 1 AND `date` = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
  "1048": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T1.player_name = 'Gabriel Tamas' AND STRFTIME('%Y', T2.date) = '2011';\t----- bird -----\teuropean_football_2",
  "1049": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Scotland Premier League' AND T1.season = '2015/2016';\t----- bird -----\teuropean_football_2",
  "1050": "SELECT preferred_foot FROM Player WHERE birthday = ( SELECT MAX(birthday) FROM Player );\t----- bird -----\teuropean_football_2",
  "1051": "SELECT player_api_id FROM Player_Attributes ORDER BY potential DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1052": "SELECT COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T1.weight < 130 AND T2.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
  "1053": "SELECT DISTINCT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky' LIMIT 10;\t----- bird -----\teuropean_football_2",
  "1054": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'David Wilson';\t----- bird -----\teuropean_football_2",
  "1055": "SELECT T1.birthday FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1056": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
  "1057": "SELECT CAST(SUM(T1.home_team_goal) AS REAL) / COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.country_id = T2.country_id INNER JOIN Country AS T3 ON T2.country_id = T3.id WHERE T3.name = 'Poland' AND T1.season = '2010/2011';\t----- bird -----\teuropean_football_2",
  "1058": "SELECT player_name FROM Player WHERE height IN (( SELECT MAX(height) FROM Player ), ( SELECT MIN(height) FROM Player )) GROUP BY player_name HAVING AVG(finishing) ORDER BY AVG(finishing) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
  "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
  "1061": "SELECT COUNT(T1.id) FROM Player AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.id WHERE T1.weight > 170 AND T2.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
  "1062": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating > 80 AND strftime('%Y', T1.`date`) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
  "1063": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
  "1064": "SELECT DISTINCT player_api_id FROM Player_Attributes WHERE preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
  "1065": "SELECT DISTINCT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
  "1066": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'CLB';\t----- bird -----\teuropean_football_2",
  "1067": "SELECT DISTINCT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
  "1068": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE strftime('%Y', T2.date) BETWEEN '2010' AND '2015' AND T1.height > 170;\t----- bird -----\teuropean_football_2",
  "1069": "SELECT player_name FROM Player ORDER BY height ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1070": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
  "1071": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeed = 31 AND T2.buildUpPlayDribbling = 53 AND T2.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
  "1072": "SELECT CAST(SUM(T2.overall_rating) AS REAL) / COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
  "1073": "SELECT COUNT(T2.id) FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T1.name = 'Germany 1. Bundesliga' AND SUBSTR(T2.`date`, 1, 7) IN ('2008-08', '2008-09', '2008-10');\t----- bird -----\teuropean_football_2",
  "1074": "SELECT DISTINCT T2.team_short_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
  "1075": "SELECT balance FROM Player_Attributes WHERE potential = 61 ORDER BY balance DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1076": "SELECT AVG(CASE WHEN T2.player_name = 'Aaron Meijers' THEN T1.ball_control ELSE NULL END) - AVG(CASE WHEN T2.player_name = 'Lukas Hinterseer' THEN T1.ball_control ELSE NULL END) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id;\t----- bird -----\teuropean_football_2",
  "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
  "1078": "SELECT player_name FROM Player WHERE birthday < ( SELECT birthday FROM Player WHERE player_name = 'Abdelaziz Barrada' );\t----- bird -----\teuropean_football_2",
  "1079": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'Low';\t----- bird -----\teuropean_football_2",
  "1081": "SELECT T2.country_id FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
  "1082": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Germany';\t----- bird -----\teuropean_football_2",
  "1083": "SELECT player_fifa_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1084": "SELECT COUNT(T1.player_fifa_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE strftime('%Y', T1.birthday) < '1986' AND T2.defensive_work_rate = 'High';\t----- bird -----\teuropean_football_2",
  "1085": "SELECT player_fifa_api_id FROM Player_Attributes WHERE player_fifa_api_id IN (233004, 232660, 232630) ORDER BY crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1086": "SELECT T2.heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
  "1087": "SELECT COUNT(T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T2.volleys > 70;\t----- bird -----\teuropean_football_2",
  "1088": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70;\t----- bird -----\teuropean_football_2",
  "1089": "SELECT COUNT(T1.id) FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Belgium' AND T1.season = '2008/2009';\t----- bird -----\teuropean_football_2",
  "1090": "SELECT T2.long_passing FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1091": "SELECT COUNT(T2.id) FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T1.name = 'Belgium Jupiler League' AND SUBSTR(T2.`date`, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
  "1092": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2008/2009' GROUP BY T2.name ORDER BY COUNT(T1.league_id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1093": "SELECT CAST(SUM(T2.overall_rating) AS REAL) / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE strftime('%Y', T1.birthday) < '1986';\t----- bird -----\teuropean_football_2",
  "1094": "SELECT CAST((SUM(CASE WHEN T2.player_name = 'Ariel Borysiuk' THEN T1.overall_rating ELSE 0 END) - SUM(CASE WHEN T2.player_name = 'Paulin Puel' THEN T1.overall_rating ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T2.player_name = 'Paulin Puel' THEN T1.overall_rating ELSE 0 END) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id;\t----- bird -----\teuropean_football_2",
  "1095": "SELECT CAST(SUM(T1.buildUpPlaySpeed) AS REAL) / COUNT(T1.buildUpPlaySpeed) FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
  "1096": "SELECT CAST(SUM(T2.overall_rating) AS REAL) / COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
  "1097": "SELECT SUM(T2.crossing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
  "1098": "SELECT T2.chanceCreationPassing, T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Ajax' ORDER BY T2.chanceCreationPassing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1099": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
  "1100": "SELECT MAX(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
  "1101": "SELECT AVG(T1.away_team_goal) FROM Match AS T1 INNER JOIN League AS T2 ON T1.country_id = T2.country_id INNER JOIN Country AS T3 ON T2.country_id = T3.id INNER JOIN Team AS T4 ON T4.id = T1.away_team_goal WHERE T4.team_long_name = 'Parma';\t----- bird -----\teuropean_football_2",
  "1102": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = 77 AND T1.`date` = '2016-06-23' ORDER BY T2.birthday LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1103": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date = '2016-02-04 00:00:00';\t----- bird -----\teuropean_football_2",
  "1104": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Parravicini' AND T2.date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
  "1105": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Migliore' AND T1.`date` = '2015-05-01 00:00:00';\t----- bird -----\teuropean_football_2",
  "1106": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Berigaud' AND T1.`date` = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
  "1107": "SELECT T1.`date` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' ORDER BY T1.crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1108": "SELECT T1.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Willem II' AND T1.`date` = '2012-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
  "1109": "SELECT T2.buildUpPlayDribblingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'LEI' AND T2.`date` = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
  "1110": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'FC Lorient' AND T1.`date` = '2010-02-22';\t----- bird -----\teuropean_football_2",
  "1111": "SELECT T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'PEC Zwolle' AND T2.date = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
  "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
  "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
  "1114": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Marko Arnautovic' AND T1.`date` BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00';\t----- bird -----\teuropean_football_2",
  "1115": "SELECT CAST((SUM(CASE WHEN T2.player_name = 'Landon Donovan' THEN T1.overall_rating ELSE 0 END) - SUM(CASE WHEN T2.player_name = 'Jordan Bowery' THEN T1.overall_rating ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T2.player_name = 'Landon Donovan' THEN T1.overall_rating ELSE 0 END) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.`date` = '2013-07-12';\t----- bird -----\teuropean_football_2",
  "1116": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
  "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
  "1118": "SELECT player_name FROM Player WHERE datetime(CURRENT_TIMESTAMP, 'localtime') - datetime(birthday) > 34;\t----- bird -----\teuropean_football_2",
  "1119": "SELECT SUM(T1.home_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T2.player_api_id = T1.away_player_1 WHERE T2.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
  "1120": "SELECT SUM(T2.away_team_goal) FROM Player AS T1 INNER JOIN Match AS T2 ON T1.player_api_id IN (T2.away_player_1, T2.away_player_2) WHERE T1.player_name IN ('Daan Smith', 'Filipe Ferreira');\t----- bird -----\teuropean_football_2",
  "1121": "SELECT SUM(T1.home_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T2.player_api_id = T1.away_player_1 WHERE T2.birthday IS NOT NULL AND (strftime('%Y', datetime(CURRENT_TIMESTAMP, 'localtime')) - strftime('%Y', T2.birthday)) * 12 + (strftime('%m', datetime(CURRENT_TIMESTAMP, 'localtime')) - strftime('%m', T2.birthday)) <= 30;\t----- bird -----\teuropean_football_2",
  "1122": "SELECT player_name FROM Player ORDER BY overall_rating DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
  "1123": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.potential DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1124": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.attacking_work_rate = 'High';\t----- bird -----\teuropean_football_2",
  "1125": "SELECT player_name FROM Player WHERE finishing = 1 ORDER BY datetime(CURRENT_TIMESTAMP, 'localtime') - datetime(birthday) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1126": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Country AS T2 ON T1.id = T2.id WHERE T2.name = 'Belgium';\t----- bird -----\teuropean_football_2",
  "1127": "SELECT DISTINCT T3.country_id FROM Player AS T1 INNER JOIN League AS T2 ON T1.id = T2.id INNER JOIN Country AS T3 ON T3.id = T2.country_id WHERE T1.id > 89;\t----- bird -----\teuropean_football_2",
  "1128": "SELECT T2.id FROM Player AS T1 INNER JOIN Country AS T2 ON T1.id = T2.id GROUP BY T2.id ORDER BY AVG(T1.weight) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1129": "SELECT DISTINCT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
  "1130": "SELECT DISTINCT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
  "1131": "SELECT AVG(T1.height) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.id = T2.id WHERE T2.name = 'Italy';\t----- bird -----\teuropean_football_2",
  "1132": "SELECT player_name FROM Player WHERE height > 180 LIMIT 3;\t----- bird -----\teuropean_football_2",
  "1133": "SELECT COUNT(player_name) FROM Player WHERE player_name LIKE 'Aaron%' AND CAST(SUBSTR(birthday, 1, 4) AS int) > 1990;\t----- bird -----\teuropean_football_2",
  "1134": "SELECT SUM(CASE WHEN id = 6 THEN jumping ELSE 0 END) - SUM(CASE WHEN id = 23 THEN jumping ELSE 0 END) FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
  "1135": "SELECT player_fifa_api_id FROM Player_Attributes WHERE preferred_foot = 'right' AND potential IS NOT NULL ORDER BY potential LIMIT 3;\t----- bird -----\teuropean_football_2",
  "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = ( SELECT MAX(crossing) FROM Player_Attributes );\t----- bird -----\teuropean_football_2",
  "1137": "SELECT CAST(SUM(CASE WHEN stamina > 80 AND strength > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
  "1138": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'English Premier League';\t----- bird -----\teuropean_football_2",
  "1139": "SELECT T1.home_team_goal, T1.away_team_goal FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Belgian Jupiler League' AND T1.`date` LIKE '2008-09-24%';\t----- bird -----\teuropean_football_2",
  "1140": "SELECT T2.sprint_speed, T2.agility, T2.acceleration FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
  "1141": "SELECT DISTINCT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
  "1142": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Serie A' AND T1.season = '2015/2016' AND T1.country_id = 3;\t----- bird -----\teuropean_football_2",
  "1143": "SELECT T1.home_team_goal FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Netherlands Eredivisie' ORDER BY T1.home_team_goal DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1144": "SELECT T1.finishing, T1.curve FROM `Player_Attributes` AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1145": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.name ORDER BY COUNT(T2.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1146": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id GROUP BY T2.away_team_api_id ORDER BY SUM(T2.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1147": "SELECT T1.player_api_id FROM Player_Attributes AS T1 ORDER BY T1.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
  "1148": "SELECT CAST(SUM(CASE WHEN T1.height < 180 AND T2.overall_rating > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id;\t----- bird -----\teuropean_football_2",
  "1149": "SELECT SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS diff FROM Patient WHERE SEX = 'M';\t----- bird -----\tthrombosis_prediction",
  "1150": "SELECT CAST(SUM(CASE WHEN Birthday > 1998 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE SEX = 'F';\t----- bird -----\tthrombosis_prediction",
  "1151": "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-01-01';\t----- bird -----\tthrombosis_prediction",
  "1152": "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) FROM Patient WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
  "1153": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 30609;\t----- bird -----\tthrombosis_prediction",
  "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = '163109';\t----- bird -----\tthrombosis_prediction",
  "1155": "SELECT T2.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.LDH > 500;\t----- bird -----\tthrombosis_prediction",
  "1156": "SELECT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
  "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
  "1158": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) = '1937' AND T2.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
  "1159": "SELECT T2.ID, T2.SEX, T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
  "1160": "SELECT CAST(SUM(CASE WHEN T2.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TP < 6.0 OR T1.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
  "1161": "SELECT CAST(SUM(T3.IGA) AS REAL) / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Admission = '+' AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) > '50';\t----- bird -----\tthrombosis_prediction",
  "1162": "SELECT COUNT(ID) FROM Patient WHERE STRFTIME('%Y', Description) = '1997' AND SEX = 'F' AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
  "1163": "SELECT MAX(STRFTIME('%Y', Birthday) - STRFTIME('%Y', `First Date`)) FROM Patient;\t----- bird -----\tthrombosis_prediction",
  "1164": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Thrombosis = '1';\t----- bird -----\tthrombosis_prediction",
  "1165": "SELECT MAX(STRFTIME('%Y', T2.Birthday)) - MIN(STRFTIME('%Y', T2.Birthday)) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG >= 200;\t----- bird -----\tthrombosis_prediction",
  "1166": "SELECT T2.Symptoms, T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID ORDER BY T1.Birthday LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1167": "SELECT CAST(SUM(CASE WHEN T2.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / 12 FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date LIKE '1998%';\t----- bird -----\tthrombosis_prediction",
  "1168": "SELECT T2.yearsOld , T1.`First Date` FROM Patient AS T1 INNER JOIN ( SELECT CASE WHEN strftime('%Y', Birthday) - strftime('%Y', `First Date`) < 0 THEN strftime('%Y', Birthday) - strftime('%Y', `First Date`) + 1 ELSE strftime('%Y', Birthday) - strftime('%Y', `First Date`) END AS yearsOld , Birthday FROM Patient ) AS T2 ON T1.ID = T2.Birthday WHERE T1.Diagnosis = 'Aortitis' ORDER BY T2.yearsOld DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1169": "SELECT CAST(SUM(CASE WHEN T2.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.SEX = 'F' THEN 1 ELSE 0 END) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.UA > 6.5 AND T2.SEX = 'M' OR T1.UA > 8;\t----- bird -----\tthrombosis_prediction",
  "1170": "SELECT COUNT(T2.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', `Examination Date`) - strftime('%Y', T1.`First Date`) >= 1;\t----- bird -----\tthrombosis_prediction",
  "1171": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) > '1990' AND T1.Birthday < '18';\t----- bird -----\tthrombosis_prediction",
  "1172": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` > 2 AND T1.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
  "1173": "SELECT Diagnosis FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1174": "SELECT CAST(SUM(STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday)) AS REAL) / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.ID LIKE 'E%' AND STRFTIME('%Y-%m-%d', T2.ID) BETWEEN '1991-10-01' AND '1991-10-30';\t----- bird -----\tthrombosis_prediction",
  "1175": "SELECT T2.years, T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID ORDER BY T3.HGB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
  "1177": "SELECT CASE WHEN T-CHO < 250 THEN 'Yes' ELSE 'No' END FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
  "1178": "SELECT DISTINCT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1179": "SELECT T2.aCL IgM FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Description = '1993/11/12' AND T1.Diagnosis = 'SLE' AND T1.ID = 5;\t----- bird -----\tthrombosis_prediction",
  "1180": "SELECT T2.SEX FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date = '1992-06-12' AND T1.GPT = 9;\t----- bird -----\tthrombosis_prediction",
  "1181": "SELECT 1992 - strftime('%Y', T2.Birthday) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.UA = '8.4' AND T1.Date = '1991-10-21';\t----- bird -----\tthrombosis_prediction",
  "1182": "SELECT COUNT(T2.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND STRFTIME('%Y-%m-%d', T2.Date) = '1995-06-13';\t----- bird -----\tthrombosis_prediction",
  "1183": "SELECT T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T1.`First Date` = '1997-01-27';\t----- bird -----\tthrombosis_prediction",
  "1184": "SELECT T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-03-01' AND T2.ID = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
  "1185": "SELECT CAST((SUM(CASE WHEN T2.`Date` LIKE '1981-11-%' THEN T1.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.`Date` LIKE '1981-12-%' THEN T1.`T-CHO` ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T2.`Date` LIKE '1981-12-%' THEN T1.`T-CHO` ELSE 0 END) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
  "1186": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'Behcet''s' AND STRFTIME('%Y', T1.Description) BETWEEN '1997' AND '1998';\t----- bird -----\tthrombosis_prediction",
  "1187": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 30 AND T2.ALB < 4 AND T2.Date BETWEEN '1987-07-06' AND '1996-01-31';\t----- bird -----\tthrombosis_prediction",
  "1188": "SELECT COUNT(ID) FROM Patient WHERE STRFTIME('%Y', Birthday) = '1964' AND SEX = 'F' AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
  "1189": "SELECT SUM(CASE WHEN `aCL IgM` > ( SELECT AVG(`aCL IgM`) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' ) * 1.2 THEN 1 ELSE 0 END) AS num FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S';\t----- bird -----\tthrombosis_prediction",
  "1190": "SELECT CAST((SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(*) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30;\t----- bird -----\tthrombosis_prediction",
  "1191": "SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE strftime('%Y', `FIRST DATE`) = '1981' AND SEX = 'M';\t----- bird -----\tthrombosis_prediction",
  "1192": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND strftime('%Y-%m', T2.`Date`) = '1991-10' AND T2.`T-BIL` < 2;\t----- bird -----\tthrombosis_prediction",
  "1193": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND strftime('%Y', T1.Birthday) BETWEEN '1980' AND '1989' AND T2.`ANA Pattern` != 'P';\t----- bird -----\tthrombosis_prediction",
  "1194": "SELECT DISTINCT T2.SEX FROM Examination AS T1 INNER JOIN `Patient` AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T1.Diagnosis = 'PSS' AND T3.CRP > 2 AND T3.CRE = 1 AND T3.LDH = 123;\t----- bird -----\tthrombosis_prediction",
  "1195": "SELECT AVG(T2.ALB) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.Diagnosis = 'SLE' AND T2.PLT > 400;\t----- bird -----\tthrombosis_prediction",
  "1196": "SELECT T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' GROUP BY T2.Symptoms ORDER BY COUNT(T2.Symptoms) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1197": "SELECT Description, Diagnosis FROM Patient WHERE ID = 48473;\t----- bird -----\tthrombosis_prediction",
  "1198": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
  "1199": "SELECT COUNT(ID) FROM Laboratory WHERE STRFTIME('%Y', `DATE`) = '1997' AND TP < 6 OR TP > 8.5;\t----- bird -----\tthrombosis_prediction",
  "1200": "SELECT CAST(SUM(CASE WHEN T2.Diagnosis LIKE '%ITP%' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Symptoms LIKE '%thrombocytopenia%';\t----- bird -----\tthrombosis_prediction",
  "1201": "SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(SEX) FROM Patient WHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
  "1202": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND strftime('%Y', T1.`Examination Date`) BETWEEN '1995' AND '1997' AND T1.Diagnosis = 'BEHCET' AND T1.Admission = '-';\t----- bird -----\tthrombosis_prediction",
  "1203": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
  "1204": "SELECT DATEDIFF(strftime('%Y-%m-%d', `Examination Date`), strftime('%Y-%m-%d', `First Date`)) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 821298;\t----- bird -----\tthrombosis_prediction",
  "1205": "SELECT CASE WHEN T2.SEX = 'M' THEN T1.UA > 8.0 ELSE T1.UA > 6.5 END FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 57266;\t----- bird -----\tthrombosis_prediction",
  "1206": "SELECT ID FROM Laboratory WHERE GOT >= 60 AND ID = 48473;\t----- bird -----\tthrombosis_prediction",
  "1207": "SELECT T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Date) = '1994' AND T1.GOT < 60;\t----- bird -----\tthrombosis_prediction",
  "1208": "SELECT T2.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
  "1209": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT > 60 ORDER BY T2.Birthday;\t----- bird -----\tthrombosis_prediction",
  "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
  "1211": "SELECT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
  "1212": "SELECT DISTINCT T2.Admission FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALP < 300 AND T2.Admission = '+';\t----- bird -----\tthrombosis_prediction",
  "1213": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1982-04-01' AND T2.ALP < 300;\t----- bird -----\tthrombosis_prediction",
  "1214": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6;\t----- bird -----\tthrombosis_prediction",
  "1215": "SELECT T1.TP - 8.5 FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
  "1216": "SELECT DISTINCT T2.ID, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.ALB <= 3.5 OR T1.ALB >= 5.5;\t----- bird -----\tthrombosis_prediction",
  "1217": "SELECT T2.ALB FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) = '1982' AND T2.ALB BETWEEN 3.5 AND 5.5;\t----- bird -----\tthrombosis_prediction",
  "1218": "SELECT CAST(SUM(CASE WHEN T2.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.UA > 6.5 OR (T1.UA > 8 AND T2.SEX = 'M');\t----- bird -----\tthrombosis_prediction",
  "1219": "SELECT CAST(SUM(T1.UA) AS REAL) / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.UA < 8.0;\t----- bird -----\tthrombosis_prediction",
  "1220": "SELECT T2.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.UN = 29;\t----- bird -----\tthrombosis_prediction",
  "1221": "SELECT T2.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'RA' AND T1.UN < 30;\t----- bird -----\tthrombosis_prediction",
  "1222": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND T1.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
  "1223": "SELECT CASE WHEN SUM(CASE WHEN T2.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T2.SEX = 'F' THEN 1 ELSE 0 END) THEN 'TRUE' ELSE 'FALSE' END FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRE >= 1.5;\t----- bird -----\tthrombosis_prediction",
  "1224": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-BIL` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1225": "SELECT DISTINCT T2.SEX FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` >= 2.0;\t----- bird -----\tthrombosis_prediction",
  "1226": "SELECT T1.ID, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-CHO` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1227": "SELECT CAST(SUM(STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday)) AS REAL) / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
  "1228": "SELECT DISTINCT T1.ID, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300;\t----- bird -----\tthrombosis_prediction",
  "1229": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) > 50;\t----- bird -----\tthrombosis_prediction",
  "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250;\t----- bird -----\tthrombosis_prediction",
  "1231": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND T1.SEX = 'M' AND T2.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
  "1232": "SELECT T1.ID, T1.SEX, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180;\t----- bird -----\tthrombosis_prediction",
  "1233": "SELECT T1.ID, T2.GLU FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Description) >= '1991' AND T2.GLU < 180;\t----- bird -----\tthrombosis_prediction",
  "1234": "SELECT T2.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.WBC < 3.5 OR T1.WBC > 9 ORDER BY T2.Birthday;\t----- bird -----\tthrombosis_prediction",
  "1235": "SELECT T2.Diagnosis, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T2.Birthday) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
  "1236": "SELECT DISTINCT CASE WHEN T1.Admission = '+' THEN 'Yes' ELSE 'No' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Sex = 'F' AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) >= 50 AND T2.RBC <= 3.5 OR T2.RBC >= 6;\t----- bird -----\tthrombosis_prediction",
  "1237": "SELECT T2.ID, T2.SEX FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Admission = '-' AND T1.HGB < 10;\t----- bird -----\tthrombosis_prediction",
  "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.HGB >= 17 ORDER BY T1.Birthday LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1239": "SELECT T2.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T2.Birthday) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.HCT >= 52 GROUP BY T2.ID HAVING COUNT(T1.ID) > 2;\t----- bird -----\tthrombosis_prediction",
  "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
  "1241": "SELECT SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) FROM Laboratory;\t----- bird -----\tthrombosis_prediction",
  "1242": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T2.Date) = '1984' AND T2.PLT BETWEEN 100 AND 400 AND strftime('%Y', T1.Birthday) + 50 > ( SELECT CURRENT_TIMESTAMP );\t----- bird -----\tthrombosis_prediction",
  "1243": "SELECT CAST(SUM(CASE WHEN T2.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T2.Birthday) > 55 AND T1.PT >= 14;\t----- bird -----\tthrombosis_prediction",
  "1244": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) >= '1993' AND T2.PT < 14 ORDER BY T2.`Examination Date`;\t----- bird -----\tthrombosis_prediction",
  "1245": "SELECT COUNT(APTT) FROM Examination WHERE strftime('%Y-%m-%d', `Examination Date`) >= '1997-01-01' AND APTT < 45;\t----- bird -----\tthrombosis_prediction",
  "1246": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.APTT > 45 AND T2.Thrombosis = 3;\t----- bird -----\tthrombosis_prediction",
  "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC >= 3.5 AND T2.WBC <= 9 AND T2.FG > 150 AND T2.FG < 450 AND T1.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
  "1248": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG < 150 OR T2.FG > 450 AND T1.Birthday >= '1980-01-01';\t----- bird -----\tthrombosis_prediction",
  "1249": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`U-PRO` >= 30;\t----- bird -----\tthrombosis_prediction",
  "1250": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.`U-PRO` BETWEEN 0 AND 30;\t----- bird -----\tthrombosis_prediction",
  "1251": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.IGG < 900 AND T2.Symptoms = 'abortion';\t----- bird -----\tthrombosis_prediction",
  "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG BETWEEN 900 AND 2000 AND T1.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1253": "SELECT Diagnosis FROM Examination WHERE aCL IgA = ( SELECT MAX(aCL IgA) FROM Examination WHERE aCL IgA BETWEEN 80 AND 500 );\t----- bird -----\tthrombosis_prediction",
  "1254": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND STRFTIME('%Y', T1.`First Date` >= '1990';\t----- bird -----\tthrombosis_prediction",
  "1255": "SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.aCL IgM < 40 OR T1.aCL IgM > 400 GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1256": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP LIKE '+' OR T2.CRP LIKE '-' OR T2.CRP < 1 AND T1.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
  "1257": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP >= 1.0 AND STRFTIME('%Y', T1.Birthday) - STRFTIME('%Y', CURRENT_TIMESTAMP) < 18;\t----- bird -----\tthrombosis_prediction",
  "1258": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.KCT = '+' AND T2.RA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
  "1259": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.Birthday) >= '1995' AND T1.RA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
  "1260": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) > 60;\t----- bird -----\tthrombosis_prediction",
  "1261": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
  "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`ANA Pattern` = 'P' AND T1.C3 > 35;\t----- bird -----\tthrombosis_prediction",
  "1263": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.C3 > 35 ORDER BY T1.`aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1264": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = '+' AND T2.C4 > 10;\t----- bird -----\tthrombosis_prediction",
  "1265": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.RNP IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
  "1266": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP != '+' AND T2.RNP != '-' ORDER BY T1.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1267": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM IN ('-', '+-') AND T1.Thrombosis = '1';\t----- bird -----\tthrombosis_prediction",
  "1268": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM NOT IN ('-', '+-') ORDER BY T1.Birthday DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
  "1269": "SELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SC170 IN ('-', '+-') AND strftime('%Y', T1.`Examination Date`) >= '1997';\t----- bird -----\tthrombosis_prediction",
  "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.symptoms = 'vertigo' AND T1.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
  "1271": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SSA IN ('-', '+-') AND STRFTIME('%Y', T2.`First Date`) < 1990;\t----- bird -----\tthrombosis_prediction",
  "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('-', '+-') ORDER BY T1.`First Date` LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1273": "SELECT COUNT(DISTINCT ID) FROM Examination WHERE Diagnosis = 'SLE' AND SSB = '0' OR SSB = '-';\t----- bird -----\tthrombosis_prediction",
  "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN ('-', '+-') AND T1.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1275": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('-', '+-') AND T2.SSB IN ('-', '+-') AND T1.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
  "1276": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA >= 8;\t----- bird -----\tthrombosis_prediction",
  "1277": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA < 8 AND T1.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
  "1278": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`DNA-II` > 8 AND T1.Admission = '+';\t----- bird -----\tthrombosis_prediction",
  "1279": "SELECT CAST(SUM(CASE WHEN T2.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID < 8;\t----- bird -----\tthrombosis_prediction",
  "1280": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
  "1281": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60 ORDER BY T1.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1282": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 60 ORDER BY T2.GPT DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
  "1283": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
  "1284": "SELECT T2.First Date FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.LDH > 500 ORDER BY T1.LDH DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1285": "SELECT T2.`First Date` FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.LDH >= 500 ORDER BY T2.ID DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1286": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+';\t----- bird -----\tthrombosis_prediction",
  "1287": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.ALP < 300;\t----- bird -----\tthrombosis_prediction",
  "1288": "SELECT DISTINCT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TP < 6;\t----- bird -----\tthrombosis_prediction",
  "1289": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
  "1290": "SELECT T1.Date FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB BETWEEN 3.5 AND 5.5 ORDER BY T2.ALB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1291": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB >= 3.5 AND T2.ALB <= 5.5 AND T2.TP >= 6 AND T2.TP <= 8.5;\t----- bird -----\tthrombosis_prediction",
  "1292": "SELECT T2.`aCL IgG`, T2.`aCL IgM`, T2.`aCL IgA` FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Patient AS T3 ON T3.ID = T2.ID WHERE T3.SEX = 'F' AND T1.UA = ( SELECT MAX(UA) FROM Laboratory );\t----- bird -----\tthrombosis_prediction",
  "1293": "SELECT MAX(T2.ANA) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
  "1294": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.CRE < 1.5 ORDER BY T2.aCL IgA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1295": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`ANA Pattern` LIKE '%P%';\t----- bird -----\tthrombosis_prediction",
  "1296": "SELECT T2.ANA FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Laboratory ORDER BY `T-BIL` DESC LIMIT 1 );\t----- bird -----\tthrombosis_prediction",
  "1297": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.KCT = '-' AND T1.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
  "1298": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
  "1299": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.TG < 200 AND T2.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1300": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 200 ORDER BY T2.TG DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1301": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 0 AND T2.CPK < 250;\t----- bird -----\tthrombosis_prediction",
  "1302": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK < 250 AND (T1.KCT = '+' OR T1.RVVT = '+' OR T1.LAC = '+');\t----- bird -----\tthrombosis_prediction",
  "1303": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU > 180 ORDER BY T1.Birthday LIMIT 1;\t----- bird -----\tthrombosis_prediction",
  "1304": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU < 180 AND T1.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
  "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC BETWEEN 3.5 AND 9;\t----- bird -----\tthrombosis_prediction",
  "1306": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9;\t----- bird -----\tthrombosis_prediction",
  "1307": "SELECT T2.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Admission = '-' AND T1.RBC >= 3.5 AND T1.RBC <= 6;\t----- bird -----\tthrombosis_prediction",
  "1308": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.PLT BETWEEN 100 AND 400 AND T2.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "1309": "SELECT T2.PLT FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'MCTD' AND T2.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
  "1310": "SELECT CAST(SUM(T1.PT) AS REAL) / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.PT < 14;\t----- bird -----\tthrombosis_prediction",
  "1311": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis IN (1, 2) AND T2.PT < 14;\t----- bird -----\tthrombosis_prediction",
  "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders';\t----- bird -----\tstudent_club",
  "1313": "SELECT COUNT(T1.major_id) FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.college = 'College of Engineering';\t----- bird -----\tstudent_club",
  "1314": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design';\t----- bird -----\tstudent_club",
  "1315": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
  "1316": "SELECT T3.phone FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
  "1317": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer' AND T1.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
  "1318": "SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.link_to_member LIKE '%Student_Club%' GROUP BY T2.event_name ORDER BY COUNT(T1.link_to_member) DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1319": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President';\t----- bird -----\tstudent_club",
  "1320": "SELECT T3.event_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders';\t----- bird -----\tstudent_club",
  "1321": "SELECT COUNT(T3.event_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison' AND T3.type = 'Student_Club' AND STRFTIME('%Y', T3.event_date) = '2019';\t----- bird -----\tstudent_club",
  "1322": "SELECT COUNT(*) FROM ( SELECT T2.event_id AS \"event\" FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.type = 'Meeting' GROUP BY T2.event_id HAVING COUNT(T2.event_id) > 10 );\t----- bird -----\tstudent_club",
  "1323": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T2.link_to_event LIKE 'Student_Club%' GROUP BY T1.event_name HAVING COUNT(T1.event_id) > 20;\t----- bird -----\tstudent_club",
  "1324": "SELECT CAST(COUNT(event_name) AS REAL) / COUNT(DISTINCT event_name) FROM event WHERE STRFTIME('%Y', event_date) = '2020' AND type = 'Meeting';\t----- bird -----\tstudent_club",
  "1325": "SELECT expense_description FROM expense ORDER BY cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
  "1327": "SELECT DISTINCT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Lacrosse game';\t----- bird -----\tstudent_club",
  "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
  "1329": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherry' AND T1.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
  "1330": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Tyler' AND T2.last_name = 'Hewitt';\t----- bird -----\tstudent_club",
  "1331": "SELECT SUM(T2.amount) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President';\t----- bird -----\tstudent_club",
  "1332": "SELECT T2.amount FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'September Meeting' AND T2.category = 'Food';\t----- bird -----\tstudent_club",
  "1333": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President';\t----- bird -----\tstudent_club",
  "1334": "SELECT T2.first_name, T2.last_name FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T1.state = 'IL';\t----- bird -----\tstudent_club",
  "1335": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name LIKE 'September Meeting' AND T1.category = 'Advertisement';\t----- bird -----\tstudent_club",
  "1336": "SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Guidi' AND T2.last_name = 'Pierce';\t----- bird -----\tstudent_club",
  "1337": "SELECT SUM(T2.amount) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'October Speaker' AND T2.category = 'Speakers';\t----- bird -----\tstudent_club",
  "1338": "SELECT DISTINCT CASE WHEN T2.approved = 'True' THEN 'Yes' ELSE 'No' END FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_name = T2.link_to_event WHERE T1.event_date = '2019-10-08' AND T1.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
  "1339": "SELECT SUM(T3.cost) / COUNT(T2.event_id) FROM member AS T1 INNER JOIN event AS T2 ON T1.member_id = expense.link_to_member INNER JOIN expense AS T3 ON T1.member_id = T3.link_to_member WHERE (strftime('%m', T3.expense_date) = '9' OR strftime('%m', T3.expense_date) = '10') AND T1.first_name = 'Elijah' AND T1.last_name = 'Allen';\t----- bird -----\tstudent_club",
  "1340": "SELECT SUM(CASE WHEN strftime('%Y', T2.expense_date) = '2020' THEN T1.spent ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T2.expense_date) = '2019' THEN T1.spent ELSE 0 END) FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget;\t----- bird -----\tstudent_club",
  "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
  "1342": "SELECT T2.cost FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_member WHERE T1.notes = 'Posters' AND T1.event_date = '2019-09-04';\t----- bird -----\tstudent_club",
  "1343": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
  "1345": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
  "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
  "1347": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O''Gallagher';\t----- bird -----\tstudent_club",
  "1348": "SELECT COUNT(T1.link_to_event) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0;\t----- bird -----\tstudent_club",
  "1349": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
  "1350": "SELECT T3.event_status FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
  "1351": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason';\t----- bird -----\tstudent_club",
  "1352": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Human Development and Family Studies' AND T1.t_shirt_size = 'Large';\t----- bird -----\tstudent_club",
  "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson';\t----- bird -----\tstudent_club",
  "1354": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President';\t----- bird -----\tstudent_club",
  "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison';\t----- bird -----\tstudent_club",
  "1356": "SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'President';\t----- bird -----\tstudent_club",
  "1357": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues';\t----- bird -----\tstudent_club",
  "1358": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.source = 'Dues' ORDER BY T1.received_date ASC LIMIT 1;\t----- bird -----\tstudent_club",
  "1359": "SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id;\t----- bird -----\tstudent_club",
  "1360": "SELECT CAST(SUM(CASE WHEN T2.category = 'Parking' THEN T2.amount ELSE 0 END) AS REAL) * 100 / SUM(T2.amount) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'November Speaker';\t----- bird -----\tstudent_club",
  "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
  "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE state = 'VA' AND county = 'orange county';\t----- bird -----\tstudent_club",
  "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
  "1364": "SELECT T2.city, T2.county, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth';\t----- bird -----\tstudent_club",
  "1365": "SELECT T2.expense_description FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget ORDER BY T1.remaining ASC LIMIT 1;\t----- bird -----\tstudent_club",
  "1366": "SELECT T2.link_to_member FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
  "1367": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major GROUP BY T1.college ORDER BY COUNT(T1.major_id) DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1368": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.phone = '809-555-3360';\t----- bird -----\tstudent_club",
  "1369": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.amount = T2.event_id ORDER BY T1.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1370": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President';\t----- bird -----\tstudent_club",
  "1371": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
  "1372": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason';\t----- bird -----\tstudent_club",
  "1373": "SELECT COUNT(T1.zip) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'MD';\t----- bird -----\tstudent_club",
  "1374": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T1.phone = '954-555-6240';\t----- bird -----\tstudent_club",
  "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
  "1376": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.status = 'Closed' ORDER BY CAST(T1.spent AS REAL) / T1.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1377": "SELECT COUNT(member_id) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
  "1378": "SELECT amount FROM budget ORDER BY spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1379": "SELECT COUNT(event_id) FROM event WHERE STRFTIME('%Y', event_date) = '2020' AND type = 'Meeting';\t----- bird -----\tstudent_club",
  "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
  "1381": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T1.member_id) > 7;\t----- bird -----\tstudent_club",
  "1382": "SELECT T3.member_id FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id INNER JOIN major AS T4 ON T3.link_to_major = T4.major_id WHERE T4.major_name = 'Music' AND T1.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
  "1383": "SELECT T2.first_name, T2.last_name FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T1.city = 'Fleetwood' AND T1.state = 'PA';\t----- bird -----\tstudent_club",
  "1384": "SELECT SUM(T2.amount) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Grant' AND T1.last_name = 'Gilmour';\t----- bird -----\tstudent_club",
  "1385": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount > 50;\t----- bird -----\tstudent_club",
  "1386": "SELECT SUM(T2.cost) FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_member WHERE T1.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
  "1387": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN event AS T2 ON T1.member_id = T2.event_id WHERE T2.event_name = 'Football game';\t----- bird -----\tstudent_club",
  "1388": "SELECT T1.first_name, T1.last_name, T2.source FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member ORDER BY T2.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1389": "SELECT T2.event_name FROM expense AS T1 INNER JOIN event AS T2 ON T1.event_id = T2.event_id ORDER BY T1.cost ASC LIMIT 1;\t----- bird -----\tstudent_club",
  "1390": "SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.cost ELSE 0 END) AS REAL) * 100 / SUM(T1.cost) FROM expense AS T1 INNER JOIN event AS T2 ON T1.expense_id = T2.event_id;\t----- bird -----\tstudent_club",
  "1391": "SELECT CAST(SUM(CASE WHEN T1.major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.major_name = 'Physics' THEN 1 ELSE 0 END) FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major;\t----- bird -----\tstudent_club",
  "1392": "SELECT source FROM income WHERE STRFTIME('%Y-%m', date_received) = '2019-09' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary';\t----- bird -----\tstudent_club",
  "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
  "1395": "SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Community Theater' AND STRFTIME('%Y', T1.event_date) = '2019';\t----- bird -----\tstudent_club",
  "1396": "SELECT COUNT(T2.link_to_event), T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi';\t----- bird -----\tstudent_club",
  "1397": "SELECT AVG(spent) FROM budget WHERE category = 'Food' AND event_status = 'Closed';\t----- bird -----\tstudent_club",
  "1398": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' ORDER BY T1.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1399": "SELECT CASE WHEN COUNT(T1.member_id) > 0 THEN 'YES' ELSE 'NO' END FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer' AND T1.first_name = 'Maya' AND T1.last_name = 'Mclean';\t----- bird -----\tstudent_club",
  "1400": "SELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(event_id) FROM event WHERE event_date LIKE '2019%';\t----- bird -----\tstudent_club",
  "1401": "SELECT T2.cost FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_member WHERE T1.event_name = 'September Speaker' AND T2.expense_description = 'Posters';\t----- bird -----\tstudent_club",
  "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1403": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.status = 'Closed' ORDER BY T1.remaining LIMIT 1;\t----- bird -----\tstudent_club",
  "1404": "SELECT DISTINCT T2.expense_description, SUM(T2.cost) FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'October Meeting' AND T2.approved = 'Yes' GROUP BY T2.expense_description;\t----- bird -----\tstudent_club",
  "1405": "SELECT SUM(T2.amount), T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY T2.amount ASC;\t----- bird -----\tstudent_club",
  "1406": "SELECT category FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1407": "SELECT category FROM budget WHERE category = 'Advertising' ORDER BY amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
  "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
  "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
  "1410": "SELECT first_name, last_name, SUM(cost) FROM expense WHERE link_to_member = 'rec4BLdZHS2Blfp4v' GROUP BY first_name, last_name;\t----- bird -----\tstudent_club",
  "1411": "SELECT DISTINCT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Trent' AND T1.last_name = 'Smith';\t----- bird -----\tstudent_club",
  "1412": "SELECT DISTINCT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
  "1413": "SELECT DISTINCT T2.zip_code FROM expense AS T1 INNER JOIN zip_code AS T2 ON T1.cost = T2.zip_code WHERE T1.cost < 50;\t----- bird -----\tstudent_club",
  "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen';\t----- bird -----\tstudent_club",
  "1415": "SELECT DISTINCT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Journalism';\t----- bird -----\tstudent_club",
  "1416": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
  "1417": "SELECT DISTINCT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30;\t----- bird -----\tstudent_club",
  "1418": "SELECT DISTINCT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215';\t----- bird -----\tstudent_club",
  "1419": "SELECT DISTINCT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_date LIKE '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
  "1420": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President';\t----- bird -----\tstudent_club",
  "1421": "SELECT CAST(SUM(CASE WHEN T2.position = 'Member' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Mathematics';\t----- bird -----\tstudent_club",
  "1422": "SELECT DISTINCT T2.type FROM zip_code AS T1 INNER JOIN event AS T2 ON T1.zip_code = T2.zip WHERE T1.type = 'Standard' AND T1.zip_code = 100;\t----- bird -----\tstudent_club",
  "1423": "SELECT COUNT(income_id) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
  "1424": "SELECT COUNT(member_id) FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
  "1425": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
  "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
  "1427": "SELECT DISTINCT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0;\t----- bird -----\tstudent_club",
  "1428": "SELECT DISTINCT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'Member';\t----- bird -----\tstudent_club",
  "1429": "SELECT T2.event_name FROM member AS T1 INNER JOIN event AS T2 ON T1.member_id = T2.event_id WHERE T2.type = 'Social' AND T1.position = 'Vice President' AND T2.location = '900 E. Washington St.';\t----- bird -----\tstudent_club",
  "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_date = '2019-03-09' AND T1.expense_description = 'Pizza';\t----- bird -----\tstudent_club",
  "1431": "SELECT T3.last_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name LIKE 'Women%Soccer' AND T3.position = 'Member';\t----- bird -----\tstudent_club",
  "1432": "SELECT CAST(SUM(CASE WHEN T2.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Member' AND T1.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
  "1433": "SELECT DISTINCT county FROM zip_code WHERE type = 'PO Box';\t----- bird -----\tstudent_club",
  "1434": "SELECT DISTINCT zip_code FROM zip_code WHERE state = 'Puerto Rico' AND county = 'San Juan Municipio' AND type = 'PO Box';\t----- bird -----\tstudent_club",
  "1435": "SELECT event_name FROM event WHERE status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-05-20' AND type = 'Game';\t----- bird -----\tstudent_club",
  "1436": "SELECT link_to_member FROM expense WHERE cost > 50;\t----- bird -----\tstudent_club",
  "1437": "SELECT DISTINCT T2.link_to_member, T2.link_to_event FROM expense AS T1 INNER JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member WHERE T1.approved = 'true' AND T1.expense_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
  "1438": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T2.major_id = 'rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
  "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'School of Business' AND T2.major_name = 'Finance';\t----- bird -----\tstudent_club",
  "1440": "SELECT link_to_member FROM expense WHERE expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND cost > 20;\t----- bird -----\tstudent_club",
  "1441": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Education' AND T1.position = 'Member' AND T2.college = 'College of Education & Human Services';\t----- bird -----\tstudent_club",
  "1442": "SELECT CAST(SUM(CASE WHEN T2.remaining < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.event_id) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event;\t----- bird -----\tstudent_club",
  "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
  "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50;\t----- bird -----\tstudent_club",
  "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
  "1446": "SELECT CAST(COUNT(CASE WHEN type = 'PO Box' THEN zip_code ELSE NULL END) AS REAL) * 100 / COUNT(zip_code) FROM zip_code;\t----- bird -----\tstudent_club",
  "1447": "SELECT T2.event_name, T2.location FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.remaining < 0;\t----- bird -----\tstudent_club",
  "1448": "SELECT T2.event_name, T2.event_date FROM expense AS T1 INNER JOIN event AS T2 ON T1.event_date = T2.event_id WHERE T1.expense_description = 'Pizza' AND T1.cost BETWEEN 50 AND 100;\t----- bird -----\tstudent_club",
  "1449": "SELECT T2.first_name, T2.last_name, T3.major_name FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T1.cost > 100;\t----- bird -----\tstudent_club",
  "1450": "SELECT DISTINCT T2.city FROM income AS T1 INNER JOIN zip_code AS T2 ON T1.amount = T2.zip_code WHERE T1.amount > 50;\t----- bird -----\tstudent_club",
  "1451": "SELECT T2.first_name, T2.last_name FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T2.first_name, T2.last_name HAVING COUNT(T1.cost) ORDER BY SUM(T1.cost) DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1452": "SELECT AVG(T3.cost) FROM member AS T1 INNER JOIN event AS T2 ON T1.member_id = expense.link_to_member INNER JOIN expense AS T3 ON T1.member_id = T3.link_to_member WHERE T1.position != 'Member';\t----- bird -----\tstudent_club",
  "1453": "SELECT T3.event_name FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T2.category = 'Parking' GROUP BY T3.event_name HAVING T1.cost < AVG(T1.cost);\t----- bird -----\tstudent_club",
  "1454": "SELECT CAST(SUM(T2.cost) AS REAL) * 100 / COUNT(T1.event_id) FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Game';\t----- bird -----\tstudent_club",
  "1455": "SELECT link_to_budget FROM expense WHERE expense_description = 'Water, chips, cookies' ORDER BY cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
  "1456": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member ORDER BY T2.cost DESC LIMIT 5;\t----- bird -----\tstudent_club",
  "1457": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > ( SELECT AVG(cost) FROM expense );\t----- bird -----\tstudent_club",
  "1458": "SELECT CAST(COUNT(CASE WHEN T2.state = 'Maine' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.position) - CAST(COUNT(CASE WHEN T2.state = 'Vermont' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.position) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'Member';\t----- bird -----\tstudent_club",
  "1459": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke';\t----- bird -----\tstudent_club",
  "1460": "SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description IN ('Water', 'Veggie Tray', 'Supplies');\t----- bird -----\tstudent_club",
  "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
  "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
  "1463": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food';\t----- bird -----\tstudent_club",
  "1464": "SELECT T2.first_name, T2.last_name, T1.amount FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.date_received LIKE '9/9/2019%';\t----- bird -----\tstudent_club",
  "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters';\t----- bird -----\tstudent_club",
  "1466": "SELECT T1.first_name, T1.last_name, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Secretary';\t----- bird -----\tstudent_club",
  "1467": "SELECT SUM(T2.spent), T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Speaker Gifts';\t----- bird -----\tstudent_club",
  "1468": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Girke';\t----- bird -----\tstudent_club",
  "1469": "SELECT T1.first_name, T1.last_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T1.zip = 28092;\t----- bird -----\tstudent_club",
  "1470": "SELECT COUNT(T2.GasStationID) FROM products AS T1 INNER JOIN gasstations AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Segment = 'Premium' AND T2.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
  "1471": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) FROM customers;\t----- bird -----\tdebit_card_specializing",
  "1472": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND STRFTIME('%Y', T2.Date) = '2012' ORDER BY T2.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1473": "SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND STRFTIME('%Y', T1.`Date`) = '2013';\t----- bird -----\tdebit_card_specializing",
  "1474": "SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN 201101 AND 201112 AND T2.Currency = 'CZK' ORDER BY T1.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1475": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND STRFTIME('%Y', T2.Date) = '2012' AND T2.Consumption < 30000;\t----- bird -----\tdebit_card_specializing",
  "1476": "SELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN T2.Consumption ELSE 0 END) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID;\t----- bird -----\tdebit_card_specializing",
  "1477": "SELECT T2.Year FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY T2.Year ORDER BY SUM(T2.Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1478": "SELECT T2.Segment FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY T1.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1479": "SELECT T2.Date FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' ORDER BY T2.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1480": "SELECT T2.Date FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND STRFTIME('%Y', T2.Date) = '2013' ORDER BY T2.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1481": "SELECT SUM(CASE WHEN T1.Segment = 'SME' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Segment = 'LAM' THEN T2.Consumption ELSE 0 END) AS diffsmeLAM , SUM(CASE WHEN T1.Segment = 'LAM' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Segment = 'KAM' THEN T2.Consumption ELSE 0 END) AS diffLAMKAM , SUM(CASE WHEN T1.Segment = 'KAM' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Segment = 'SME' THEN T2.Consumption ELSE 0 END) AS diffKAMSME FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '%2013%' AND T1.Currency = 'CZK';\t----- bird -----\tdebit_card_specializing",
  "1482": "SELECT CASE WHEN (MAX(CASE WHEN T2.Segment = 'SME' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END) - MIN(CASE WHEN T2.Segment = 'SME' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END)) / MAX(CASE WHEN T2.Segment = 'SME' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END) > (MAX(CASE WHEN T2.Segment = 'LAM' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END) - MIN(CASE WHEN T2.Segment = 'LAM' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END)) / MAX(CASE WHEN T2.Segment = 'LAM' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END) THEN 'SME' ELSE CASE WHEN (MAX(CASE WHEN T2.Segment = 'SME' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END) - MIN(CASE WHEN T2.Segment = 'SME' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END)) / MAX(CASE WHEN T2.Segment = 'SME' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END) < (MAX(CASE WHEN T2.Segment = 'KAM' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END) - MIN(CASE WHEN T2.Segment = 'KAM' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END)) / MAX(CASE WHEN T2.Segment = 'KAM' THEN (T1.Consumption - T1CONSUMPTION) ELSE 0 END) THEN 'KAM' ELSE 'LAM' END FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND STRFTIME('%Y-%m', T1.`Date`) BETWEEN '2012-01' AND '2013-12';\t----- bird -----\tdebit_card_specializing",
  "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN 201308 AND 201311;\t----- bird -----\tdebit_card_specializing",
  "1484": "SELECT SUM(CASE WHEN T2.Segment = 'Discount' THEN 1 ELSE 0 END) - SUM(CASE WHEN T3.Segment = 'Discount' THEN 1 ELSE 0 END) AS diff FROM customers AS T1 INNER JOIN gasstations AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN customers AS T3 ON T3.CustomerID = T2.CustomerID WHERE T2.Country = 'CZE' AND T3.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
  "1485": "SELECT ( SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND `Date` = 201304 ) - ( SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND `Date` = 201304 ) AS RESULT;\t----- bird -----\tdebit_card_specializing",
  "1486": "SELECT ( SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T1.Currency = 'CZK' ) - ( SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T1.Currency = 'EUR' ) AS diff;\t----- bird -----\tdebit_card_specializing",
  "1487": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'EUR' AND STRFTIME('%Y-%m', T2.Date) = '2013-10' ORDER BY T2.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1488": "SELECT T2.CustomerID, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' ORDER BY T2.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1489": "SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND T1.Date = 201305;\t----- bird -----\tdebit_card_specializing",
  "1490": "SELECT CAST(SUM(CASE WHEN T2.Consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
  "1491": "SELECT Country, COUNT(Segment) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country ORDER BY COUNT(Segment) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1492": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customers WHERE Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
  "1493": "SELECT CAST(SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CustomerID) FROM yearmonth WHERE Date = '201202';\t----- bird -----\tdebit_card_specializing",
  "1494": "SELECT CAST(SUM(CASE WHEN T2.Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customers AS T1 INNER JOIN gasstations AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
  "1495": "SELECT CustomerID FROM yearmonth WHERE date = '201309' ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1496": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.date = '201309' ORDER BY T2.consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1497": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date = '201206' ORDER BY T2.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1498": "SELECT Consumption FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012' ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1499": "SELECT MAX(SUM(T1.Consumption)) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
  "1500": "SELECT DISTINCT T1.Description FROM products AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.ProductID = T2.ProductID INNER JOIN yearmonth AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.Date LIKE '201309%';\t----- bird -----\tdebit_card_specializing",
  "1501": "SELECT DISTINCT T1.Country FROM gasstations AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN yearmonth AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.Date LIKE '201306%';\t----- bird -----\tdebit_card_specializing",
  "1502": "SELECT DISTINCT T2.ChainID FROM customers AS T1 INNER JOIN gasstations AS T2 ON T1.Currency = T2.Currency WHERE T1.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
  "1503": "SELECT DISTINCT T3.Description FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
  "1504": "SELECT AVG(Consumption) FROM yearmonth WHERE Date LIKE '2012-01%';\t----- bird -----\tdebit_card_specializing",
  "1505": "SELECT COUNT(T1.CustomerID) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
  "1506": "SELECT DISTINCT T3.Description FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
  "1507": "SELECT DISTINCT T2.Time FROM gasstations AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
  "1508": "SELECT COUNT(T2.TransactionID) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE' AND T2.Price > 1000;\t----- bird -----\tdebit_card_specializing",
  "1509": "SELECT COUNT(T2.GasStationID) FROM customers AS T1 INNER JOIN gasstations AS T2 ON T1.CustomerID = T2.GasStationID WHERE T2.Country = 'CZE' AND STRFTIME('%Y-%m-%d', T1.Date) > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
  "1510": "SELECT AVG(T2.Price * T2.Amount) FROM gasstations AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.Country = T2.Country WHERE T1.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
  "1511": "SELECT AVG(T2.Price * T2.Amount) FROM customers AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
  "1512": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' ORDER BY Amount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1513": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
  "1514": "SELECT Currency FROM customers WHERE `Transaction Time` = '2012-08-24 16:25:00';\t----- bird -----\tdebit_card_specializing",
  "1515": "SELECT DISTINCT Segment FROM customers WHERE CustomerID = ( SELECT CustomerID FROM `transactions_1k` WHERE time = '21:20:00' AND `date` = '2012-08-23' );\t----- bird -----\tdebit_card_specializing",
  "1516": "SELECT COUNT(T1.TransactionID) FROM `transactions_1k` AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.`Date` = '2012-08-26' AND T2.Currency = 'EUR' AND T1.Time < '13:00:00';\t----- bird -----\tdebit_card_specializing",
  "1517": "SELECT Segment FROM customers WHERE CustomerID = ( SELECT MIN(CustomerID) FROM customers );\t----- bird -----\tdebit_card_specializing",
  "1518": "SELECT Country FROM gasstations WHERE `Date` = '2012-08-24' AND Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
  "1519": "SELECT T1.Description FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID WHERE T2.date = '2012-08-23' AND T2.time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
  "1520": "SELECT SUM(Consumption), Date, Consumption FROM yearmonth WHERE CustomerID = 13976 AND `Date` LIKE '2012-01%' AND Date < '2012-02%' AND `Date` != '2012-01-24' AND `Date` != '2012-01-25' AND `Date` != '2012-01-26' AND `Date` != '2012-01-27' AND `Date` != '2012-01-28' AND `Date` != '2012-01-29' AND `Date` != '2012-01-30' AND `Date` != '2012-01-31' AND `Date` != '2012-02-01' AND `Date` != '2012-02-02' AND `Date` != '2012-02-03' AND `Date` != '2012-02-04' AND `Date` != '2012-02-05' AND `Date` != '2012-02-06' AND `Date` != '2012-02-07' AND `Date` != '2012-02-08' AND `Date` != '2012-02-09' AND `Date` != '2012-02-10' AND `Date` != '2012-02-11' AND `Date` != '2012-02-12' AND `Date` != '2012-02-13' AND `Date` != '2012-02-14' AND `Date` != '2012-02-15' AND `Date` != '2012-02-16' AND `Date` != '2012-02-17' AND `Date` != '2012-02-18' AND `Date` != '2012-02-19' AND `Date` != '2012-02-20' AND `Date` != '2012-02-21' AND `Date` != '2012-02-22' AND `Date` != '2012-02-23' AND `Date` != '2012-02-24' AND `Date` != '2012-02-25' AND `Date` != '2012-02-26' AND `Date` != '2012-02-27' AND `Date` != '2012-02-28' AND `Date` != '2012-02-29' AND `Date` != '2012-02-30' AND `Date` != '2012-02-31';\t----- bird -----\tdebit_card_specializing",
  "1521": "SELECT COUNT(T1.GasStationID) FROM gasstations AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE' AND STRFTIME('%Y-%m-%d', T2.Date) = '2012-08-26' AND T2.Time BETWEEN '8:00' AND '9:00';\t----- bird -----\tdebit_card_specializing",
  "1522": "SELECT T1.Currency FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '%201306%' AND T2.Consumption = 214582.17;\t----- bird -----\tdebit_card_specializing",
  "1523": "SELECT T2.Country FROM `transactions_1k` AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = 667467;\t----- bird -----\tdebit_card_specializing",
  "1524": "SELECT DISTINCT T2.Nationality FROM customers AS T1 INNER JOIN `transaction_details` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.SpentAmount = 548.4 AND T2.TransactionDate = '2012-08-24';\t----- bird -----\tdebit_card_specializing",
  "1525": "SELECT CAST(SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
  "1526": "SELECT (SUM(CASE WHEN STRFTIME('%Y-%m-%d', T2.Date) = '2013-08-25' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y-%m-%d', T2.Date) = '2012-08-24' THEN T2.Consumption ELSE 0 END)) * 100 / SUM(CASE WHEN STRFTIME('%Y-%m-%d', T2.Date) = '2012-08-24' THEN T2.Consumption ELSE 0 END) FROM `transactions_1k` AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.TransactionID = 634.8;\t----- bird -----\tdebit_card_specializing",
  "1527": "SELECT GasStationID FROM transactions_1k ORDER BY Amount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1528": "SELECT CAST(SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customers WHERE Currency = 'SVK';\t----- bird -----\tdebit_card_specializing",
  "1529": "SELECT SUM(Amount) FROM transactions_1k WHERE CustomerID = 38508 AND Date LIKE '%2012%';\t----- bird -----\tdebit_card_specializing",
  "1530": "SELECT Description FROM products GROUP BY Description ORDER BY COUNT(Description) DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
  "1531": "SELECT T1.CustomerID, AVG(T2.price), T1.Currency FROM customers AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY COUNT(T2.amount) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1532": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ProductID = 2 AND T2.Amount = 1 ORDER BY T2.Price DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "1533": "SELECT DISTINCT T2.CustomerID FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.ProductID = 5 AND T1.Price / T1.Amount > 29 AND T1.Date LIKE '%201208%';\t----- bird -----\tdebit_card_specializing"
}
