{
    "financial": {
        "account": {
            "account_id": "",
            "district_id": "",
            "frequency": "",
            "date": ""
        },
        "card": {
            "card_id": "id number of credit card",
            "disp_id": "disposition id",
            "type": "type of credit card",
            "issued": "the date when the credit card issued"
        },
        "client": {
            "client_id": "the unique number",
            "gender": "",
            "birth_date": "birth date",
            "district_id": "location of branch"
        },
        "disp": {
            "disp_id": "unique number of identifying this row of record",
            "client_id": "id number of client",
            "account_id": "id number of account",
            "type": "type of disposition"
        },
        "district": {
            "district_id": "location of branch",
            "A2": "district_name",
            "A3": "region",
            "A4": "",
            "A5": "municipality < district < region",
            "A6": "municipality < district < region",
            "A7": "municipality < district < region",
            "A8": "municipality < district < region",
            "A9": "",
            "A10": "ratio of urban inhabitants",
            "A11": "average salary",
            "A12": "unemployment rate 1995",
            "A13": "unemployment rate 1996",
            "A14": "no. of entrepreneurs per 1000 inhabitants",
            "A15": "no. of committed crimes 1995",
            "A16": "no. of committed crimes 1996"
        },
        "loan": {
            "loan_id": "the id number identifying the loan data",
            "account_id": "the id number identifying the account",
            "date": "the date when the loan is approved",
            "amount": "approved amount",
            "duration": "loan duration",
            "payments": "monthly payments",
            "status": "repayment status"
        },
        "order": {
            "order_id": "identifying the unique order",
            "account_id": "id number of account",
            "bank_to": "bank of the recipient",
            "account_to": "account of the recipient",
            "amount": "debited amount",
            "k_symbol": "purpose of the payment"
        },
        "trans": {
            "trans_id": "transaction id",
            "account_id": "",
            "date": "date of transaction",
            "type": "+/- transaction",
            "operation": "mode of transaction",
            "amount": "amount of money",
            "balance": "balance after transaction",
            "k_symbol": "",
            "bank": "",
            "account": ""
        },
        "foreign_keys": [
            "district.district_id=account.district_id",
            "disp.disp_id=card.disp_id",
            "district.district_id=client.district_id",
            "client.client_id=disp.client_id",
            "account.account_id=disp.account_id",
            "account.account_id=loan.account_id",
            "account.account_id=order.account_id",
            "account.account_id=trans.account_id"
        ]
    },
    "debit_card_specializing": {
        "customers": {
            "CustomerID": "identification of the customer",
            "Segment": "client segment",
            "Currency": ""
        },
        "gasstations": {
            "GasStationID": "Gas Station ID",
            "ChainID": "Chain ID",
            "Country": "",
            "Segment": "chain segment"
        },
        "products": {
            "ProductID": "Product ID",
            "Description": ""
        },
        "yearmonth": {
            "CustomerID": "Customer ID",
            "Date": "",
            "Consumption": ""
        },
        "transactions_1k": {
            "TransactionID": "Transaction ID",
            "Date": "",
            "Time": "",
            "CustomerID": "Customer ID",
            "CardID": "Card ID",
            "GasStationID": "Gas Station ID",
            "ProductID": "Product ID",
            "Amount": "",
            "Price": ""
        },
        "foreign_keys": [
            "customers.CustomerID=yearmonth.CustomerID"
        ]
    },
    "codebase_community": {
        "badges": {
            "Id": "the badge id",
            "UserId": "the unique id of the user",
            "Name": "the badge name the user obtained",
            "Date": "the date that the user obtained the badge"
        },
        "comments": {
            "Id": "the comment Id",
            "PostId": "the unique id of the post",
            "Score": "rating score",
            "Text": "the detailed content of the comment",
            "CreationDate": "the creation date of the comment",
            "UserId": "the id of the user who post the comment",
            "UserDisplayName": "user's display name"
        },
        "postHistory": {
            "Id": "the post history id",
            "PostHistoryTypeId": "the id of the post history type",
            "PostId": "the unique id of the post",
            "RevisionGUID": "the revision globally unique id of the post",
            "CreationDate": "the creation date of the post",
            "UserId": "the user who post the post",
            "Text": "the detailed content of the post",
            "Comment": "comments of the post",
            "UserDisplayName": "user's display name"
        },
        "postLinks": {
            "Id": "the post link id",
            "CreationDate": "the creation date of the post link",
            "PostId": "the post id",
            "RelatedPostId": "the id of the related post",
            "LinkTypeId": "the id of the link type"
        },
        "posts": {
            "Id": "the post id",
            "PostTypeId": "the id of the post type",
            "AcceptedAnswerId": "the accepted answer id of the post",
            "CreaionDate": "",
            "Score": "the score of the post",
            "ViewCount": "the view count of the post",
            "Body": "the body of the post",
            "OwnerUserId": "the id of the owner user",
            "LasActivityDate": "",
            "Title": "the title of the post",
            "Tags": "the tag of the post",
            "AnswerCount": "the total number of answers of the post",
            "CommentCount": "the total number of comments of the post",
            "FavoriteCount": "the total number of favorites of the post",
            "LastEditorUserId": "the id of the last editor",
            "LastEditDate": "the last edit date",
            "CommunityOwnedDate": "the community owned date",
            "ParentId": "the id of the parent post",
            "ClosedDate": "the closed date of the post",
            "OwnerDisplayName": "the display name of the post owner",
            "LastEditorDisplayName": "the display name of the last editor"
        },
        "tags": {
            "Id": "the tag id",
            "TagName": "the name of the tag",
            "Count": "the count of posts that contain this tag",
            "ExcerptPostId": "the excerpt post id of the tag",
            "WikiPostId": "the wiki post id of the tag"
        },
        "users": {
            "Id": "the user id",
            "Reputation": "the user's reputation",
            "CreationDate": "the creation date of the user account",
            "DisplayName": "the user's display name",
            "LastAccessDate": "the last access date of the user account",
            "WebsiteUrl": "the website url of the user account",
            "Location": "user's location",
            "AboutMe": "the self introduction of the user",
            "Views": "the number of views",
            "UpVotes": "",
            "DownVotes": "",
            "AccountId": "the unique id of the account",
            "Age": "user's age",
            "ProfileImageUrl": "the profile image url"
        },
        "votes": {
            "Id": "the vote id",
            "PostId": "the id of the post that is voted",
            "VoteTypeId": "the id of the vote type",
            "CreationDate": "the creation date of the vote",
            "UserId": "the id of the voter",
            "BountyAmount": "the amount of bounty"
        },
        "foreign_keys": [
            "users.Id=badges.UserId",
            "users.Id=comments.UserId",
            "posts.Id=comments.PostId",
            "users.Id=postHistory.UserId",
            "posts.Id=postHistory.PostId",
            "posts.Id=postLinks.RelatedPostId",
            "posts.Id=postLinks.PostId",
            "posts.Id=tags.ExcerptPostId",
            "users.Id=votes.UserId",
            "posts.Id=votes.PostId",
            "users.Id=posts.OwnerUserId",
            "users.Id=posts.LastEditorUserId"
        ]
    },
    "superhero": {
        "alignment": {
            "id": "the unique identifier of the alignment",
            "alignment": "the alignment of the superhero"
        },
        "attribute": {
            "id": "the unique identifier of the attribute",
            "attribute_name": "the attribute"
        },
        "colour": {
            "id": "the unique identifier of the color",
            "colour": "the color of the superhero's skin/eye/hair/etc"
        },
        "gender": {
            "id": "the unique identifier of the gender",
            "gender": "the gender of the superhero"
        },
        "publisher": {
            "id": "the unique identifier of the publisher",
            "publisher_name": "the name of the publisher"
        },
        "race": {
            "id": "the unique identifier of the race",
            "race": "the race of the superhero"
        },
        "superhero": {
            "id": "the unique identifier of the superhero",
            "superhero_name": "the name of the superhero",
            "full_name": "the full name of the superhero",
            "gender_id": "the id of the superhero's gender",
            "eye_colour_id": "the id of the superhero's eye color",
            "hair_colour_id": "the id of the superhero's hair color",
            "skin_colour_id": "the id of the superhero's skin color",
            "race_id": "the id of the superhero's race",
            "publisher_id": "the id of the publisher",
            "alignment_id": "the id of the superhero's alignment",
            "height_cm": "the height of the superhero",
            "weight_kg": "the weight of the superhero"
        },
        "hero_attribute": {
            "hero_id": "the id of the hero\nMaps to superhero(id)",
            "attribute_id": "the id of the attribute\nMaps to attribute(id)",
            "attribute_value": "the attribute value"
        },
        "superpower": {
            "id": "the unique identifier of the superpower",
            "power_name": "the superpower name"
        },
        "hero_power": {
            "hero_id": "the id of the hero\nMaps to superhero(id)",
            "power_id": "the id of the power\nMaps to superpower(id)"
        },
        "foreign_keys": [
            "colour.id=superhero.skin_colour_id",
            "race.id=superhero.race_id",
            "publisher.id=superhero.publisher_id",
            "colour.id=superhero.hair_colour_id",
            "gender.id=superhero.gender_id",
            "colour.id=superhero.eye_colour_id",
            "alignment.id=superhero.alignment_id",
            "superhero.id=hero_attribute.hero_id",
            "attribute.id=hero_attribute.attribute_id",
            "superpower.id=hero_power.power_id",
            "superhero.id=hero_power.hero_id"
        ]
    },
    "european_football_2": {
        "Player_Attributes": {
            "id": "the unique id for players",
            "player_fifa_api_id": "the id of the player fifa api",
            "player_api_id": "the id of the player api",
            "date": "",
            "overall_rating": "the overall rating of the player",
            "potential": "potential of the player",
            "preferred_foot": "the player's preferred foot when attacking",
            "attacking_work_rate": "the player's attacking work rate",
            "defensive_work_rate": "the player's defensive work rate",
            "crossing": "the player's crossing score",
            "finishing": "the player's finishing rate",
            "heading_accuracy": "",
            "short_passing": "the player's short passing score",
            "volleys": "the player's volley score",
            "dribbling": "the player's dribbling score",
            "curve": "the player's curve score",
            "free_kick_accuracy": "the player's free kick accuracy",
            "long_passing": "the player's long passing score",
            "ball_control": "the player's ball control score",
            "acceleration": "the player's acceleration score",
            "sprint_speed": "the player's sprint speed",
            "agility": "the player's agility",
            "reactions": "the player's reactions score",
            "balance": "the player's balance score",
            "shot_power": "the player's shot power",
            "jumping": "the player's jumping score",
            "stamina": "the player's stamina score",
            "strength": "the player's strength score",
            "long_shots": "the player's long shots score",
            "aggression": "the player's aggression score",
            "interceptions": "the player's interceptions score",
            "positioning": "the player's \npositioning score",
            "vision": "the player's vision score",
            "penalties": "the player's penalties score",
            "marking": "the player's markingscore",
            "standing_tackle": "the player's standing tackle score",
            "sliding_tackle": "the player's sliding tackle score",
            "gk_diving": "the player's goalkeep diving score",
            "gk_handling": "the player's goalkeep diving score",
            "gk_kicking": "the player's goalkeep kicking score",
            "gk_positioning": "the player's goalkeep positioning score",
            "gk_reflexes": "the player's goalkeep reflexes score"
        },
        "Player": {
            "id": "the unique id for players",
            "player_api_id": "the id of the player api",
            "player_name": "player name",
            "player_fifa_api_id": "the id of the player fifa api",
            "birthday": "the player's birthday",
            "height": "the player's height",
            "weight": "the player's weight"
        },
        "Match": {
            "id": "the unique id for matches",
            "country_id": "country id",
            "league_id": "league id",
            "season": "the season of the match",
            "stage": "the stage of the match",
            "date": "the date of the match",
            "match_api_id": "the id of the match api",
            "home_team_api_id": "the id of the home team api",
            "away_team_api_id": "the id of the away team api",
            "home_team_goal": "the goal of the home team",
            "away_team_goal": "the goal of the away team",
            "home_player_X1": "",
            "home_player_X2": "",
            "home_player_X3": "",
            "home_player_X4": "",
            "home_player_X5": "",
            "home_player_X6": "",
            "home_player_X7": "",
            "home_player_X8": "",
            "home_player_X9": "",
            "home_player_X10": "",
            "home_player_X11": "",
            "away_player_X1": "",
            "away_player_X2": "",
            "away_player_X3": "",
            "away_player_X4": "",
            "away_player_X5": "",
            "away_player_X6": "",
            "away_player_X7": "",
            "away_player_X8": "",
            "away_player_X9": "",
            "away_player_X10": "",
            "away_player_X11": "",
            "home_player_Y1": "",
            "home_player_Y2": "",
            "home_player_Y3": "",
            "home_player_Y4": "",
            "home_player_Y5": "",
            "home_player_Y6": "",
            "home_player_Y7": "",
            "home_player_Y8": "",
            "home_player_Y9": "",
            "home_player_Y10": "",
            "home_player_Y11": "",
            "away_player_Y1": "",
            "away_player_Y2": "",
            "away_player_Y3": "",
            "away_player_Y4": "",
            "away_player_Y5": "",
            "away_player_Y6": "",
            "away_player_Y7": "",
            "away_player_Y8": "",
            "away_player_Y9": "",
            "away_player_Y10": "",
            "away_player_Y11": "",
            "home_player_1": "",
            "home_player_2": "",
            "home_player_3": "",
            "home_player_4": "",
            "home_player_5": "",
            "home_player_6": "",
            "home_player_7": "",
            "home_player_8": "",
            "home_player_9": "",
            "home_player_10": "",
            "home_player_11": "",
            "away_player_1": "",
            "away_player_2": "",
            "away_player_3": "",
            "away_player_4": "",
            "away_player_5": "",
            "away_player_6": "",
            "away_player_7": "",
            "away_player_8": "",
            "away_player_9": "",
            "away_player_10": "",
            "away_player_11": "",
            "goal": "the goal of the match",
            "shoton": "the shot on goal of the match",
            "shotoff": "the shot off goal of the match, which is the opposite of shot on",
            "foulcommit": "the fouls occurred in the match",
            "card": "the cards given in the match",
            "cross": "Balls sent into the opposition team's area from a wide position in the match",
            "corner": "Ball goes out of play for a corner kick in the match",
            "possession": "The duration from a player taking over the ball in the match",
            "B365H": "",
            "B365D": "",
            "B365A": "",
            "BWH": "",
            "BWD": "",
            "BWA": "",
            "IWH": "",
            "IWD": "",
            "IWA": "",
            "LBH": "",
            "LBD": "",
            "LBA": "",
            "PSH": "",
            "PSD": "",
            "PSA": "",
            "WHH": "",
            "WHD": "",
            "WHA": "",
            "SJH": "",
            "SJD": "",
            "SJA": "",
            "VCH": "",
            "VCD": "",
            "VCA": "",
            "GBH": "",
            "GBD": "",
            "GBA": "",
            "BSH": "",
            "BSD": "",
            "BSA": ""
        },
        "League": {
            "id": "the unique id for leagues",
            "country_id": "the unique id for countries",
            "name": "league name"
        },
        "Country": {
            "id": "the unique id for countries",
            "name": "country name"
        },
        "Team": {
            "id": "the unique id for teams",
            "team_api_id": "the id of the team api",
            "team_fifa_api_id": "the id of the team fifa api",
            "team_long_name": "the team's long name",
            "team_short_name": "the team's short name"
        },
        "Team_Attributes": {
            "id": "the unique id for teams",
            "team_fifa_api_id": "the id of the team fifa api",
            "team_api_id": "the id of the team api",
            "date": "",
            "buildUpPlaySpeed": "the speed in which attacks are put together",
            "buildUpPlaySpeedClass": "the speed class",
            "buildUpPlayDribbling": "the tendency/ frequency of dribbling",
            "buildUpPlayDribblingClass": "the dribbling class",
            "buildUpPlayPassing": "affects passing distance and support from teammates",
            "buildUpPlayPassingClass": "the passing class",
            "buildUpPlayPositioningClass": "A team's freedom of movement in the 1st two thirds of the pitch",
            "chanceCreationPassing": "Amount of risk in pass decision and run support",
            "chanceCreationPassingClass": "the chance creation passing class",
            "chanceCreationCrossing": "The tendency / frequency of crosses into the box",
            "chanceCreationCrossingClass": "the chance creation crossing class",
            "chanceCreationShooting": "The tendency / frequency of shots taken",
            "chanceCreationShootingClass": "the chance creation shooting class",
            "chanceCreationPositioningClass": "A teams freedom of movement in the final third of the pitch",
            "defencePressure": "Affects how high up the pitch the team will start pressuring",
            "defencePressureClass": "the defence pressure class",
            "defenceAggression": "Affect the teams approach to tackling the ball possessor",
            "defenceAggressionClass": "the defence aggression class",
            "defenceTeamWidth": "Affects how much the team will shift to the ball side",
            "defenceTeamWidthClass": "the defence team width class",
            "defenceDefenderLineClass": "Affects the shape and strategy of the defence"
        },
        "foreign_keys": [
            "Player.player_api_id=Player_Attributes.player_api_id",
            "Player.player_fifa_api_id=Player_Attributes.player_fifa_api_id",
            "Team.team_api_id=Team_Attributes.team_api_id",
            "Team.team_fifa_api_id=Team_Attributes.team_fifa_api_id",
            "Player.player_api_id=Match.away_player_11",
            "Player.player_api_id=Match.away_player_10",
            "Player.player_api_id=Match.away_player_9",
            "Player.player_api_id=Match.away_player_8",
            "Player.player_api_id=Match.away_player_7",
            "Player.player_api_id=Match.away_player_6",
            "Player.player_api_id=Match.away_player_5",
            "Player.player_api_id=Match.away_player_4",
            "Player.player_api_id=Match.away_player_3",
            "Player.player_api_id=Match.away_player_2",
            "Player.player_api_id=Match.away_player_1",
            "Player.player_api_id=Match.home_player_11",
            "Player.player_api_id=Match.home_player_10",
            "Player.player_api_id=Match.home_player_9",
            "Player.player_api_id=Match.home_player_8",
            "Player.player_api_id=Match.home_player_7",
            "Player.player_api_id=Match.home_player_6",
            "Player.player_api_id=Match.home_player_5",
            "Player.player_api_id=Match.home_player_4",
            "Player.player_api_id=Match.home_player_3",
            "Player.player_api_id=Match.home_player_2",
            "Player.player_api_id=Match.home_player_1",
            "Team.team_api_id=Match.away_team_api_id",
            "Team.team_api_id=Match.home_team_api_id",
            "Country.id=League.country_id"
        ]
    },
    "student_club": {
        "event": {
            "event_id": "",
            "event_name": "",
            "event_date": "",
            "type": "",
            "notes": "",
            "location": "",
            "status": ""
        },
        "major": {
            "major_id": "",
            "major_name": "",
            "department": "",
            "college": ""
        },
        "zip_code": {
            "zip_code": "",
            "type": "",
            "city": "",
            "county": "",
            "state": "",
            "short_state": ""
        },
        "attendance": {
            "link_to_event": "",
            "link_to_member": ""
        },
        "budget": {
            "budget_id": "",
            "category": "",
            "spent": "",
            "remaining": "",
            "amount": "",
            "event_status": "",
            "link_to_event": ""
        },
        "expense": {
            "expense_id": "",
            "expense_description": "",
            "expense_date": "",
            "cost": "",
            "approved": "",
            "link_to_member": "",
            "link_to_budget": ""
        },
        "income": {
            "income_id": "",
            "date_received": "",
            "amount": "",
            "source": "",
            "notes": "",
            "link_to_member": ""
        },
        "member": {
            "member_id": "",
            "first_name": "",
            "last_name": "",
            "email": "",
            "position": "",
            "t_shirt_size": "",
            "phone": "",
            "zip": "",
            "link_to_major": ""
        },
        "foreign_keys": [
            "event.event_id=budget.link_to_event",
            "member.member_id=attendance.link_to_member",
            "event.event_id=attendance.link_to_event",
            "member.member_id=expense.link_to_member",
            "budget.budget_id=expense.link_to_budget",
            "member.member_id=income.link_to_member",
            "zip_code.zip_code=member.zip",
            "major.major_id=member.link_to_major"
        ]
    },
    "toxicology": {
        "atom": {
            "atom_id": "the unique id of atoms",
            "molecule_id": "identifying the molecule to which the atom belongs",
            "element": "the element of the toxicology"
        },
        "bond": {
            "bond_id": "unique id representing bonds",
            "molecule_id": "identifying the molecule in which the bond appears",
            "bond_type": "type of the bond"
        },
        "connected": {
            "atom_id": "id of the first atom",
            "atom_id2": "id of the second atom",
            "bond_id": "bond id representing bond between two atoms"
        },
        "molecule": {
            "molecule_id": "unique id of molecule",
            "label": "whether this molecule is carcinogenic or not"
        },
        "foreign_keys": [
            "molecule.molecule_id=atom.molecule_id",
            "molecule.molecule_id=bond.molecule_id",
            "bond.bond_id=connected.bond_id",
            "atom.atom_id=connected.atom_id2",
            "atom.atom_id=connected.atom_id"
        ]
    },
    "thrombosis_prediction": {
        "Examination": {
            "ID": "identification of the patient",
            "Examination Date": "",
            "aCL IgG": "anti-Cardiolipin antibody (IgG) concentration",
            "aCL IgM": "anti-Cardiolipin antibody (IgM) concentration",
            "ANA": "anti-nucleus antibody concentration",
            "ANA Pattern": "pattern observed in the sheet of ANA examination",
            "aCL IgA": "anti-Cardiolipin antibody (IgA) concentration",
            "Diagnosis": "disease names",
            "KCT": "measure of degree of coagulation",
            "RVVT": "measure of degree of coagulation",
            "LAC": "measure of degree of coagulation",
            "Symptoms": "other symptoms observed",
            "Thrombosis": "degree of thrombosis"
        },
        "Patient": {
            "ID": "identification of the patient",
            "SEX": "",
            "Birthday": "",
            "Description": "the first date when a patient data was recorded",
            "First Date": "",
            "Admission": "patient was admitted to the hospital (+) or followed at the outpatient clinic (-)",
            "Diagnosis": "disease names"
        },
        "Laboratory": {
            "ID": "identification of the patient",
            "Date": "Date of the laboratory tests (YYMMDD)",
            "GOT": "AST glutamic oxaloacetic transaminase",
            "GPT": "ALT glutamic pyruvic transaminase",
            "LDH": "lactate dehydrogenase",
            "ALP": "alkaliphophatase",
            "TP": "total protein",
            "ALB": "albumin",
            "UA": "uric acid",
            "UN": "urea nitrogen",
            "CRE": "creatinine",
            "T-BIL": "total bilirubin",
            "T-CHO": "total cholesterol",
            "TG": "triglyceride",
            "CPK": "creatinine phosphokinase",
            "GLU": "blood glucose",
            "WBC": "White blood cell",
            "RBC": "Red blood cell",
            "HGB": "Hemoglobin",
            "HCT": "Hematoclit",
            "PLT": "platelet",
            "PT": "prothrombin time",
            "APTT": "activated partial prothrombin time",
            "FG": "fibrinogen",
            "PIC": "",
            "TAT": "",
            "TAT2": "",
            "U-PRO": "proteinuria",
            "IGG": "Ig G",
            "IGA": "Ig A",
            "IGM": "Ig M",
            "CRP": "C-reactive protein",
            "RA": "Rhuematoid Factor",
            "RF": "RAHA",
            "C3": "complement 3",
            "C4": "complement 4",
            "RNP": "anti-ribonuclear protein",
            "SM": "anti-SM",
            "SC170": "",
            "SSA": "anti-SSA",
            "SSB": "anti-SSB",
            "CENTROMEA": "anti-centromere",
            "DNA": "anti-DNA",
            "DNA-II": "anti-DNA"
        },
        "directors": {
            "directorid": "",
            "d_quality": "",
            "avg_revenue": ""
        },
        "movies": {
            "movieid": "",
            "year": "",
            "isEnglish": "",
            "country": "",
            "runningtime": ""
        },
        "foreign_keys": [
            "Patient.ID=Examination.ID",
            "Patient.ID=Laboratory.ID"
        ]
    },
    "formula_1": {
        "circuits": {
            "circuitId": "",
            "circuitRef": "circuit reference name",
            "name": "",
            "location": "",
            "country": "",
            "lat": "",
            "lng": "",
            "alt": "",
            "url": ""
        },
        "constructors": {
            "constructorId": "",
            "constructorRef": "",
            "name": "",
            "nationality": "",
            "url": ""
        },
        "drivers": {
            "driverId": "",
            "driverRef": "",
            "number": "",
            "code": "",
            "forename": "",
            "surname": "",
            "dob": "",
            "nationality": "",
            "url": ""
        },
        "seasons": {
            "year": "",
            "url": ""
        },
        "races": {
            "raceId": "",
            "year": "",
            "round": "",
            "circuitId": "",
            "name": "",
            "date": "",
            "time": "",
            "url": ""
        },
        "constructorResults": {
            "constructorResultsId": "constructor Results Id",
            "raceId": "race id",
            "constructorId": "constructor id",
            "points": "",
            "status": ""
        },
        "constructorStandings": {
            "constructorStandingsId": "",
            "raceId": "",
            "constructorId": "",
            "points": "how many points acquired in each race",
            "position": "",
            "positionText": "",
            "wins": ""
        },
        "driverStandings": {
            "driverStandingsId": "",
            "raceId": "",
            "driverId": "",
            "points": "",
            "position": "",
            "positionText": "",
            "wins": ""
        },
        "lapTimes": {
            "raceId": "",
            "driverId": "",
            "lap": "",
            "position": "",
            "time": "",
            "milliseconds": ""
        },
        "pitStops": {
            "raceId": "",
            "driverId": "",
            "stop": "",
            "lap": "",
            "time": "",
            "duration": "",
            "milliseconds": ""
        },
        "qualifying": {
            "qualifyId": "",
            "raceId": "",
            "driverId": "",
            "constructorId": "",
            "number": "",
            "position": "",
            "q1": "",
            "q2": "",
            "q3": ""
        },
        "status": {
            "statusId": "",
            "status": ""
        },
        "results": {
            "resultId": "the unique identification number identifying race result",
            "raceId": "the identification number identifying the race",
            "driverId": "",
            "constructorId": "",
            "number": "",
            "grid": "",
            "position": "",
            "positionText": "",
            "positionOrder": "",
            "points": "",
            "laps": "",
            "time": "",
            "milliseconds": "",
            "fastestLap": "",
            "rank": "",
            "fastestLapTime": "",
            "fastestLapSpeed": "",
            "statusId": ""
        },
        "foreign_keys": [
            "circuits.circuitId=races.circuitId",
            "seasons.year=races.year",
            "constructors.constructorId=constructorResults.constructorId",
            "races.raceId=constructorResults.raceId",
            "constructors.constructorId=constructorStandings.constructorId",
            "races.raceId=constructorStandings.raceId",
            "drivers.driverId=driverStandings.driverId",
            "races.raceId=driverStandings.raceId",
            "drivers.driverId=lapTimes.driverId",
            "races.raceId=lapTimes.raceId",
            "drivers.driverId=pitStops.driverId",
            "races.raceId=pitStops.raceId",
            "constructors.constructorId=qualifying.constructorId",
            "drivers.driverId=qualifying.driverId",
            "races.raceId=qualifying.raceId",
            "status.statusId=results.statusId",
            "constructors.constructorId=results.constructorId",
            "drivers.driverId=results.driverId",
            "races.raceId=results.raceId"
        ]
    },
    "california_schools": {
        "frpm": {
            "CDSCode": "",
            "Academic Year": "",
            "County Code": "",
            "District Code": "",
            "School Code": "",
            "County Name": "County Code",
            "District Name": "",
            "School Name": "",
            "District Type": "",
            "School Type": "",
            "Educational Option Type": "",
            "NSLP Provision Status": "",
            "Charter School (Y/N)": "",
            "Charter School Number": "",
            "Charter Funding Type": "",
            "IRC": "",
            "Low Grade": "",
            "High Grade": "",
            "Enrollment (K-12)": "",
            "Free Meal Count (K-12)": "",
            "Percent (%) Eligible Free (K-12)": "",
            "FRPM Count (K-12)": "Free or Reduced Price Meal Count (K-12)",
            "Percent (%) Eligible FRPM (K-12)": "",
            "Enrollment (Ages 5-17)": "",
            "Free Meal Count (Ages 5-17)": "",
            "Percent (%) Eligible Free (Ages 5-17)": "",
            "FRPM Count (Ages 5-17)": "",
            "Percent (%) Eligible FRPM (Ages 5-17)": "",
            "2013-14 CALPADS Fall 1 Certification Status": ""
        },
        "satscores": {
            "cds": "California Department Schools",
            "rtype": "",
            "sname": "school name",
            "dname": "district segment",
            "cname": "county name",
            "enroll12": "enrollment (1st-12nd grade)",
            "NumTstTakr": "Number of Test Takers in this school",
            "AvgScrRead": "average scores in Reading",
            "AvgScrMath": "average scores in Math",
            "AvgScrWrite": "average scores in writing",
            "NumGE1500": "Number of Test Takers Whose Total SAT Scores Are Greater or Equal to 1500"
        },
        "schools": {
            "CDSCode": "",
            "NCESDist": "This field represents the 7-digit National Center for Educational Statistics (NCES) school district identification number. The first 2 digits identify the state and the last 5 digits identify the school district. Combined, they make a unique 7-digit ID for each school district.",
            "NCESSchool": "This field represents the 5-digit NCES school identification number. The NCESSchool combined with the NCESDist form a unique 12-digit ID for each school.",
            "StatusType": "This field identifies the status of the district.",
            "County": "County name",
            "District": "",
            "School": "",
            "Street": "",
            "StreetAbr": "The abbreviated street address of the school, district, or administrative authorityâs physical location.",
            "City": "",
            "Zip": "",
            "State": "",
            "MailStreet": "",
            "MailStrAbr": "",
            "MailCity": "",
            "MailZip": "",
            "MailState": "",
            "Phone": "",
            "Ext": "The phone number extension of the school, district, or administrative authority.",
            "Website": "The website address of the school, district, or administrative authority.",
            "OpenDate": "The date the school opened.",
            "ClosedDate": "The date the school closed.",
            "Charter": "This field identifies a charter school.",
            "CharterNum": "The charter school number,",
            "FundingType": "Indicates the charter school funding type",
            "DOC": "District Ownership Code",
            "DOCType": "The District Ownership Code Type is the text description of the DOC category.",
            "SOC": "The School Ownership Code is a numeric code used to identify the type of school.",
            "SOCType": "The School Ownership Code Type is the text description of the type of school.",
            "EdOpsCode": "The Education Option Code is a short text description of the type of education offered.",
            "EdOpsName": "Educational Option Name",
            "EILCode": "The Educational Instruction Level Code is a short text description of the institution's type relative to the grade range served.",
            "EILName": "The Educational Instruction Level Name is the long text description of the institutionâs type relative to the grade range served.",
            "GSoffered": "The grade span offered is the lowest grade and the highest grade offered or supported by the school, district, or administrative authority. This field might differ from the grade span served as reported in the most recent certified California Longitudinal Pupil Achievement (CALPADS) Fall 1 data collection.",
            "GSserved": "It is the lowest grade and the highest grade of student enrollment as reported in the most recent certified CALPADS Fall 1 data collection. Only Kâ12 enrollment is reported through CALPADS. This field may differ from the grade span offered.",
            "Virtual": "This field identifies the type of virtual instruction offered by the school. Virtual instruction is instruction in which students and teachers are separated by time and/or location, and interaction occurs via computers and/or telecommunications technologies.",
            "Magnet": "This field identifies whether a school is a magnet school and/or provides a magnet program.",
            "Latitude": "The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the equator measured north to south.",
            "Longitude": "The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the prime meridian (Greenwich, England) measured from west to east.",
            "AdmFName1": "administrator's first name",
            "AdmLName1": "administrator's last name",
            "AdmEmail1": "administrator's email address",
            "AdmFName2": "",
            "AdmLName2": "",
            "AdmEmail2": "",
            "AdmFName3": "",
            "AdmLName3": "",
            "AdmEmail3": "",
            "LastUpdate": ""
        },
        "foreign_keys": [
            "schools.CDSCode=frpm.CDSCode",
            "schools.CDSCode=satscores.cds"
        ]
    },
    "card_games": {
        "sets": {
            "id": "",
            "baseSetSize": "",
            "block": "",
            "booster": "",
            "code": "",
            "isFoilOnly": "",
            "isForeignOnly": "",
            "isNonFoilOnly": "",
            "isOnlineOnly": "",
            "isPartialPreview": "",
            "keyruneCode": "",
            "mcmId": "",
            "mcmIdExtras": "",
            "mcmName": "",
            "mtgoCode": "",
            "name": "",
            "parentCode": "",
            "releaseDate": "",
            "tcgplayerGroupId": "",
            "totalSetSize": "",
            "type": ""
        },
        "set_translations": {
            "id": "",
            "language": "",
            "setCode": "",
            "translation": ""
        },
        "cards": {
            "id": "",
            "artist": "The name of the artist that illustrated the card art.",
            "asciiName": "The ASCII(opens new window) (Basic/128) code formatted card name with no special unicode characters.",
            "availability": "A list of the card's available printing types.",
            "borderColor": "The color of the card border.",
            "cardKingdomFoilId": "card Kingdom Foil Id",
            "cardKingdomId": "card Kingdom Id",
            "colorIdentity": "A list of all the colors found in manaCost, colorIndicator, and text",
            "colorIndicator": "A list of all the colors in the color indicator (The symbol prefixed to a card's types).",
            "colors": "A list of all the colors in manaCost and colorIndicator.",
            "convertedManaCost": "The converted mana cost of the card. Use the manaValue property.",
            "duelDeck": "The indicator for which duel deck the card is in.",
            "edhrecRank": "The card rank on EDHRec",
            "faceConvertedManaCost": "The converted mana cost or mana value for the face for either half or part of the card.",
            "faceName": "The name on the face of the card.",
            "flavorName": "The promotional card name printed above the true card name on special cards that has no game function.",
            "flavorText": "The italicized text found below the rules text that has no game function.",
            "frameEffects": "The visual frame effects.",
            "frameVersion": "The version of the card frame style.",
            "hand": "The starting maximum hand size total modifier.",
            "hasAlternativeDeckLimit": "If the card allows a value other than 4 copies in a deck.",
            "hasContentWarning": "If the card marked by Wizards of the Coast (opens new window) for having sensitive content. See this official article (opens new window) for more information.",
            "hasFoil": "If the card can be found in foil",
            "hasNonFoil": "If the card can be found in non-foil",
            "isAlternative": "If the card is an alternate variation to an original printing",
            "isFullArt": "If the card has full artwork.",
            "isOnlineOnly": "If the card is only available in online game variations.",
            "isOversized": "If the card is oversized.",
            "isPromo": "If the card is a promotional printing.",
            "isReprint": "If the card has been reprinted.",
            "isReserved": "If the card is on the Magic: The Gathering Reserved List (opens new window)",
            "isStarter": "If the card is found in a starter deck such as Planeswalker/Brawl decks.",
            "isStorySpotlight": "If the card is a Story Spotlight card.",
            "isTextless": "If the card does not have a text box.",
            "isTimeshifted": "If the card is time shifted",
            "keywords": "A list of keywords found on the card.",
            "layout": "The type of card layout. For a token card, this will be \"token\"",
            "leadershipSkills": "A list of formats the card is legal to be a commander in",
            "life": "The starting life total modifier. A plus or minus character precedes an integer.",
            "loyalty": "The starting loyalty value of the card.",
            "manaCost": "The mana cost of the card wrapped in brackets for each value.",
            "mcmId": "",
            "mcmMetaId": "",
            "mtgArenaId": "",
            "mtgjsonV4Id": "",
            "mtgoFoilId": "",
            "mtgoId": "",
            "multiverseId": "",
            "name": "The name of the card.",
            "number": "The number of the card",
            "originalReleaseDate": "original Release Date",
            "originalText": "original Text",
            "originalType": "original Type",
            "otherFaceIds": "other Face Ids",
            "power": "The power of the card.",
            "printings": "A list of set printing codes the card was printed in, formatted in uppercase.",
            "promoTypes": "A list of promotional types for a card.",
            "purchaseUrls": "Links that navigate to websites where the card can be purchased.",
            "rarity": "The card printing rarity.",
            "scryfallId": "",
            "scryfallIllustrationId": "",
            "scryfallOracleId": "",
            "setCode": "The set printing code that the card is from.",
            "side": "The identifier of the card side.",
            "subtypes": "A list of card subtypes found after em-dash.",
            "supertypes": "A list of card supertypes found before em-dash.",
            "tcgplayerProductId": "",
            "text": "The rules text of the card.",
            "toughness": "The toughness of the card.",
            "type": "The type of the card as visible, including any supertypes and subtypes.",
            "types": "A list of all card types of the card, including Unâsets and gameplay variants.",
            "uuid": "The universal unique identifier (v5) generated by MTGJSON. Each entry is unique.",
            "variations": "",
            "watermark": "The name of the watermark on the card."
        },
        "foreign_data": {
            "id": "unique id number identifying this row of data",
            "flavorText": "The foreign flavor text of the card.",
            "language": "The foreign language of card.",
            "multiverseid": "The foreign multiverse identifier of the card.",
            "name": "The foreign name of the card.",
            "text": "The foreign text ruling of the card.",
            "type": "The foreign type of the card. Includes any supertypes and subtypes.",
            "uuid": ""
        },
        "legalities": {
            "id": "unique id identifying this legality",
            "format": "format of play",
            "status": "",
            "uuid": ""
        },
        "rulings": {
            "id": "",
            "date": "",
            "text": "",
            "uuid": ""
        },
        "rulings_dg_tmp": {
            "id": "",
            "date": "",
            "text": "",
            "uuid": ""
        },
        "foreign_keys": [
            "sets.code=set_translations.setCode",
            "cards.uuid=foreign_data.uuid",
            "cards.uuid=legalities.uuid",
            "cards.uuid=rulings.uuid"
        ]
    }
}